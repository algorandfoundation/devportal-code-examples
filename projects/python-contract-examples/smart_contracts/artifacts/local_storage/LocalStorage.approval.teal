#pragma version 10

smart_contracts.local_storage.contract.LocalStorage.approval_program:
    callsub __puya_arc4_router__
    return


// smart_contracts.local_storage.contract.LocalStorage.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@16
    method "contains_local_data(account)bool"
    method "contains_local_data_example(account)bool"
    method "get_item_local_data(account)uint64"
    method "get_local_data_with_default_int(account)uint64"
    method "maybe_local_data(account)(uint64,bool)"
    method "get_item_local_data_example(account)bool"
    method "get_local_data_with_default(account)bool"
    method "maybe_local_data_example(account)bool"
    method "set_local_int(account,uint64)void"
    method "set_local_data_example(account,asset,account,application,byte[],bool)bool"
    method "delete_local_data(account)void"
    method "delete_local_data_example(account)bool"
    txna ApplicationArgs 0
    match __puya_arc4_router___contains_local_data_route@2 __puya_arc4_router___contains_local_data_example_route@3 __puya_arc4_router___get_item_local_data_route@4 __puya_arc4_router___get_local_data_with_default_int_route@5 __puya_arc4_router___maybe_local_data_route@6 __puya_arc4_router___get_item_local_data_example_route@7 __puya_arc4_router___get_local_data_with_default_route@8 __puya_arc4_router___maybe_local_data_example_route@9 __puya_arc4_router___set_local_int_route@10 __puya_arc4_router___set_local_data_example_route@11 __puya_arc4_router___delete_local_data_route@12 __puya_arc4_router___delete_local_data_example_route@13
    int 0
    retsub

__puya_arc4_router___contains_local_data_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    callsub contains_local_data
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___contains_local_data_example_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    callsub contains_local_data_example
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___get_item_local_data_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    callsub get_item_local_data
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___get_local_data_with_default_int_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    callsub get_local_data_with_default_int
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___maybe_local_data_route@6:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    callsub maybe_local_data
    swap
    itob
    byte 0x00
    int 0
    uncover 3
    setbit
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___get_item_local_data_example_route@7:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    callsub get_item_local_data_example
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___get_local_data_with_default_route@8:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    callsub get_local_data_with_default
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___maybe_local_data_example_route@9:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    callsub maybe_local_data_example
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___set_local_int_route@10:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    btoi
    callsub set_local_int
    int 1
    retsub

__puya_arc4_router___set_local_data_example_route@11:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    txna ApplicationArgs 2
    btoi
    txnas Assets
    txna ApplicationArgs 3
    btoi
    txnas Accounts
    txna ApplicationArgs 4
    btoi
    txnas Applications
    txna ApplicationArgs 5
    extract 2 0
    txna ApplicationArgs 6
    int 0
    getbit
    callsub set_local_data_example
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___delete_local_data_route@12:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    callsub delete_local_data
    int 1
    retsub

__puya_arc4_router___delete_local_data_example_route@13:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    txnas Accounts
    callsub delete_local_data_example
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___bare_routing@16:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@20
    txn ApplicationID
    !
    assert // is creating
    int 1
    retsub

__puya_arc4_router___after_if_else@20:
    int 0
    retsub


// smart_contracts.local_storage.contract.LocalStorage.contains_local_data(for_account: bytes) -> uint64:
contains_local_data:
    proto 1 1
    frame_dig -1
    int 0
    byte "local_int"
    app_local_get_ex
    bury 1
    assert
    int 1
    retsub


// smart_contracts.local_storage.contract.LocalStorage.contains_local_data_example(for_account: bytes) -> uint64:
contains_local_data_example:
    proto 1 1
    frame_dig -1
    int 0
    byte "local_int"
    app_local_get_ex
    bury 1
    assert
    frame_dig -1
    int 0
    byte "local_bytes"
    app_local_get_ex
    bury 1
    assert
    frame_dig -1
    int 0
    byte "local_bool"
    app_local_get_ex
    bury 1
    assert
    frame_dig -1
    int 0
    byte "local_asset"
    app_local_get_ex
    bury 1
    assert
    frame_dig -1
    int 0
    byte "local_application"
    app_local_get_ex
    bury 1
    assert
    frame_dig -1
    int 0
    byte "local_account"
    app_local_get_ex
    bury 1
    assert
    int 1
    retsub


// smart_contracts.local_storage.contract.LocalStorage.get_item_local_data(for_account: bytes) -> uint64:
get_item_local_data:
    proto 1 1
    frame_dig -1
    int 0
    byte "local_int"
    app_local_get_ex
    assert // check self.local_int exists for account
    retsub


// smart_contracts.local_storage.contract.LocalStorage.get_local_data_with_default_int(for_account: bytes) -> uint64:
get_local_data_with_default_int:
    proto 1 1
    frame_dig -1
    int 0
    byte "local_int"
    app_local_get_ex
    int 0
    cover 2
    select
    retsub


// smart_contracts.local_storage.contract.LocalStorage.maybe_local_data(for_account: bytes) -> uint64, uint64:
maybe_local_data:
    proto 1 2
    frame_dig -1
    int 0
    byte "local_int"
    app_local_get_ex
    dup
    uncover 2
    swap
    bnz maybe_local_data_after_if_else@2
    int 0
    frame_bury 1

maybe_local_data_after_if_else@2:
    frame_dig 1
    frame_dig 0
    uncover 3
    uncover 3
    retsub


// smart_contracts.local_storage.contract.LocalStorage.get_item_local_data_example(for_account: bytes) -> uint64:
get_item_local_data_example:
    proto 1 1
    frame_dig -1
    int 0
    byte "local_int"
    app_local_get_ex
    assert // check self.local_int exists for account
    int 10
    ==
    assert
    frame_dig -1
    int 0
    byte "local_bytes"
    app_local_get_ex
    assert // check self.local_bytes exists for account
    byte 0x48656c6c6f
    ==
    assert
    frame_dig -1
    int 0
    byte "local_bool"
    app_local_get_ex
    assert // check self.local_bool exists for account
    assert
    frame_dig -1
    int 0
    byte "local_asset"
    app_local_get_ex
    assert // check self.local_asset exists for account
    int 10
    ==
    assert
    frame_dig -1
    int 0
    byte "local_application"
    app_local_get_ex
    assert // check self.local_application exists for account
    int 10
    ==
    assert
    frame_dig -1
    int 0
    byte "local_account"
    app_local_get_ex
    assert // check self.local_account exists for account
    int 0
    assert // Address length is 32 bytes
    byte 0x48656c6c6f
    ==
    assert
    int 1
    retsub


// smart_contracts.local_storage.contract.LocalStorage.get_local_data_with_default(for_account: bytes) -> uint64:
get_local_data_with_default:
    proto 1 1
    frame_dig -1
    int 0
    byte "local_int"
    app_local_get_ex
    int 0
    cover 2
    select
    int 10
    ==
    assert
    frame_dig -1
    int 0
    byte "local_bytes"
    app_local_get_ex
    byte 0x44656661756c742056616c7565
    cover 2
    select
    byte 0x48656c6c6f
    ==
    assert
    frame_dig -1
    int 0
    byte "local_bool"
    app_local_get_ex
    int 0
    cover 2
    select
    assert
    frame_dig -1
    int 0
    byte "local_asset"
    app_local_get_ex
    int 0
    cover 2
    select
    int 10
    ==
    assert
    frame_dig -1
    int 0
    byte "local_application"
    app_local_get_ex
    int 0
    cover 2
    select
    int 10
    ==
    assert
    int 0
    assert // Address length is 32 bytes
    frame_dig -1
    int 0
    byte "local_account"
    app_local_get_ex
    byte 0x44656661756c742056616c7565
    cover 2
    select
    byte 0x48656c6c6f
    ==
    assert
    int 1
    retsub


// smart_contracts.local_storage.contract.LocalStorage.maybe_local_data_example(for_account: bytes) -> uint64:
maybe_local_data_example:
    proto 1 1
    frame_dig -1
    int 0
    byte "local_int"
    app_local_get_ex
    assert // no data for account
    int 10
    ==
    assert
    frame_dig -1
    int 0
    byte "local_bytes"
    app_local_get_ex
    assert // no data for account
    byte 0x48656c6c6f
    ==
    assert
    frame_dig -1
    int 0
    byte "local_bool"
    app_local_get_ex
    assert // no data for account
    assert
    frame_dig -1
    int 0
    byte "local_asset"
    app_local_get_ex
    assert // no data for account
    int 10
    ==
    assert
    frame_dig -1
    int 0
    byte "local_application"
    app_local_get_ex
    assert // no data for account
    int 10
    ==
    assert
    frame_dig -1
    int 0
    byte "local_account"
    app_local_get_ex
    assert // no data for account
    int 0
    assert // Address length is 32 bytes
    byte 0x48656c6c6f
    ==
    assert
    int 1
    retsub


// smart_contracts.local_storage.contract.LocalStorage.set_local_int(for_account: bytes, value: uint64) -> void:
set_local_int:
    proto 2 0
    frame_dig -2
    byte "local_int"
    frame_dig -1
    app_local_put
    retsub


// smart_contracts.local_storage.contract.LocalStorage.set_local_data_example(for_account: bytes, value_asset: uint64, value_account: bytes, value_appln: uint64, value_byte: bytes, value_bool: uint64) -> uint64:
set_local_data_example:
    proto 6 1
    frame_dig -6
    byte "local_bytes"
    frame_dig -2
    app_local_put
    frame_dig -6
    int 0
    byte "local_bytes"
    app_local_get_ex
    assert // check self.local_bytes exists for account
    frame_dig -2
    ==
    assert
    frame_dig -6
    byte "local_bool"
    frame_dig -1
    app_local_put
    frame_dig -6
    int 0
    byte "local_bool"
    app_local_get_ex
    assert // check self.local_bool exists for account
    frame_dig -1
    ==
    assert
    frame_dig -6
    byte "local_asset"
    frame_dig -5
    app_local_put
    frame_dig -6
    int 0
    byte "local_asset"
    app_local_get_ex
    assert // check self.local_asset exists for account
    frame_dig -5
    ==
    assert
    frame_dig -6
    byte "local_application"
    frame_dig -3
    app_local_put
    frame_dig -6
    int 0
    byte "local_application"
    app_local_get_ex
    assert // check self.local_application exists for account
    frame_dig -3
    ==
    assert
    frame_dig -6
    byte "local_account"
    frame_dig -4
    app_local_put
    frame_dig -6
    int 0
    byte "local_account"
    app_local_get_ex
    assert // check self.local_account exists for account
    frame_dig -4
    ==
    assert
    int 1
    retsub


// smart_contracts.local_storage.contract.LocalStorage.delete_local_data(for_account: bytes) -> void:
delete_local_data:
    proto 1 0
    frame_dig -1
    byte "local_account"
    app_local_del
    retsub


// smart_contracts.local_storage.contract.LocalStorage.delete_local_data_example(for_account: bytes) -> uint64:
delete_local_data_example:
    proto 1 1
    frame_dig -1
    byte "local_int"
    app_local_del
    frame_dig -1
    byte "local_bytes"
    app_local_del
    frame_dig -1
    byte "local_bool"
    app_local_del
    frame_dig -1
    byte "local_asset"
    app_local_del
    frame_dig -1
    byte "local_application"
    app_local_del
    frame_dig -1
    byte "local_account"
    app_local_del
    int 1
    retsub
