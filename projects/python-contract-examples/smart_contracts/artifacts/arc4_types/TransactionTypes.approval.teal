#pragma version 10

smart_contracts.arc4_types.contract.TransactionTypes.approval_program:
    callsub __puya_arc4_router__
    return


// smart_contracts.arc4_types.contract.TransactionTypes.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@6
    method "payment_txn(pay)uint64"
    method "asset_transfer_txn(axfer)uint64"
    txna ApplicationArgs 0
    match __puya_arc4_router___payment_txn_route@2 __puya_arc4_router___asset_transfer_txn_route@3
    int 0
    retsub

__puya_arc4_router___payment_txn_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txn GroupIndex
    int 1
    -
    dup
    gtxns TypeEnum
    int pay
    ==
    assert // transaction type is pay
    callsub payment_txn
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___asset_transfer_txn_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txn GroupIndex
    int 1
    -
    dup
    gtxns TypeEnum
    int axfer
    ==
    assert // transaction type is axfer
    callsub asset_transfer_txn
    itob
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___bare_routing@6:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@10
    txn ApplicationID
    !
    assert // is creating
    int 1
    retsub

__puya_arc4_router___after_if_else@10:
    int 0
    retsub


// smart_contracts.arc4_types.contract.TransactionTypes.payment_txn(pay: uint64) -> uint64:
payment_txn:
    proto 1 1
    frame_dig -1
    gtxns Amount
    dup
    assert
    frame_dig -1
    gtxns Receiver
    global CurrentApplicationAddress
    ==
    assert
    frame_dig -1
    gtxns Sender
    txn Sender
    ==
    assert
    retsub


// smart_contracts.arc4_types.contract.TransactionTypes.asset_transfer_txn(asset_transfer: uint64) -> uint64:
asset_transfer_txn:
    proto 1 1
    global CurrentApplicationAddress
    frame_dig -1
    gtxns XferAsset
    asset_holding_get AssetBalance
    bury 1
    assert // Asset not opted in
    frame_dig -1
    gtxns AssetAmount
    dup
    assert
    frame_dig -1
    gtxns AssetReceiver
    global CurrentApplicationAddress
    ==
    assert
    frame_dig -1
    gtxns Sender
    txn Sender
    ==
    assert
    retsub
