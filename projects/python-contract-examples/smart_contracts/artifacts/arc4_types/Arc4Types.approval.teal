#pragma version 10

smart_contracts.arc4_types.contract.Arc4Types.approval_program:
    callsub __puya_arc4_router__
    return


// smart_contracts.arc4_types.contract.Arc4Types.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@6
    method "arc4_uint64(uint64,uint64)uint64"
    method "arc4_address(address)address"
    txna ApplicationArgs 0
    match __puya_arc4_router___arc4_uint64_route@2 __puya_arc4_router___arc4_address_route@3
    int 0
    retsub

__puya_arc4_router___arc4_uint64_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    callsub arc4_uint64
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___arc4_address_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    callsub arc4_address
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___bare_routing@6:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@10
    txn ApplicationID
    !
    assert // is creating
    int 1
    retsub

__puya_arc4_router___after_if_else@10:
    int 0
    retsub


// smart_contracts.arc4_types.contract.Arc4Types.arc4_uint64(a: bytes, b: bytes) -> bytes:
arc4_uint64:
    proto 2 1
    frame_dig -2
    btoi
    frame_dig -1
    btoi
    +
    itob
    retsub


// smart_contracts.arc4_types.contract.Arc4Types.arc4_address(address: bytes) -> bytes:
arc4_address:
    proto 1 1
    frame_dig -1
    acct_params_get AcctBalance
    bury 1
    assert // account funded
    frame_dig -1
    acct_params_get AcctTotalAssets
    bury 1
    assert // account funded
    frame_dig -1
    retsub
