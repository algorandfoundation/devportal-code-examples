#pragma version 10

smart_contracts.control_flow.contract.MatchStatements.approval_program:
    callsub __puya_arc4_router__
    return


// smart_contracts.control_flow.contract.MatchStatements.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@5
    method "get_day(uint64)string"
    txna ApplicationArgs 0
    match __puya_arc4_router___get_day_route@2
    int 0
    retsub

__puya_arc4_router___get_day_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    btoi
    callsub get_day
    dup
    len
    itob
    extract 6 2
    swap
    concat
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___bare_routing@5:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@9
    txn ApplicationID
    !
    assert // is creating
    int 1
    retsub

__puya_arc4_router___after_if_else@9:
    int 0
    retsub


// smart_contracts.control_flow.contract.MatchStatements.get_day(date: uint64) -> bytes:
get_day:
    proto 1 1
    frame_dig -1
    switch get_day_switch_case_default@8 get_day_switch_case_0@1 get_day_switch_case_1@2 get_day_switch_case_2@3 get_day_switch_case_3@4 get_day_switch_case_4@5 get_day_switch_case_5@6 get_day_switch_case_6@7
    byte "Invalid day"
    retsub

get_day_switch_case_0@1:
    byte "Monday"
    retsub

get_day_switch_case_1@2:
    byte "Tuesday"
    retsub

get_day_switch_case_2@3:
    byte "Wednesday"
    retsub

get_day_switch_case_3@4:
    byte "Thursday"
    retsub

get_day_switch_case_4@5:
    byte "Friday"
    retsub

get_day_switch_case_5@6:
    byte "Saturday"
    retsub

get_day_switch_case_6@7:
    byte "Sunday"
    retsub

get_day_switch_case_default@8:
    byte "Invalid day"
    retsub
