#pragma version 10

smart_contracts.control_flow.contract.ForLoopsExample.approval_program:
    callsub __puya_arc4_router__
    return


// smart_contracts.control_flow.contract.ForLoopsExample.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@5
    method "for_loop()uint8[4]"
    txna ApplicationArgs 0
    match __puya_arc4_router___for_loop_route@2
    int 0
    retsub

__puya_arc4_router___for_loop_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub for_loop
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___bare_routing@5:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@9
    txn ApplicationID
    !
    assert // is creating
    int 1
    retsub

__puya_arc4_router___after_if_else@9:
    int 0
    retsub


// smart_contracts.control_flow.contract.ForLoopsExample.for_loop() -> bytes:
for_loop:
    proto 0 1
    byte ""
    byte 0x00000000
    int 3
    int 0

for_loop_for_body@2:
    frame_dig 2
    dup
    itob
    extract 7 1
    frame_dig 3
    dup
    int 4
    <
    assert // Index access is out of bounds
    frame_dig 1
    swap
    uncover 2
    replace3
    frame_bury 1
    bz for_loop_after_for@5
    frame_dig 2
    int 1
    -
    frame_bury 2
    frame_dig 3
    int 1
    +
    frame_bury 3
    b for_loop_for_body@2

for_loop_after_for@5:
    int 0
    frame_bury 3

for_loop_for_header@6:
    frame_dig 3
    int 4
    <
    dup
    frame_bury 0
    bz for_loop_after_for@9
    frame_dig 3
    dup
    itob
    extract 7 1
    frame_dig 0
    assert // Index access is out of bounds
    frame_dig 1
    dig 2
    uncover 2
    replace3
    frame_bury 1
    int 1
    +
    frame_bury 3
    b for_loop_for_header@6

for_loop_after_for@9:
    frame_dig 1
    frame_bury 0
    retsub
