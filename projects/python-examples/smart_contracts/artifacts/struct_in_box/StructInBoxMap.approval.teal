#pragma version 10

smart_contracts.struct_in_box.contract.StructInBoxMap.approval_program:
    callsub __puya_arc4_router__
    return


// smart_contracts.struct_in_box.contract.StructInBoxMap.__puya_arc4_router__() -> uint64:
__puya_arc4_router__:
    proto 0 1
    txn NumAppArgs
    bz __puya_arc4_router___bare_routing@8
    method "box_map_test()bool"
    method "box_map_set(uint64,(string,uint64,uint64))bool"
    method "box_map_get(uint64)(string,uint64,uint64)"
    method "box_map_exists(uint64)bool"
    txna ApplicationArgs 0
    match __puya_arc4_router___box_map_test_route@2 __puya_arc4_router___box_map_set_route@3 __puya_arc4_router___box_map_get_route@4 __puya_arc4_router___box_map_exists_route@5
    int 0
    retsub

__puya_arc4_router___box_map_test_route@2:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    callsub box_map_test
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___box_map_set_route@3:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    callsub box_map_set
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___box_map_get_route@4:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    callsub box_map_get
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___box_map_exists_route@5:
    txn OnCompletion
    !
    assert // OnCompletion is NoOp
    txn ApplicationID
    assert // is not creating
    txna ApplicationArgs 1
    callsub box_map_exists
    byte 0x00
    int 0
    uncover 2
    setbit
    byte 0x151f7c75
    swap
    concat
    log
    int 1
    retsub

__puya_arc4_router___bare_routing@8:
    txn OnCompletion
    bnz __puya_arc4_router___after_if_else@12
    txn ApplicationID
    !
    assert // is creating
    int 1
    retsub

__puya_arc4_router___after_if_else@12:
    int 0
    retsub


// smart_contracts.struct_in_box.contract.StructInBoxMap.box_map_test() -> uint64:
box_map_test:
    proto 0 1
    byte 0x75736572730000000000000000
    box_del
    pop
    byte 0x75736572730000000000000000
    byte 0x0012000000000000004600000000000000020008746573744e616d65
    box_put
    byte 0x75736572730000000000000000
    box_len
    assert // check self.user_map entry exists
    int 28
    ==
    assert
    byte 0x75736572730000000000000000
    box_len
    assert // check self.user_map entry exists
    int 28
    ==
    assert
    int 1
    retsub


// smart_contracts.struct_in_box.contract.StructInBoxMap.box_map_set(key: bytes, value: bytes) -> uint64:
box_map_set:
    proto 2 1
    byte "users"
    frame_dig -2
    concat
    dup
    box_del
    pop
    dup
    frame_dig -1
    box_put
    box_get
    assert // check self.user_map entry exists
    frame_dig -1
    ==
    assert
    int 1
    retsub


// smart_contracts.struct_in_box.contract.StructInBoxMap.box_map_get(key: bytes) -> bytes:
box_map_get:
    proto 1 1
    byte "users"
    frame_dig -1
    concat
    box_get
    assert // check self.user_map entry exists
    retsub


// smart_contracts.struct_in_box.contract.StructInBoxMap.box_map_exists(key: bytes) -> uint64:
box_map_exists:
    proto 1 1
    byte "users"
    frame_dig -1
    concat
    box_len
    bury 1
    retsub
