{
    "name": "StructInBoxMap",
    "structs": {
        "UserStruct": [
            {
                "name": "name",
                "type": "string"
            },
            {
                "name": "id",
                "type": "uint64"
            },
            {
                "name": "asset",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "box_map_test",
            "args": [],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "box_map_set",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                },
                {
                    "type": "(string,uint64,uint64)",
                    "struct": "UserStruct",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "box_map_get",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                }
            ],
            "returns": {
                "type": "(string,uint64,uint64)",
                "struct": "UserStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "box_map_exists",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "user_map": {
                    "keyType": "uint64",
                    "valueType": "UserStruct",
                    "prefix": "dXNlcnM="
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        80,
                        104,
                        123,
                        150
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        176
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        83,
                        107,
                        126,
                        153
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        216,
                        222,
                        243,
                        258
                    ],
                    "errorMessage": "check self.user_map entry exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiADAQAcJgQEFR98dQ11c2VycwAAAAAAAAAAAQAFdXNlcnMxG0EAgIIEBMqtFiMEB5wnvQRqArNQBI7iw2Q2GgCOBABIAC0AGgACI0MxGRREMRhENhoBiACqKiNPAlQoTFCwIkMxGRREMRhENhoBiACIKExQsCJDMRkURDEYRDYaATYaAogAXCojTwJUKExQsCJDMRkURDEYRIgAFiojTwJUKExQsCJDMRlA/54xGBREIkMpvEgpgBwAEgAAAAAAAABGAAAAAAAAAAIACHRlc3ROYW1lvym9RCQSRCm9RCQSRCKJigIBK4v+UEm8SEmL/7++RIv/EkQiiYoBASuL/1C+RImKAQEri/9QvUUBiQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 5,
            "patch": 3
        }
    },
    "events": [],
    "templateVariables": {}
}