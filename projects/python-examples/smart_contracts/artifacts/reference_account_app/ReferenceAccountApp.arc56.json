{
    "name": "ReferenceAccountApp",
    "structs": {},
    "methods": [
        {
            "name": "get_my_counter",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_my_counter_with_arg",
            "args": [
                {
                    "type": "address",
                    "name": "acct"
                },
                {
                    "type": "uint64",
                    "name": "app"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "\n    Get the counter value from another account's local state with hardcoded values\n    @returns The counter value or 0 if it doesn't exist\n    ",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        31
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        64
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAwIDEKICAgIGJ5dGVjYmxvY2sgMHg2ZDc5NWY2MzZmNzU2ZTc0NjU3MiAweDE1MWY3Yzc1CiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FjY291bnRfYXBwL2NvbnRyYWN0LnB5OjUyCiAgICAvLyBjbGFzcyBSZWZlcmVuY2VBY2NvdW50QXBwKEFSQzRDb250cmFjdCk6CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9fX2FsZ29weV9kZWZhdWx0X2NyZWF0ZUA5CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydAogICAgcHVzaGJ5dGVzcyAweDlmNWRiM2E3IDB4ZDI1Njg4M2UgLy8gbWV0aG9kICJnZXRfbXlfY291bnRlcigpdWludDY0IiwgbWV0aG9kICJnZXRfbXlfY291bnRlcl93aXRoX2FyZyhhZGRyZXNzLHVpbnQ2NCl1aW50NjQiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBnZXRfbXlfY291bnRlciBnZXRfbXlfY291bnRlcl93aXRoX2FyZwogICAgZXJyCgptYWluX19fYWxnb3B5X2RlZmF1bHRfY3JlYXRlQDk6CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgJiYKICAgIHJldHVybiAvLyBvbiBlcnJvcjogT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcCAmJiBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKCgovLyBzbWFydF9jb250cmFjdHMucmVmZXJlbmNlX2FjY291bnRfYXBwLmNvbnRyYWN0LlJlZmVyZW5jZUFjY291bnRBcHAuZ2V0X215X2NvdW50ZXJbcm91dGluZ10oKSAtPiB2b2lkOgpnZXRfbXlfY291bnRlcjoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9yZWZlcmVuY2VfYWNjb3VudF9hcHAvY29udHJhY3QucHk6NjAtNjIKICAgIC8vIGFjY3QgPSBBY2NvdW50KAogICAgLy8gICAgICJXTUhGNEZMSk5LWTJCUEZLN1lQVjVJRDZPWjdMVkRCMkI2NlpUWEVBTUxMMk5YNFdKWlJKRlZYNjZNIgogICAgLy8gKSAgIyBSZXBsYWNlIHdpdGggeW91ciBhY2NvdW50IGFkZHJlc3MKICAgIHB1c2hieXRlcyBiYXNlMzIoV01IRjRGTEpOS1kyQlBGSzdZUFY1SUQ2T1o3TFZEQjJCNjZaVFhFQU1MTDJOWDRXSlpSQSkgLy8gYWRkciBXTUhGNEZMSk5LWTJCUEZLN1lQVjVJRDZPWjdMVkRCMkI2NlpUWEVBTUxMMk5YNFdKWlJKRlZYNjZNCiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FjY291bnRfYXBwL2NvbnRyYWN0LnB5OjYzCiAgICAvLyBhcHAgPSBBcHBsaWNhdGlvbigxNzE3KSAgIyBSZXBsYWNlIHdpdGggeW91ciBhcHBsaWNhdGlvbiBpZAogICAgcHVzaGludCAxNzE3IC8vIDE3MTcKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9yZWZlcmVuY2VfYWNjb3VudF9hcHAvY29udHJhY3QucHk6NjUtNjYKICAgIC8vICMgQ2hlY2sgaWYgdGhlIGNvdW50ZXIgdmFsdWUgZXhpc3RzIGluIHRoZSBhY2NvdW50J3MgbG9jYWwgc3RhdGUgZm9yIHRoZSBzcGVjaWZpZWQgYXBwCiAgICAvLyBteV9jb3VudCwgZXhpc3QgPSBvcC5BcHBMb2NhbC5nZXRfZXhfdWludDY0KGFjY3QsIGFwcCwgYiJteV9jb3VudGVyIikKICAgIGJ5dGVjXzAgLy8gMHg2ZDc5NWY2MzZmNzU2ZTc0NjU3MgogICAgYXBwX2xvY2FsX2dldF9leAogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo2NwogICAgLy8gaWYgbm90IGV4aXN0OgogICAgYm56IGdldF9teV9jb3VudGVyX2FmdGVyX2lmX2Vsc2VAMwogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo2OAogICAgLy8gcmV0dXJuIFVJbnQ2NCgwKQogICAgaW50Y18wIC8vIDAKCmdldF9teV9jb3VudGVyX2FmdGVyX2lubGluZWRfc21hcnRfY29udHJhY3RzLnJlZmVyZW5jZV9hY2NvdW50X2FwcC5jb250cmFjdC5SZWZlcmVuY2VBY2NvdW50QXBwLmdldF9teV9jb3VudGVyQDQ6CiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FjY291bnRfYXBwL2NvbnRyYWN0LnB5OjU4CiAgICAvLyBAYWJpbWV0aG9kCiAgICBpdG9iCiAgICBieXRlY18xIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgpnZXRfbXlfY291bnRlcl9hZnRlcl9pZl9lbHNlQDM6CiAgICBkdXAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9yZWZlcmVuY2VfYWNjb3VudF9hcHAvY29udHJhY3QucHk6NTgKICAgIC8vIEBhYmltZXRob2QKICAgIGIgZ2V0X215X2NvdW50ZXJfYWZ0ZXJfaW5saW5lZF9zbWFydF9jb250cmFjdHMucmVmZXJlbmNlX2FjY291bnRfYXBwLmNvbnRyYWN0LlJlZmVyZW5jZUFjY291bnRBcHAuZ2V0X215X2NvdW50ZXJANAoKCi8vIHNtYXJ0X2NvbnRyYWN0cy5yZWZlcmVuY2VfYWNjb3VudF9hcHAuY29udHJhY3QuUmVmZXJlbmNlQWNjb3VudEFwcC5nZXRfbXlfY291bnRlcl93aXRoX2FyZ1tyb3V0aW5nXSgpIC0+IHZvaWQ6CmdldF9teV9jb3VudGVyX3dpdGhfYXJnOgogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo3OAogICAgLy8gQGFiaW1ldGhvZAogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgYnRvaQogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo4MC04MQogICAgLy8gIyBDaGVjayBpZiB0aGUgY291bnRlciB2YWx1ZSBleGlzdHMgaW4gdGhlIGFjY291bnQncyBsb2NhbCBzdGF0ZSBmb3IgdGhlIHNwZWNpZmllZCBhcHAKICAgIC8vIG15X2NvdW50LCBleGlzdCA9IG9wLkFwcExvY2FsLmdldF9leF91aW50NjQoYWNjdCwgYXBwLCBiIm15X2NvdW50ZXIiKQogICAgYnl0ZWNfMCAvLyAweDZkNzk1ZjYzNmY3NTZlNzQ2NTcyCiAgICBhcHBfbG9jYWxfZ2V0X2V4CiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FjY291bnRfYXBwL2NvbnRyYWN0LnB5OjgyCiAgICAvLyBpZiBub3QgZXhpc3Q6CiAgICBibnogZ2V0X215X2NvdW50ZXJfd2l0aF9hcmdfYWZ0ZXJfaWZfZWxzZUAzCiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FjY291bnRfYXBwL2NvbnRyYWN0LnB5OjgzCiAgICAvLyByZXR1cm4gVUludDY0KDApCiAgICBpbnRjXzAgLy8gMAoKZ2V0X215X2NvdW50ZXJfd2l0aF9hcmdfYWZ0ZXJfaW5saW5lZF9zbWFydF9jb250cmFjdHMucmVmZXJlbmNlX2FjY291bnRfYXBwLmNvbnRyYWN0LlJlZmVyZW5jZUFjY291bnRBcHAuZ2V0X215X2NvdW50ZXJfd2l0aF9hcmdANDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9yZWZlcmVuY2VfYWNjb3VudF9hcHAvY29udHJhY3QucHk6NzgKICAgIC8vIEBhYmltZXRob2QKICAgIGl0b2IKICAgIGJ5dGVjXzEgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCmdldF9teV9jb3VudGVyX3dpdGhfYXJnX2FmdGVyX2lmX2Vsc2VAMzoKICAgIGR1cAogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo3OAogICAgLy8gQGFiaW1ldGhvZAogICAgYiBnZXRfbXlfY291bnRlcl93aXRoX2FyZ19hZnRlcl9pbmxpbmVkX3NtYXJ0X2NvbnRyYWN0cy5yZWZlcmVuY2VfYWNjb3VudF9hcHAuY29udHJhY3QuUmVmZXJlbmNlQWNjb3VudEFwcC5nZXRfbXlfY291bnRlcl93aXRoX2FyZ0A0Cg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyACAAEmAgpteV9jb3VudGVyBBUffHUxG0EAHTEZFEQxGESCAgSfXbOnBNJWiD42GgCOAgAJAD8AMRkUMRgUEEOAILMOXhVparGgvKr+H16gfnZ+uow6D72Z3IBi16bflk5igbUNKGNAAAgiFilMULAjQ0lC//U2GgE2GgIXKGNAAAgiFilMULAjQ0lC//U=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}