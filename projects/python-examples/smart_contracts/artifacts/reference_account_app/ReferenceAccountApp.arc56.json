{
    "name": "ReferenceAccountApp",
    "structs": {},
    "methods": [
        {
            "name": "get_my_counter",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_my_counter_with_arg",
            "args": [
                {
                    "type": "account",
                    "name": "acct"
                },
                {
                    "type": "application",
                    "name": "app"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "\n    Get the counter value from another account's local state with hardcoded values\n    @returns The counter value or 0 if it doesn't exist\n    ",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        54,
                        83
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        105
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        57,
                        86
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAwIDEKICAgIGJ5dGVjYmxvY2sgMHgxNTFmN2M3NSAweDZkNzk1ZjYzNmY3NTZlNzQ2NTcyCiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FjY291bnRfYXBwL2NvbnRyYWN0LnB5OjUzCiAgICAvLyBjbGFzcyBSZWZlcmVuY2VBY2NvdW50QXBwKEFSQzRDb250cmFjdCk6CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdANwogICAgcHVzaGJ5dGVzcyAweDlmNWRiM2E3IDB4NjIyNDBjNTUgLy8gbWV0aG9kICJnZXRfbXlfY291bnRlcigpdWludDY0IiwgbWV0aG9kICJnZXRfbXlfY291bnRlcl93aXRoX2FyZyhhY2NvdW50LGFwcGxpY2F0aW9uKXVpbnQ2NCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5fZ2V0X215X2NvdW50ZXJfcm91dGVAMyBtYWluX2dldF9teV9jb3VudGVyX3dpdGhfYXJnX3JvdXRlQDQKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9yZWZlcmVuY2VfYWNjb3VudF9hcHAvY29udHJhY3QucHk6NTMKICAgIC8vIGNsYXNzIFJlZmVyZW5jZUFjY291bnRBcHAoQVJDNENvbnRyYWN0KToKICAgIGludGNfMCAvLyAwCiAgICByZXR1cm4KCm1haW5fZ2V0X215X2NvdW50ZXJfd2l0aF9hcmdfcm91dGVANDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9yZWZlcmVuY2VfYWNjb3VudF9hcHAvY29udHJhY3QucHk6NzkKICAgIC8vIEBhYmltZXRob2QKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo1MwogICAgLy8gY2xhc3MgUmVmZXJlbmNlQWNjb3VudEFwcChBUkM0Q29udHJhY3QpOgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgYnRvaQogICAgdHhuYXMgQWNjb3VudHMKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIGJ0b2kKICAgIHR4bmFzIEFwcGxpY2F0aW9ucwogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo3OQogICAgLy8gQGFiaW1ldGhvZAogICAgY2FsbHN1YiBnZXRfbXlfY291bnRlcl93aXRoX2FyZwogICAgaXRvYgogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18xIC8vIDEKICAgIHJldHVybgoKbWFpbl9nZXRfbXlfY291bnRlcl9yb3V0ZUAzOgogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo1OQogICAgLy8gQGFiaW1ldGhvZAogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBjYWxsc3ViIGdldF9teV9jb3VudGVyCiAgICBpdG9iCiAgICBieXRlY18wIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgptYWluX2JhcmVfcm91dGluZ0A3OgogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo1MwogICAgLy8gY2xhc3MgUmVmZXJlbmNlQWNjb3VudEFwcChBUkM0Q29udHJhY3QpOgogICAgdHhuIE9uQ29tcGxldGlvbgogICAgYm56IG1haW5fYWZ0ZXJfaWZfZWxzZUAxMQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCgovLyBzbWFydF9jb250cmFjdHMucmVmZXJlbmNlX2FjY291bnRfYXBwLmNvbnRyYWN0LlJlZmVyZW5jZUFjY291bnRBcHAuZ2V0X215X2NvdW50ZXIoKSAtPiB1aW50NjQ6CmdldF9teV9jb3VudGVyOgogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo1OS02MAogICAgLy8gQGFiaW1ldGhvZAogICAgLy8gZGVmIGdldF9teV9jb3VudGVyKHNlbGYpIC0+IFVJbnQ2NDoKICAgIHByb3RvIDAgMQogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo2MS02MwogICAgLy8gYWNjdCA9IEFjY291bnQoCiAgICAvLyAgICAgIldNSEY0RkxKTktZMkJQRks3WVBWNUlENk9aN0xWREIyQjY2WlRYRUFNTEwyTlg0V0paUkpGVlg2Nk0iCiAgICAvLyApICAjIFJlcGxhY2Ugd2l0aCB5b3VyIGFjY291bnQgYWRkcmVzcwogICAgcHVzaGJ5dGVzIGJhc2UzMihXTUhGNEZMSk5LWTJCUEZLN1lQVjVJRDZPWjdMVkRCMkI2NlpUWEVBTUxMMk5YNFdKWlJBKSAvLyBhZGRyIFdNSEY0RkxKTktZMkJQRks3WVBWNUlENk9aN0xWREIyQjY2WlRYRUFNTEwyTlg0V0paUkpGVlg2Nk0KICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9yZWZlcmVuY2VfYWNjb3VudF9hcHAvY29udHJhY3QucHk6NjQKICAgIC8vIGFwcCA9IEFwcGxpY2F0aW9uKDE3MTcpICAjIFJlcGxhY2Ugd2l0aCB5b3VyIGFwcGxpY2F0aW9uIGlkCiAgICBwdXNoaW50IDE3MTcgLy8gMTcxNwogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo2Ni02NwogICAgLy8gIyBDaGVjayBpZiB0aGUgY291bnRlciB2YWx1ZSBleGlzdHMgaW4gdGhlIGFjY291bnQncyBsb2NhbCBzdGF0ZSBmb3IgdGhlIHNwZWNpZmllZCBhcHAKICAgIC8vIG15X2NvdW50LCBleGlzdCA9IG9wLkFwcExvY2FsLmdldF9leF91aW50NjQoYWNjdCwgYXBwLCBiIm15X2NvdW50ZXIiKQogICAgYnl0ZWNfMSAvLyAweDZkNzk1ZjYzNmY3NTZlNzQ2NTcyCiAgICBhcHBfbG9jYWxfZ2V0X2V4CiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FjY291bnRfYXBwL2NvbnRyYWN0LnB5OjY4CiAgICAvLyBpZiBub3QgZXhpc3Q6CiAgICBibnogZ2V0X215X2NvdW50ZXJfYWZ0ZXJfaWZfZWxzZUAyCiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FjY291bnRfYXBwL2NvbnRyYWN0LnB5OjY5CiAgICAvLyByZXR1cm4gVUludDY0KDApCiAgICBpbnRjXzAgLy8gMAogICAgc3dhcAogICAgcmV0c3ViCgpnZXRfbXlfY291bnRlcl9hZnRlcl9pZl9lbHNlQDI6CiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FjY291bnRfYXBwL2NvbnRyYWN0LnB5OjcwCiAgICAvLyByZXR1cm4gbXlfY291bnQKICAgIGZyYW1lX2RpZyAwCiAgICBzd2FwCiAgICByZXRzdWIKCgovLyBzbWFydF9jb250cmFjdHMucmVmZXJlbmNlX2FjY291bnRfYXBwLmNvbnRyYWN0LlJlZmVyZW5jZUFjY291bnRBcHAuZ2V0X215X2NvdW50ZXJfd2l0aF9hcmcoYWNjdDogYnl0ZXMsIGFwcDogdWludDY0KSAtPiB1aW50NjQ6CmdldF9teV9jb3VudGVyX3dpdGhfYXJnOgogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo3OS04MAogICAgLy8gQGFiaW1ldGhvZAogICAgLy8gZGVmIGdldF9teV9jb3VudGVyX3dpdGhfYXJnKHNlbGYsIGFjY3Q6IEFjY291bnQsIGFwcDogQXBwbGljYXRpb24pIC0+IFVJbnQ2NDoKICAgIHByb3RvIDIgMQogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo4MS04MgogICAgLy8gIyBDaGVjayBpZiB0aGUgY291bnRlciB2YWx1ZSBleGlzdHMgaW4gdGhlIGFjY291bnQncyBsb2NhbCBzdGF0ZSBmb3IgdGhlIHNwZWNpZmllZCBhcHAKICAgIC8vIG15X2NvdW50LCBleGlzdCA9IG9wLkFwcExvY2FsLmdldF9leF91aW50NjQoYWNjdCwgYXBwLCBiIm15X2NvdW50ZXIiKQogICAgZnJhbWVfZGlnIC0yCiAgICBmcmFtZV9kaWcgLTEKICAgIGJ5dGVjXzEgLy8gMHg2ZDc5NWY2MzZmNzU2ZTc0NjU3MgogICAgYXBwX2xvY2FsX2dldF9leAogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo4MwogICAgLy8gaWYgbm90IGV4aXN0OgogICAgYm56IGdldF9teV9jb3VudGVyX3dpdGhfYXJnX2FmdGVyX2lmX2Vsc2VAMgogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo4NAogICAgLy8gcmV0dXJuIFVJbnQ2NCgwKQogICAgaW50Y18wIC8vIDAKICAgIHN3YXAKICAgIHJldHN1YgoKZ2V0X215X2NvdW50ZXJfd2l0aF9hcmdfYWZ0ZXJfaWZfZWxzZUAyOgogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hY2NvdW50X2FwcC9jb250cmFjdC5weTo4NQogICAgLy8gcmV0dXJuIG15X2NvdW50CiAgICBmcmFtZV9kaWcgMAogICAgc3dhcAogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAAEmAgQVH3x1Cm15X2NvdW50ZXIxG0EARYICBJ9ds6cEYiQMVTYaAI4CAB8AAiJDMRkURDEYRDYaARfAHDYaAhfAMogAVxYoTFCwI0MxGRREMRhEiAASFihMULAjQzEZQP/LMRgURCNDigABgCCzDl4VaWqxoLyq/h9eoH52frqMOg+9mdyAYtem35ZOYoG1DSljQAADIkyJiwBMiYoCAYv+i/8pY0AAAyJMiYsATIk=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 5,
            "patch": 3
        }
    },
    "events": [],
    "templateVariables": {}
}