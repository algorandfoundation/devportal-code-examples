{
    "name": "BoxStorage",
    "structs": {
        "UserStruct": [
            {
                "name": "name",
                "type": "string"
            },
            {
                "name": "id",
                "type": "uint64"
            },
            {
                "name": "asset",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "get_box",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_item_box_map",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_box_map",
            "args": [],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "maybe_box",
            "args": [],
            "returns": {
                "type": "(uint64,bool)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "maybe_box_map",
            "args": [],
            "returns": {
                "type": "(string,bool)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_box_example",
            "args": [],
            "returns": {
                "type": "(uint64,byte[],string)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_box_map_example",
            "args": [],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "maybe_box_example",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "maybe_box_map_example",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_box_map_struct",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                }
            ],
            "returns": {
                "type": "(string,uint64,uint64)",
                "struct": "UserStruct"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_box",
            "args": [
                {
                    "type": "uint64",
                    "name": "value_int"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_box_map",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                },
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_box_map_struct",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                },
                {
                    "type": "(string,uint64,uint64)",
                    "struct": "UserStruct",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "set_box_example",
            "args": [
                {
                    "type": "uint64",
                    "name": "value_int"
                },
                {
                    "type": "byte[]",
                    "name": "value_dbytes"
                },
                {
                    "type": "string",
                    "name": "value_string"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "delete_box",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "delete_box_map",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "box_map_length",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "box_map_struct_length",
            "args": [],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "box_map_length_example",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "extract_box",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "value_box",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "exist_box",
            "args": [],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "exist_box_example",
            "args": [],
            "returns": {
                "type": "(bool,bool,bool)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "slice_box",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "arc4_box",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "key_box",
            "args": [],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "key_box_example",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "box_map_exists",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "box_map_struct_exists",
            "args": [
                {
                    "type": "uint64",
                    "name": "key"
                }
            ],
            "returns": {
                "type": "bool"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "key_prefix_box_map",
            "args": [],
            "returns": {
                "type": "byte[]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {
                "box_int": {
                    "keyType": "AVMString",
                    "valueType": "uint64",
                    "key": "Ym94X2ludA=="
                },
                "box_dynamic_bytes": {
                    "keyType": "AVMString",
                    "valueType": "byte[]",
                    "key": "Yg=="
                },
                "box_string": {
                    "keyType": "AVMBytes",
                    "valueType": "string",
                    "key": "Qk9YX0M="
                },
                "box_bytes": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Ym94X2J5dGVz"
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "box_map": {
                    "keyType": "uint64",
                    "valueType": "AVMString",
                    "prefix": ""
                },
                "box_map_struct": {
                    "keyType": "uint64",
                    "valueType": "UserStruct",
                    "prefix": "dXNlcnM="
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        102
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        373
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        335
                    ],
                    "errorMessage": "box string key ok"
                },
                {
                    "pc": [
                        494
                    ],
                    "errorMessage": "check self.box_dynamic_bytes exists"
                },
                {
                    "pc": [
                        376,
                        489,
                        698,
                        909
                    ],
                    "errorMessage": "check self.box_int exists"
                },
                {
                    "pc": [
                        391,
                        787
                    ],
                    "errorMessage": "check self.box_map entry exists"
                },
                {
                    "pc": [
                        599
                    ],
                    "errorMessage": "check self.box_map_struct entry exists"
                },
                {
                    "pc": [
                        500
                    ],
                    "errorMessage": "check self.box_string exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAQAqCiYOB2JveF9pbnQEFR98dQVCT1hfQwEAAWIEYmxvYgEwB2RlZmF1bHQFFR98dYAFdXNlcnMJYm94X2J5dGVzBAACNDINdXNlcnMAAAAAAAAAAAVoZWxsbzEbQQELMRkURDEYRIIeBFiIuZgEGND74wQ68jcoBE/CeeEEnvZpcQRObwieBBKAb2sEde00hQRY4n6vBK+RFZAEroSsTQTv9bZXBBuNreAEZcMGPgSCcIVlBEe7cEMEeLBzTgTWd4nrBJTl0/QEvQUtagR531f8BPdhJbkEIaym/wQE70lxBCPssywE7NHR+QR/otHABI7iw2QEmAIIjAQ2+GyONhoAjh4AMwA+AFMAaQB6AKQA2gDrAQABDQEbASUBOAFLAYIBtAG9AdQCBgIbAkgCTwJeAoIAHwANAAwC/QMQAAEAgAYVH3x1AACwIkMAgA0VH3x1AAdib3hfaW50sCJDggIBZAQAAQIDvyJDMRkUMRgUEEMovkQXFilMULAiQzYaARcWvkRJFRZXBgJMUClMULAiQyIWvicHTgJNSRUWVwYCTFApTFCwIkMovkwXFisjTwNUUClMULAiQyIWvklPAkxAAASAAEUBRwIVFlcGAkxQKyNLBFSAAgADTFBMUClMULAiQyi+RBcnBL5EVwIAKr5ETwIWSwIVFlcGAk8DUEyAAgAMUEsBFYEMCBZXBgJQTFBMUClMULAiQyIWvicHTgJNJwcSRCcIsCJDKLxIKL5MFyRLAUsDTSQSREwURBRDIha9RQEURCMWvUUBQycJNhoBUL5EKUxQsCJDNhoBFxYoTL8iQzYaARc2GgJXAgBMFkm8SEy/IkM2GgInCTYaAVBJvEhMvycIsCJDNhoBFzYaAjYaA08CFihMvycEvEgnBEsCvyq8SCpMv1cCACcKvEgnCky/KL5EF4EDCBYoTL8iQyi8SCcEvEgqvEgovkwXJExPAk0kEkQnBL4nC04CTVcCAIACNDISRCq+JwtOAk0nCxJDNhoBFxa8SCJDIxZJvUUBQAAIIxYpTFCwIkNJvURC//MnDLxIJwyAHAASAAAAAAAAAEYAAAAAAAAAAgAIdGVzdE5hbWW/Jwy9SIEcEkQnCLAiQyMWSbxISYAGSG1tbW1tv71IgQYSQycFgSC5RDEAMgonBSNLA7snBSNJSwPSJwWBQCcNuycFI4FFukxPAlAnDVASQyi+RBclEkMovUUBKyNPAlQpTFCwIkMnBL1FASq9TgJIJwq9TgNIKyNPAlQiTwJUgQJPAlQpTFCwIkMnBrxIJwaAE1Rlc3RpbmcgdGVzdGluZyAxMjO/Jwa9SEkjSwJNgQdLAgxPAoEHTwJNSwEJJwZOArqAB1Rlc3RpbmcSRCq8SCqABwAFSGVsbG+/Kr1IgQJLAQxLAYECTwJNJUsCDE8CJU8CTUsBCSpOArqABUhlbGxvEkM2GgEXFr1FASsjTwJUKUxQsCJDJwk2GgFQvUUBKyNPAlQpTFCwIkM=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}