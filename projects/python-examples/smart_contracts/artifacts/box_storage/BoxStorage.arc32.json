{
    "hints": {
        "get_box()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_item_box_map(uint64)string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_box_map()string": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_box_ref()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "maybe_box()(uint64,bool)": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "maybe_box_map()(string,bool)": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "maybe_box_ref()(byte[],bool)": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_box_example()(uint64,byte[],string)": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_box_map_example()bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "maybe_box_example()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "maybe_box_map_example()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "get_box_map_struct(uint64)(string,uint64,uint64)": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "output": {
                    "name": "UserStruct",
                    "elements": [
                        [
                            "name",
                            "string"
                        ],
                        [
                            "id",
                            "uint64"
                        ],
                        [
                            "asset",
                            "uint64"
                        ]
                    ]
                }
            }
        },
        "set_box(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_box_map(uint64,string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "set_box_map_struct(uint64,(string,uint64,uint64))bool": {
            "call_config": {
                "no_op": "CALL"
            },
            "structs": {
                "value": {
                    "name": "UserStruct",
                    "elements": [
                        [
                            "name",
                            "string"
                        ],
                        [
                            "id",
                            "uint64"
                        ],
                        [
                            "asset",
                            "uint64"
                        ]
                    ]
                }
            }
        },
        "set_box_example(uint64,byte[],string)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "delete_box()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "delete_box_map(uint64)void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "delete_box_ref()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "box_map_length()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "length_box_ref()uint64": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "box_map_struct_length()bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "box_map_length_example()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "length_box_ref_example()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "extract_box_ref()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "manipulate_box_ref()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "value_box()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "exist_box()bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "exist_box_example()(bool,bool,bool)": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "slice_box()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "arc4_box()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "key_box()byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "key_box_example()void": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "box_map_exists(uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "box_map_struct_exists(uint64)bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "key_prefix_box_map()byte[]": {
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCgpzbWFydF9jb250cmFjdHMuYm94X3N0b3JhZ2UuY29udHJhY3QuQm94U3RvcmFnZS5jbGVhcl9zdGF0ZV9wcm9ncmFtOgogICAgaW50IDEKICAgIHJldHVybgo="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "BoxStorage",
        "methods": [
            {
                "name": "get_box",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "get_item_box_map",
                "args": [
                    {
                        "type": "uint64",
                        "name": "key"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "get_box_map",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "string"
                }
            },
            {
                "name": "get_box_ref",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "maybe_box",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "(uint64,bool)"
                }
            },
            {
                "name": "maybe_box_map",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "(string,bool)"
                }
            },
            {
                "name": "maybe_box_ref",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "(byte[],bool)"
                }
            },
            {
                "name": "get_box_example",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "(uint64,byte[],string)"
                }
            },
            {
                "name": "get_box_map_example",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "maybe_box_example",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "maybe_box_map_example",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "get_box_map_struct",
                "args": [
                    {
                        "type": "uint64",
                        "name": "key"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "(string,uint64,uint64)"
                }
            },
            {
                "name": "set_box",
                "args": [
                    {
                        "type": "uint64",
                        "name": "value_int"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_box_map",
                "args": [
                    {
                        "type": "uint64",
                        "name": "key"
                    },
                    {
                        "type": "string",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "set_box_map_struct",
                "args": [
                    {
                        "type": "uint64",
                        "name": "key"
                    },
                    {
                        "type": "(string,uint64,uint64)",
                        "name": "value"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "set_box_example",
                "args": [
                    {
                        "type": "uint64",
                        "name": "value_int"
                    },
                    {
                        "type": "byte[]",
                        "name": "value_dbytes"
                    },
                    {
                        "type": "string",
                        "name": "value_string"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "delete_box",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "delete_box_map",
                "args": [
                    {
                        "type": "uint64",
                        "name": "key"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "delete_box_ref",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "box_map_length",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "length_box_ref",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "uint64"
                }
            },
            {
                "name": "box_map_struct_length",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "box_map_length_example",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "length_box_ref_example",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "extract_box_ref",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "manipulate_box_ref",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "value_box",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "exist_box",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "exist_box_example",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "(bool,bool,bool)"
                }
            },
            {
                "name": "slice_box",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "arc4_box",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "key_box",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            },
            {
                "name": "key_box_example",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "void"
                }
            },
            {
                "name": "box_map_exists",
                "args": [
                    {
                        "type": "uint64",
                        "name": "key"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "box_map_struct_exists",
                "args": [
                    {
                        "type": "uint64",
                        "name": "key"
                    }
                ],
                "readonly": false,
                "returns": {
                    "type": "bool"
                }
            },
            {
                "name": "key_prefix_box_map",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "byte[]"
                }
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}