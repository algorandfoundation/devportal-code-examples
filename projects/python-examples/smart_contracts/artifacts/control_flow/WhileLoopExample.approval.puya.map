{
  "version": 3,
  "sources": [
    "../../control_flow/contract.py"
  ],
  "mappings": ";;;;;AA+EA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;AACK;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;AADL;;AAAA;;;;;;;;;AACA;;;;;AAEc;;AACO;;;;;AAErB;;AAAA;;;AACe;;AAAM;;AAAN;AAAf;;;AACgB;;AAAO;AAAP;AAAA;;AACA;;AAAc;AAAd;AAAA;;AACA;;;AAEJ;;AAAO;;AAAP;AAAA;AAAA;;AACA;;AAAc;AAAd;AAAA;;AAEU;AAAP;AAAf;;;;;;;AAGQ",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0"
    },
    "5": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "7": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "10": {
      "op": "pushbytes 0xf82a2654 // method \"loop()uint64\"",
      "defined_out": [
        "Method(loop()uint64)"
      ],
      "stack_out": [
        "Method(loop()uint64)"
      ]
    },
    "16": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(loop()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(loop()uint64)",
        "tmp%2#0"
      ]
    },
    "19": {
      "op": "match main_loop_route@3",
      "stack_out": []
    },
    "23": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "24": {
      "op": "return",
      "stack_out": []
    },
    "25": {
      "block": "main_loop_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "27": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "28": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "29": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "31": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "32": {
      "callsub": "smart_contracts.control_flow.contract.WhileLoopExample.loop",
      "op": "callsub loop",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "35": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "36": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "42": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "43": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "44": {
      "op": "log",
      "stack_out": []
    },
    "45": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "46": {
      "op": "return",
      "stack_out": []
    },
    "47": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "49": {
      "op": "bnz main_after_if_else@10",
      "stack_out": []
    },
    "52": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "54": {
      "op": "!",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "55": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "56": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "57": {
      "op": "return",
      "stack_out": []
    },
    "58": {
      "subroutine": "smart_contracts.control_flow.contract.WhileLoopExample.loop",
      "params": {},
      "block": "loop",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "61": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "loop_count#11"
      ]
    },
    "63": {
      "op": "pushint 10 // 10"
    },
    "65": {
      "op": "intc_1 // 0",
      "defined_out": [
        "loop_count#0",
        "num#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0"
      ]
    },
    "66": {
      "block": "loop_while_top@1",
      "stack_in": [
        "loop_count#11",
        "num#0",
        "loop_count#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "loop_count#11"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "loop_count#11"
      ]
    },
    "68": {
      "op": "frame_bury 0",
      "defined_out": [
        "loop_count#11"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0"
      ]
    },
    "70": {
      "op": "frame_dig 1",
      "defined_out": [
        "loop_count#11",
        "num#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0"
      ]
    },
    "72": {
      "op": "bz loop_after_while@7",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0"
      ]
    },
    "75": {
      "op": "frame_dig 1",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0"
      ]
    },
    "77": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "loop_count#11",
        "num#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0",
        "5"
      ]
    },
    "79": {
      "op": ">",
      "defined_out": [
        "loop_count#11",
        "num#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "tmp%1#0"
      ]
    },
    "80": {
      "op": "bz loop_after_if_else@4",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0"
      ]
    },
    "83": {
      "op": "frame_dig 1",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0"
      ]
    },
    "85": {
      "op": "intc_0 // 1",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0",
        "1"
      ]
    },
    "86": {
      "op": "-",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0"
      ]
    },
    "87": {
      "op": "frame_bury 1",
      "defined_out": [
        "loop_count#11",
        "num#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0"
      ]
    },
    "89": {
      "op": "frame_dig 2",
      "defined_out": [
        "loop_count#0",
        "loop_count#11",
        "num#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "loop_count#0"
      ]
    },
    "91": {
      "op": "intc_0 // 1",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "loop_count#0",
        "1"
      ]
    },
    "92": {
      "op": "+",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "loop_count#0"
      ]
    },
    "93": {
      "op": "frame_bury 2",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0"
      ]
    },
    "95": {
      "op": "b loop_while_top@1"
    },
    "98": {
      "block": "loop_after_if_else@4",
      "stack_in": [
        "loop_count#11",
        "num#0",
        "loop_count#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "num#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0"
      ]
    },
    "100": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "num#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0",
        "2"
      ]
    },
    "102": {
      "op": "-",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0"
      ]
    },
    "103": {
      "op": "dup",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0",
        "num#0"
      ]
    },
    "104": {
      "op": "frame_bury 1",
      "defined_out": [
        "num#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0"
      ]
    },
    "106": {
      "op": "frame_dig 2",
      "defined_out": [
        "loop_count#0",
        "num#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0",
        "loop_count#0"
      ]
    },
    "108": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "loop_count#0",
        "num#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0",
        "loop_count#0",
        "1"
      ]
    },
    "109": {
      "op": "+",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0",
        "loop_count#0"
      ]
    },
    "110": {
      "op": "frame_bury 2",
      "defined_out": [
        "loop_count#0",
        "num#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0"
      ]
    },
    "112": {
      "op": "intc_0 // 1",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "num#0",
        "1"
      ]
    },
    "113": {
      "op": "==",
      "defined_out": [
        "loop_count#0",
        "num#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "tmp%2#0"
      ]
    },
    "114": {
      "op": "bz loop_while_top@1",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0"
      ]
    },
    "117": {
      "op": "frame_dig 2",
      "defined_out": [
        "loop_count#0",
        "loop_count#11",
        "num#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "loop_count#11"
      ]
    },
    "119": {
      "op": "frame_bury 0",
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0"
      ]
    },
    "121": {
      "block": "loop_after_while@7",
      "stack_in": [
        "loop_count#11",
        "num#0",
        "loop_count#0"
      ],
      "retsub": true,
      "op": "retsub",
      "defined_out": [
        "loop_count#0"
      ],
      "stack_out": [
        "loop_count#11",
        "num#0",
        "loop_count#0",
        "loop_count#0"
      ]
    }
  }
}