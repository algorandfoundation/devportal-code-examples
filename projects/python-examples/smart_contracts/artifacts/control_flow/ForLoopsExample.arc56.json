{
    "name": "ForLoopsExample",
    "structs": {},
    "methods": [
        {
            "name": "for_loop",
            "args": [],
            "returns": {
                "type": "uint8[4]"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        41
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        30
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when not creating"
                },
                {
                    "pc": [
                        72
                    ],
                    "errorMessage": "index access is out of bounds"
                },
                {
                    "pc": [
                        62
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAxIDAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6MzEKICAgIC8vIGNsYXNzIEZvckxvb3BzRXhhbXBsZShBUkM0Q29udHJhY3QpOgogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fX19hbGdvcHlfZGVmYXVsdF9jcmVhdGVANQogICAgcHVzaGJ5dGVzIDB4OTFkNjMyZmIgLy8gbWV0aG9kICJmb3JfbG9vcCgpdWludDhbNF0iCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX2Zvcl9sb29wX3JvdXRlQDMKICAgIGVycgoKbWFpbl9mb3JfbG9vcF9yb3V0ZUAzOgogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTozMi0zMwogICAgLy8gIyB1cmFuZ2U6IHJldmVyc2VkIGl0ZW1zLCBmb3J3YXJkIGluZGV4CiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAmJgogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AgJiYgY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgYiBmb3JfbG9vcAoKbWFpbl9fX2FsZ29weV9kZWZhdWx0X2NyZWF0ZUA1OgogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgICYmCiAgICByZXR1cm4gLy8gb24gZXJyb3I6IE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AgJiYgY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCgoKLy8gc21hcnRfY29udHJhY3RzLmNvbnRyb2xfZmxvdy5jb250cmFjdC5Gb3JMb29wc0V4YW1wbGUuZm9yX2xvb3Bbcm91dGluZ10oKSAtPiB2b2lkOgpmb3JfbG9vcDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6MzUKICAgIC8vIGFycmF5ID0gRm91ckFycmF5KGFyYzQuVUludDgoMCksIGFyYzQuVUludDgoMCksIGFyYzQuVUludDgoMCksIGFyYzQuVUludDgoMCkpCiAgICBwdXNoYnl0ZXNzICIiIDB4MDAwMDAwMDAgLy8gIiIsIDB4MDAwMDAwMDAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6MzcKICAgIC8vIGZvciBpbmRleCwgaXRlbSBpbiB1ZW51bWVyYXRlKHJldmVyc2VkKHVyYW5nZSg0KSkpOiAgIyBbMywgMiwgMSwgMF0KICAgIHB1c2hpbnQgMyAvLyAzCiAgICBpbnRjXzEgLy8gMAoKZm9yX2xvb3BfZm9yX2JvZHlAMzoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6MzgKICAgIC8vIGFycmF5W2luZGV4XSA9IGFyYzQuVUludDgoaXRlbSkKICAgIGRpZyAxCiAgICBkdXAKICAgIGl0b2IKICAgIGR1cAogICAgYml0bGVuCiAgICBwdXNoaW50IDggLy8gOAogICAgPD0KICAgIGFzc2VydCAvLyBvdmVyZmxvdwogICAgZXh0cmFjdCA3IDEKICAgIGRpZyA0CiAgICBkaWcgMwogICAgdW5jb3ZlciAyCiAgICByZXBsYWNlMyAvLyBvbiBlcnJvcjogaW5kZXggYWNjZXNzIGlzIG91dCBvZiBib3VuZHMKICAgIGJ1cnkgNAogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTozNwogICAgLy8gZm9yIGluZGV4LCBpdGVtIGluIHVlbnVtZXJhdGUocmV2ZXJzZWQodXJhbmdlKDQpKSk6ICAjIFszLCAyLCAxLCAwXQogICAgYnogZm9yX2xvb3BfYWZ0ZXJfZm9yQDYKICAgIGRpZyAxCiAgICBpbnRjXzAgLy8gMQogICAgLQogICAgYnVyeSAyCiAgICBkdXAKICAgIGludGNfMCAvLyAxCiAgICArCiAgICBidXJ5IDEKICAgIGIgZm9yX2xvb3BfZm9yX2JvZHlAMwoKZm9yX2xvb3BfYWZ0ZXJfZm9yQDY6CiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjQwCiAgICAvLyB4ID0gVUludDY0KDApCiAgICBpbnRjXzEgLy8gMAogICAgYnVyeSA0CiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjQyCiAgICAvLyBmb3IgaXRlbSBpbiB1cmFuZ2UoMSwgNSk6ICAjIFsxLCAyLCAzLCA0XQogICAgaW50Y18wIC8vIDEKICAgIGJ1cnkgMgoKZm9yX2xvb3BfZm9yX2hlYWRlckA3OgogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo0MgogICAgLy8gZm9yIGl0ZW0gaW4gdXJhbmdlKDEsIDUpOiAgIyBbMSwgMiwgMywgNF0KICAgIGRpZyAxCiAgICBwdXNoaW50IDUgLy8gNQogICAgPAogICAgYnogZm9yX2xvb3BfYWZ0ZXJfZm9yQDEwCiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjQzCiAgICAvLyB4ICs9IGl0ZW0KICAgIGRpZyAzCiAgICBkaWcgMgogICAgZHVwCiAgICBjb3ZlciAyCiAgICArCiAgICBidXJ5IDUKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6NDIKICAgIC8vIGZvciBpdGVtIGluIHVyYW5nZSgxLCA1KTogICMgWzEsIDIsIDMsIDRdCiAgICBpbnRjXzAgLy8gMQogICAgKwogICAgYnVyeSAyCiAgICBiIGZvcl9sb29wX2Zvcl9oZWFkZXJANwoKZm9yX2xvb3BfYWZ0ZXJfZm9yQDEwOgogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo0NQogICAgLy8gYXNzZXJ0IHggPT0gMTAKICAgIGRpZyAzCiAgICBwdXNoaW50IDEwIC8vIDEwCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjMyLTMzCiAgICAvLyAjIHVyYW5nZTogcmV2ZXJzZWQgaXRlbXMsIGZvcndhcmQgaW5kZXgKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgcHVzaGJ5dGVzIDB4MTUxZjdjNzUKICAgIGRpZyAzCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyACAQAxG0EAGIAEkdYy+zYaAI4BAAEAMRkUMRgQREIACDEZFDEYFBBDggIABAAAAACBAyNLAUkWSZOBCA5EVwcBSwRLA08CXUUEQQAOSwEiCUUCSSIIRQFC/9kjRQQiRQJLAYEFDEEAEUsDSwJJTgIIRQUiCEUCQv/nSwOBChJEgAQVH3x1SwNQsCJD",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}