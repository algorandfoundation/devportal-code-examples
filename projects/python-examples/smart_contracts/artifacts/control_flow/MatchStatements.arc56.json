{
    "name": "MatchStatements",
    "structs": {},
    "methods": [
        {
            "name": "get_day",
            "args": [
                {
                    "type": "uint64",
                    "name": "date"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        25
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        64
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        28
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6NTItNTMKICAgIC8vICMgZXhhbXBsZTogTUFUQ0gKICAgIC8vIGNsYXNzIE1hdGNoU3RhdGVtZW50cyhBUkM0Q29udHJhY3QpOgogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDYKICAgIHB1c2hieXRlcyAweGU1YTRlYTUyIC8vIG1ldGhvZCAiZ2V0X2RheSh1aW50NjQpc3RyaW5nIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggbWFpbl9nZXRfZGF5X3JvdXRlQDMKCm1haW5fYWZ0ZXJfaWZfZWxzZUAxMDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6NTItNTMKICAgIC8vICMgZXhhbXBsZTogTUFUQ0gKICAgIC8vIGNsYXNzIE1hdGNoU3RhdGVtZW50cyhBUkM0Q29udHJhY3QpOgogICAgcHVzaGludCAwIC8vIDAKICAgIHJldHVybgoKbWFpbl9nZXRfZGF5X3JvdXRlQDM6CiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjU1CiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo1Mi01MwogICAgLy8gIyBleGFtcGxlOiBNQVRDSAogICAgLy8gY2xhc3MgTWF0Y2hTdGF0ZW1lbnRzKEFSQzRDb250cmFjdCk6CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBidG9pCiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjU1CiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIGNhbGxzdWIgZ2V0X2RheQogICAgZHVwCiAgICBsZW4KICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICBzd2FwCiAgICBjb25jYXQKICAgIHB1c2hieXRlcyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgoKbWFpbl9iYXJlX3JvdXRpbmdANjoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6NTItNTMKICAgIC8vICMgZXhhbXBsZTogTUFUQ0gKICAgIC8vIGNsYXNzIE1hdGNoU3RhdGVtZW50cyhBUkM0Q29udHJhY3QpOgogICAgdHhuIE9uQ29tcGxldGlvbgogICAgYm56IG1haW5fYWZ0ZXJfaWZfZWxzZUAxMAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4KCgovLyBzbWFydF9jb250cmFjdHMuY29udHJvbF9mbG93LmNvbnRyYWN0Lk1hdGNoU3RhdGVtZW50cy5nZXRfZGF5KGRhdGU6IHVpbnQ2NCkgLT4gYnl0ZXM6CmdldF9kYXk6CiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjU1LTU2CiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIC8vIGRlZiBnZXRfZGF5KHNlbGYsIGRhdGU6IFVJbnQ2NCkgLT4gU3RyaW5nOgogICAgcHJvdG8gMSAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjU4LTc0CiAgICAvLyBtYXRjaCBkYXRlOgogICAgLy8gICAgIGNhc2UgVUludDY0KDApOgogICAgLy8gICAgICAgICByZXR1cm4gU3RyaW5nKCJNb25kYXkiKQogICAgLy8gICAgIGNhc2UgVUludDY0KDEpOgogICAgLy8gICAgICAgICByZXR1cm4gU3RyaW5nKCJUdWVzZGF5IikKICAgIC8vICAgICBjYXNlIFVJbnQ2NCgyKToKICAgIC8vICAgICAgICAgcmV0dXJuIFN0cmluZygiV2VkbmVzZGF5IikKICAgIC8vICAgICBjYXNlIFVJbnQ2NCgzKToKICAgIC8vICAgICAgICAgcmV0dXJuIFN0cmluZygiVGh1cnNkYXkiKQogICAgLy8gICAgIGNhc2UgVUludDY0KDQpOgogICAgLy8gICAgICAgICByZXR1cm4gU3RyaW5nKCJGcmlkYXkiKQogICAgLy8gICAgIGNhc2UgVUludDY0KDUpOgogICAgLy8gICAgICAgICByZXR1cm4gU3RyaW5nKCJTYXR1cmRheSIpCiAgICAvLyAgICAgY2FzZSBVSW50NjQoNik6CiAgICAvLyAgICAgICAgIHJldHVybiBTdHJpbmcoIlN1bmRheSIpCiAgICAvLyAgICAgY2FzZSBfOgogICAgLy8gICAgICAgICByZXR1cm4gU3RyaW5nKCJJbnZhbGlkIGRheSIpCiAgICBmcmFtZV9kaWcgLTEKICAgIHN3aXRjaCBnZXRfZGF5X3N3aXRjaF9jYXNlXzBAMSBnZXRfZGF5X3N3aXRjaF9jYXNlXzFAMiBnZXRfZGF5X3N3aXRjaF9jYXNlXzJAMyBnZXRfZGF5X3N3aXRjaF9jYXNlXzNANCBnZXRfZGF5X3N3aXRjaF9jYXNlXzRANSBnZXRfZGF5X3N3aXRjaF9jYXNlXzVANiBnZXRfZGF5X3N3aXRjaF9jYXNlXzZANwogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo3NAogICAgLy8gcmV0dXJuIFN0cmluZygiSW52YWxpZCBkYXkiKQogICAgcHVzaGJ5dGVzICJJbnZhbGlkIGRheSIKICAgIHJldHN1YgoKZ2V0X2RheV9zd2l0Y2hfY2FzZV82QDc6CiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjcyCiAgICAvLyByZXR1cm4gU3RyaW5nKCJTdW5kYXkiKQogICAgcHVzaGJ5dGVzICJTdW5kYXkiCiAgICByZXRzdWIKCmdldF9kYXlfc3dpdGNoX2Nhc2VfNUA2OgogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo3MAogICAgLy8gcmV0dXJuIFN0cmluZygiU2F0dXJkYXkiKQogICAgcHVzaGJ5dGVzICJTYXR1cmRheSIKICAgIHJldHN1YgoKZ2V0X2RheV9zd2l0Y2hfY2FzZV80QDU6CiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjY4CiAgICAvLyByZXR1cm4gU3RyaW5nKCJGcmlkYXkiKQogICAgcHVzaGJ5dGVzICJGcmlkYXkiCiAgICByZXRzdWIKCmdldF9kYXlfc3dpdGNoX2Nhc2VfM0A0OgogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo2NgogICAgLy8gcmV0dXJuIFN0cmluZygiVGh1cnNkYXkiKQogICAgcHVzaGJ5dGVzICJUaHVyc2RheSIKICAgIHJldHN1YgoKZ2V0X2RheV9zd2l0Y2hfY2FzZV8yQDM6CiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjY0CiAgICAvLyByZXR1cm4gU3RyaW5nKCJXZWRuZXNkYXkiKQogICAgcHVzaGJ5dGVzICJXZWRuZXNkYXkiCiAgICByZXRzdWIKCmdldF9kYXlfc3dpdGNoX2Nhc2VfMUAyOgogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo2MgogICAgLy8gcmV0dXJuIFN0cmluZygiVHVlc2RheSIpCiAgICBwdXNoYnl0ZXMgIlR1ZXNkYXkiCiAgICByZXRzdWIKCmdldF9kYXlfc3dpdGNoX2Nhc2VfMEAxOgogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo2MAogICAgLy8gcmV0dXJuIFN0cmluZygiTW9uZGF5IikKICAgIHB1c2hieXRlcyAiTW9uZGF5IgogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CjEbQQAygATlpOpSNhoAjgEAA4EAQzEZFEQxGEQ2GgEXiAAgSRUWVwYCTFCABBUffHVMULCBAUMxGUD/1jEYFESBAUOKAQGL/40HAEwAQgA2ACsAIgAXAA6AC0ludmFsaWQgZGF5iYAGU3VuZGF5iYAIU2F0dXJkYXmJgAZGcmlkYXmJgAhUaHVyc2RheYmACVdlZG5lc2RheYmAB1R1ZXNkYXmJgAZNb25kYXmJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 3,
            "patch": 3
        }
    },
    "events": [],
    "templateVariables": {}
}