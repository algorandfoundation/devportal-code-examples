{
    "name": "MatchStatements",
    "structs": {},
    "methods": [
        {
            "name": "get_day",
            "args": [
                {
                    "type": "uint64",
                    "name": "date"
                }
            ],
            "returns": {
                "type": "string"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        37
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        26
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuYXBwcm92YWxfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6NTMtNTQKICAgIC8vICMgZXhhbXBsZTogTUFUQ0gKICAgIC8vIGNsYXNzIE1hdGNoU3RhdGVtZW50cyhBUkM0Q29udHJhY3QpOgogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fX19hbGdvcHlfZGVmYXVsdF9jcmVhdGVANQogICAgcHVzaGJ5dGVzIDB4ZTVhNGVhNTIgLy8gbWV0aG9kICJnZXRfZGF5KHVpbnQ2NClzdHJpbmciCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX2dldF9kYXlfcm91dGVAMwogICAgZXJyCgptYWluX2dldF9kYXlfcm91dGVAMzoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6NTUKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICYmCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcCAmJiBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBiIGdldF9kYXkKCm1haW5fX19hbGdvcHlfZGVmYXVsdF9jcmVhdGVANToKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICAmJgogICAgcmV0dXJuIC8vIG9uIGVycm9yOiBPbkNvbXBsZXRpb24gbXVzdCBiZSBOb09wICYmIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwoKCi8vIHNtYXJ0X2NvbnRyYWN0cy5jb250cm9sX2Zsb3cuY29udHJhY3QuTWF0Y2hTdGF0ZW1lbnRzLmdldF9kYXlbcm91dGluZ10oKSAtPiB2b2lkOgpnZXRfZGF5OgogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo1NQogICAgLy8gQGFyYzQuYWJpbWV0aG9kCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICBidG9pCiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjU3LTczCiAgICAvLyBtYXRjaCBkYXRlOgogICAgLy8gICAgIGNhc2UgVUludDY0KDApOgogICAgLy8gICAgICAgICByZXR1cm4gU3RyaW5nKCJNb25kYXkiKQogICAgLy8gICAgIGNhc2UgVUludDY0KDEpOgogICAgLy8gICAgICAgICByZXR1cm4gU3RyaW5nKCJUdWVzZGF5IikKICAgIC8vICAgICBjYXNlIFVJbnQ2NCgyKToKICAgIC8vICAgICAgICAgcmV0dXJuIFN0cmluZygiV2VkbmVzZGF5IikKICAgIC8vICAgICBjYXNlIFVJbnQ2NCgzKToKICAgIC8vICAgICAgICAgcmV0dXJuIFN0cmluZygiVGh1cnNkYXkiKQogICAgLy8gICAgIGNhc2UgVUludDY0KDQpOgogICAgLy8gICAgICAgICByZXR1cm4gU3RyaW5nKCJGcmlkYXkiKQogICAgLy8gICAgIGNhc2UgVUludDY0KDUpOgogICAgLy8gICAgICAgICByZXR1cm4gU3RyaW5nKCJTYXR1cmRheSIpCiAgICAvLyAgICAgY2FzZSBVSW50NjQoNik6CiAgICAvLyAgICAgICAgIHJldHVybiBTdHJpbmcoIlN1bmRheSIpCiAgICAvLyAgICAgY2FzZSBfOgogICAgLy8gICAgICAgICByZXR1cm4gU3RyaW5nKCJJbnZhbGlkIGRheSIpCiAgICBzd2l0Y2ggZ2V0X2RheV9zd2l0Y2hfY2FzZV8wQDIgZ2V0X2RheV9zd2l0Y2hfY2FzZV8xQDMgZ2V0X2RheV9zd2l0Y2hfY2FzZV8yQDQgZ2V0X2RheV9zd2l0Y2hfY2FzZV8zQDUgZ2V0X2RheV9zd2l0Y2hfY2FzZV80QDYgZ2V0X2RheV9zd2l0Y2hfY2FzZV81QDcgZ2V0X2RheV9zd2l0Y2hfY2FzZV82QDgKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6NzMKICAgIC8vIHJldHVybiBTdHJpbmcoIkludmFsaWQgZGF5IikKICAgIHB1c2hieXRlcyAiSW52YWxpZCBkYXkiCgpnZXRfZGF5X2FmdGVyX2lubGluZWRfc21hcnRfY29udHJhY3RzLmNvbnRyb2xfZmxvdy5jb250cmFjdC5NYXRjaFN0YXRlbWVudHMuZ2V0X2RheUAxMDoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6NTUKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgZHVwCiAgICBsZW4KICAgIGl0b2IKICAgIGV4dHJhY3QgNiAyCiAgICBzd2FwCiAgICBjb25jYXQKICAgIHB1c2hieXRlcyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgcHVzaGludCAxIC8vIDEKICAgIHJldHVybgoKZ2V0X2RheV9zd2l0Y2hfY2FzZV82QDg6CiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjcxCiAgICAvLyByZXR1cm4gU3RyaW5nKCJTdW5kYXkiKQogICAgcHVzaGJ5dGVzICJTdW5kYXkiCiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjU1CiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIGIgZ2V0X2RheV9hZnRlcl9pbmxpbmVkX3NtYXJ0X2NvbnRyYWN0cy5jb250cm9sX2Zsb3cuY29udHJhY3QuTWF0Y2hTdGF0ZW1lbnRzLmdldF9kYXlAMTAKCmdldF9kYXlfc3dpdGNoX2Nhc2VfNUA3OgogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo2OQogICAgLy8gcmV0dXJuIFN0cmluZygiU2F0dXJkYXkiKQogICAgcHVzaGJ5dGVzICJTYXR1cmRheSIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6NTUKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgYiBnZXRfZGF5X2FmdGVyX2lubGluZWRfc21hcnRfY29udHJhY3RzLmNvbnRyb2xfZmxvdy5jb250cmFjdC5NYXRjaFN0YXRlbWVudHMuZ2V0X2RheUAxMAoKZ2V0X2RheV9zd2l0Y2hfY2FzZV80QDY6CiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjY3CiAgICAvLyByZXR1cm4gU3RyaW5nKCJGcmlkYXkiKQogICAgcHVzaGJ5dGVzICJGcmlkYXkiCiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjU1CiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIGIgZ2V0X2RheV9hZnRlcl9pbmxpbmVkX3NtYXJ0X2NvbnRyYWN0cy5jb250cm9sX2Zsb3cuY29udHJhY3QuTWF0Y2hTdGF0ZW1lbnRzLmdldF9kYXlAMTAKCmdldF9kYXlfc3dpdGNoX2Nhc2VfM0A1OgogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo2NQogICAgLy8gcmV0dXJuIFN0cmluZygiVGh1cnNkYXkiKQogICAgcHVzaGJ5dGVzICJUaHVyc2RheSIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9jb250cm9sX2Zsb3cvY29udHJhY3QucHk6NTUKICAgIC8vIEBhcmM0LmFiaW1ldGhvZAogICAgYiBnZXRfZGF5X2FmdGVyX2lubGluZWRfc21hcnRfY29udHJhY3RzLmNvbnRyb2xfZmxvdy5jb250cmFjdC5NYXRjaFN0YXRlbWVudHMuZ2V0X2RheUAxMAoKZ2V0X2RheV9zd2l0Y2hfY2FzZV8yQDQ6CiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjYzCiAgICAvLyByZXR1cm4gU3RyaW5nKCJXZWRuZXNkYXkiKQogICAgcHVzaGJ5dGVzICJXZWRuZXNkYXkiCiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjU1CiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIGIgZ2V0X2RheV9hZnRlcl9pbmxpbmVkX3NtYXJ0X2NvbnRyYWN0cy5jb250cm9sX2Zsb3cuY29udHJhY3QuTWF0Y2hTdGF0ZW1lbnRzLmdldF9kYXlAMTAKCmdldF9kYXlfc3dpdGNoX2Nhc2VfMUAzOgogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo2MQogICAgLy8gcmV0dXJuIFN0cmluZygiVHVlc2RheSIpCiAgICBwdXNoYnl0ZXMgIlR1ZXNkYXkiCiAgICAvLyBzbWFydF9jb250cmFjdHMvY29udHJvbF9mbG93L2NvbnRyYWN0LnB5OjU1CiAgICAvLyBAYXJjNC5hYmltZXRob2QKICAgIGIgZ2V0X2RheV9hZnRlcl9pbmxpbmVkX3NtYXJ0X2NvbnRyYWN0cy5jb250cm9sX2Zsb3cuY29udHJhY3QuTWF0Y2hTdGF0ZW1lbnRzLmdldF9kYXlAMTAKCmdldF9kYXlfc3dpdGNoX2Nhc2VfMEAyOgogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo1OQogICAgLy8gcmV0dXJuIFN0cmluZygiTW9uZGF5IikKICAgIHB1c2hieXRlcyAiTW9uZGF5IgogICAgLy8gc21hcnRfY29udHJhY3RzL2NvbnRyb2xfZmxvdy9jb250cmFjdC5weTo1NQogICAgLy8gQGFyYzQuYWJpbWV0aG9kCiAgICBiIGdldF9kYXlfYWZ0ZXJfaW5saW5lZF9zbWFydF9jb250cmFjdHMuY29udHJvbF9mbG93LmNvbnRyYWN0Lk1hdGNoU3RhdGVtZW50cy5nZXRfZGF5QDEwCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CzEbQQAYgATlpOpSNhoAjgEAAQAxGRQxGBBEQgAIMRkUMRgUEEM2GgEXjQcAawBfAFEARAA5ACwAIYALSW52YWxpZCBkYXlJFRZXBgJMUIAEFR98dUxQsIEBQ4AGU3VuZGF5Qv/hgAhTYXR1cmRheUL/1IAGRnJpZGF5Qv/JgAhUaHVyc2RheUL/vIAJV2VkbmVzZGF5Qv+ugAdUdWVzZGF5Qv+igAZNb25kYXlC/5c=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}