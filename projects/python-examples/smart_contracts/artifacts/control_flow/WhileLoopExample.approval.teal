#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1 0
    // smart_contracts/control_flow/contract.py:80-81
    // # example: WHILE_LOOP
    // class WhileLoopExample(ARC4Contract):
    txn NumAppArgs
    bz main_bare_routing@6
    pushbytes 0xf82a2654 // method "loop()uint64"
    txna ApplicationArgs 0
    match main_loop_route@3

main_after_if_else@10:
    // smart_contracts/control_flow/contract.py:80-81
    // # example: WHILE_LOOP
    // class WhileLoopExample(ARC4Contract):
    intc_1 // 0
    return

main_loop_route@3:
    // smart_contracts/control_flow/contract.py:83
    // @arc4.abimethod
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub loop
    itob
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return

main_bare_routing@6:
    // smart_contracts/control_flow/contract.py:80-81
    // # example: WHILE_LOOP
    // class WhileLoopExample(ARC4Contract):
    txn OnCompletion
    bnz main_after_if_else@10
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    return


// smart_contracts.control_flow.contract.WhileLoopExample.loop() -> uint64:
loop:
    // smart_contracts/control_flow/contract.py:83-84
    // @arc4.abimethod
    // def loop(self) -> UInt64:
    proto 0 1
    pushbytes ""
    // smart_contracts/control_flow/contract.py:86
    // num = UInt64(10)
    pushint 10 // 10
    // smart_contracts/control_flow/contract.py:87
    // loop_count = UInt64(0)
    intc_1 // 0

loop_while_top@1:
    frame_dig 2
    frame_bury 0
    // smart_contracts/control_flow/contract.py:89
    // while num > 0:
    frame_dig 1
    bz loop_after_while@7
    // smart_contracts/control_flow/contract.py:90
    // if num > 5:
    frame_dig 1
    pushint 5 // 5
    >
    bz loop_after_if_else@4
    // smart_contracts/control_flow/contract.py:91
    // num -= 1
    frame_dig 1
    intc_0 // 1
    -
    frame_bury 1
    // smart_contracts/control_flow/contract.py:92
    // loop_count += 1
    frame_dig 2
    intc_0 // 1
    +
    frame_bury 2
    // smart_contracts/control_flow/contract.py:93
    // continue
    b loop_while_top@1

loop_after_if_else@4:
    // smart_contracts/control_flow/contract.py:95
    // num -= 2
    frame_dig 1
    pushint 2 // 2
    -
    dup
    frame_bury 1
    // smart_contracts/control_flow/contract.py:96
    // loop_count += 1
    frame_dig 2
    intc_0 // 1
    +
    frame_bury 2
    // smart_contracts/control_flow/contract.py:98
    // if num == 1:
    intc_0 // 1
    ==
    bz loop_while_top@1
    frame_dig 2
    frame_bury 0

loop_after_while@7:
    // smart_contracts/control_flow/contract.py:101
    // return loop_count
    retsub
