#pragma version 11
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1
    // smart_contracts/control_flow/contract.py:79-80
    // # example: WHILE_LOOP
    // class WhileLoopExample(ARC4Contract):
    txn NumAppArgs
    bz main___algopy_default_create@5
    pushbytes 0xf82a2654 // method "loop()uint64"
    txna ApplicationArgs 0
    match main_loop_route@3
    err

main_loop_route@3:
    // smart_contracts/control_flow/contract.py:81
    // @arc4.abimethod
    txn OnCompletion
    !
    txn ApplicationID
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    b loop

main___algopy_default_create@5:
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating


// smart_contracts.control_flow.contract.WhileLoopExample.loop[routing]() -> void:
loop:
    // smart_contracts/control_flow/contract.py:83-84
    // num = UInt64(10)
    // loop_count = UInt64(0)
    pushints 10 0 // 10, 0

loop_while_top@2:
    // smart_contracts/control_flow/contract.py:86
    // while num > 0:
    dig 1
    bz loop_after_while@8
    // smart_contracts/control_flow/contract.py:87
    // if num > 5:
    dig 1
    pushint 5 // 5
    >
    bz loop_after_if_else@5
    // smart_contracts/control_flow/contract.py:88
    // num -= 1
    dig 1
    intc_0 // 1
    -
    bury 2
    // smart_contracts/control_flow/contract.py:89
    // loop_count += 1
    dup
    intc_0 // 1
    +
    bury 1
    // smart_contracts/control_flow/contract.py:90
    // continue
    b loop_while_top@2

loop_after_if_else@5:
    // smart_contracts/control_flow/contract.py:92
    // num -= 2
    dig 1
    pushint 2 // 2
    -
    dup
    bury 3
    // smart_contracts/control_flow/contract.py:93
    // loop_count += 1
    dig 1
    intc_0 // 1
    +
    bury 2
    // smart_contracts/control_flow/contract.py:95
    // if num == 1:
    intc_0 // 1
    ==
    bz loop_while_top@2

loop_after_while@8:
    // smart_contracts/control_flow/contract.py:81
    // @arc4.abimethod
    dup
    itob
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_0 // 1
    return
