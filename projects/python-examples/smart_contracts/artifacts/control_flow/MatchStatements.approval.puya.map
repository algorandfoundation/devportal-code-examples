{
  "version": 3,
  "sources": [
    "../../control_flow/contract.py"
  ],
  "mappings": ";AAoDA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;;;AAEK;;AAAA;AAAA;AAAA;;AAAA;AAFL;;;AAAA;AAEK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;;AAFL;;AAAA;;;;;;;;;;AAEA;;;AAGQ;;AAAA;;;;;;;;;;;;;;;;AAgBe;;;;;;;;;;;;;AAAP;AAFO;;;;;;;;AAAP;AAFO;;;;;;;;;;AAAP;AAFO;;;;;;;;AAAP;AAFO;;;;;;;;;;AAAP;AAFO;;;;;;;;;;;AAAP;AAFO;;;;;;;;;AAAP;AAFO;;;;;;;;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "3": {
      "op": "bz main_bare_routing@6",
      "stack_out": []
    },
    "6": {
      "op": "pushbytes 0xe5a4ea52 // method \"get_day(uint64)string\""
    },
    "12": {
      "op": "txna ApplicationArgs 0"
    },
    "15": {
      "op": "match main_get_day_route@3"
    },
    "19": {
      "block": "main_after_if_else@10",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "21": {
      "op": "return"
    },
    "22": {
      "block": "main_get_day_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "24": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "25": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "26": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "28": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "29": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "32": {
      "op": "btoi",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "33": {
      "callsub": "smart_contracts.control_flow.contract.MatchStatements.get_day",
      "op": "callsub get_day",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "36": {
      "op": "dup",
      "defined_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ],
      "stack_out": [
        "to_encode%0#0",
        "to_encode%0#0 (copy)"
      ]
    },
    "37": {
      "op": "len",
      "defined_out": [
        "length%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length%0#0"
      ]
    },
    "38": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "as_bytes%0#0"
      ]
    },
    "39": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0",
        "length_uint16%0#0"
      ]
    },
    "42": {
      "op": "swap",
      "stack_out": [
        "length_uint16%0#0",
        "to_encode%0#0"
      ]
    },
    "43": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0"
      ]
    },
    "44": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "50": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%0#0"
      ]
    },
    "51": {
      "op": "concat",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "52": {
      "op": "log",
      "stack_out": []
    },
    "53": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "55": {
      "op": "return"
    },
    "56": {
      "block": "main_bare_routing@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "58": {
      "op": "bnz main_after_if_else@10",
      "stack_out": []
    },
    "61": {
      "op": "txn ApplicationID"
    },
    "63": {
      "op": "!"
    },
    "64": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating"
    },
    "65": {
      "op": "pushint 1 // 1"
    },
    "67": {
      "op": "return"
    },
    "68": {
      "subroutine": "smart_contracts.control_flow.contract.MatchStatements.get_day",
      "params": {
        "date#0": "uint64"
      },
      "block": "get_day",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "71": {
      "op": "frame_dig -1",
      "defined_out": [
        "date#0 (copy)"
      ],
      "stack_out": [
        "date#0 (copy)"
      ]
    },
    "73": {
      "op": "switch get_day_switch_case_0@1 get_day_switch_case_1@2 get_day_switch_case_2@3 get_day_switch_case_3@4 get_day_switch_case_4@5 get_day_switch_case_5@6 get_day_switch_case_6@7",
      "stack_out": []
    },
    "89": {
      "op": "pushbytes \"Invalid day\""
    },
    "102": {
      "retsub": true,
      "op": "retsub"
    },
    "103": {
      "block": "get_day_switch_case_6@7",
      "stack_in": [],
      "op": "pushbytes \"Sunday\"",
      "defined_out": [
        "\"Sunday\""
      ],
      "stack_out": [
        "\"Sunday\""
      ]
    },
    "111": {
      "retsub": true,
      "op": "retsub"
    },
    "112": {
      "block": "get_day_switch_case_5@6",
      "stack_in": [],
      "op": "pushbytes \"Saturday\"",
      "defined_out": [
        "\"Saturday\""
      ],
      "stack_out": [
        "\"Saturday\""
      ]
    },
    "122": {
      "retsub": true,
      "op": "retsub"
    },
    "123": {
      "block": "get_day_switch_case_4@5",
      "stack_in": [],
      "op": "pushbytes \"Friday\"",
      "defined_out": [
        "\"Friday\""
      ],
      "stack_out": [
        "\"Friday\""
      ]
    },
    "131": {
      "retsub": true,
      "op": "retsub"
    },
    "132": {
      "block": "get_day_switch_case_3@4",
      "stack_in": [],
      "op": "pushbytes \"Thursday\"",
      "defined_out": [
        "\"Thursday\""
      ],
      "stack_out": [
        "\"Thursday\""
      ]
    },
    "142": {
      "retsub": true,
      "op": "retsub"
    },
    "143": {
      "block": "get_day_switch_case_2@3",
      "stack_in": [],
      "op": "pushbytes \"Wednesday\"",
      "defined_out": [
        "\"Wednesday\""
      ],
      "stack_out": [
        "\"Wednesday\""
      ]
    },
    "154": {
      "retsub": true,
      "op": "retsub"
    },
    "155": {
      "block": "get_day_switch_case_1@2",
      "stack_in": [],
      "op": "pushbytes \"Tuesday\"",
      "defined_out": [
        "\"Tuesday\""
      ],
      "stack_out": [
        "\"Tuesday\""
      ]
    },
    "164": {
      "retsub": true,
      "op": "retsub"
    },
    "165": {
      "block": "get_day_switch_case_0@1",
      "stack_in": [],
      "op": "pushbytes \"Monday\"",
      "defined_out": [
        "\"Monday\""
      ],
      "stack_out": [
        "\"Monday\""
      ]
    },
    "173": {
      "retsub": true,
      "op": "retsub"
    }
  }
}