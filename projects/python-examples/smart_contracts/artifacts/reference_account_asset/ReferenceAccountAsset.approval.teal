#pragma version 11
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1185 1
    bytecblock base32(WMHF4FLJNKY2BPFK7YPV5ID6OZ7LVDB2B66ZTXEAMLL2NX4WJZRA) 0x151f7c75
    // smart_contracts/reference_account_asset/contract.py:10
    // class ReferenceAccountAsset(ARC4Contract):
    txn NumAppArgs
    bz main___algopy_default_create@9
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0xa65e7b96 0x0b6cfe5d // method "get_asset_balance()uint64", method "get_asset_balance_with_arg(address,uint64)uint64"
    txna ApplicationArgs 0
    match get_asset_balance get_asset_balance_with_arg
    err

main___algopy_default_create@9:
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating


// smart_contracts.reference_account_asset.contract.ReferenceAccountAsset.get_asset_balance[routing]() -> void:
get_asset_balance:
    // smart_contracts/reference_account_asset/contract.py:18-20
    // acct = Account(
    //     "WMHF4FLJNKY2BPFK7YPV5ID6OZ7LVDB2B66ZTXEAMLL2NX4WJZRJFVX66M"
    // )  # Replace with your account address
    bytec_0 // addr WMHF4FLJNKY2BPFK7YPV5ID6OZ7LVDB2B66ZTXEAMLL2NX4WJZRJFVX66M
    // smart_contracts/reference_account_asset/contract.py:21
    // asset = Asset(1185)  # Replace with your asset id
    intc_0 // 1185
    // smart_contracts/reference_account_asset/contract.py:23
    // assert acct.is_opted_in(asset), "Account is not opted in to the asset"
    asset_holding_get AssetBalance
    bury 1
    assert // Account is not opted in to the asset
    // smart_contracts/reference_account_asset/contract.py:18-20
    // acct = Account(
    //     "WMHF4FLJNKY2BPFK7YPV5ID6OZ7LVDB2B66ZTXEAMLL2NX4WJZRJFVX66M"
    // )  # Replace with your account address
    bytec_0 // addr WMHF4FLJNKY2BPFK7YPV5ID6OZ7LVDB2B66ZTXEAMLL2NX4WJZRJFVX66M
    // smart_contracts/reference_account_asset/contract.py:21
    // asset = Asset(1185)  # Replace with your asset id
    intc_0 // 1185
    // smart_contracts/reference_account_asset/contract.py:25
    // return asset.balance(acct)
    asset_holding_get AssetBalance
    assert // account opted into asset
    // smart_contracts/reference_account_asset/contract.py:16
    // @abimethod
    itob
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    return


// smart_contracts.reference_account_asset.contract.ReferenceAccountAsset.get_asset_balance_with_arg[routing]() -> void:
get_asset_balance_with_arg:
    // smart_contracts/reference_account_asset/contract.py:34
    // @abimethod
    txna ApplicationArgs 1
    txna ApplicationArgs 2
    btoi
    // smart_contracts/reference_account_asset/contract.py:36
    // assert acct.is_opted_in(asset), "Account is not opted in to the asset"
    dup2
    asset_holding_get AssetBalance
    bury 1
    assert // Account is not opted in to the asset
    // smart_contracts/reference_account_asset/contract.py:37-38
    // # Get the asset balance
    // return asset.balance(acct)
    asset_holding_get AssetBalance
    assert // account opted into asset
    // smart_contracts/reference_account_asset/contract.py:34
    // @abimethod
    itob
    bytec_1 // 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    return
