{
  "version": 3,
  "sources": [
    "../../self_payment/contract.py"
  ],
  "mappings": "AAmBQ;;AAAiB;AAAjB;AAAA;;;AACI;;AAAgB;;AAAhB;AADJ;;;AAEI;;AAFJ;;;AAGI;;AAAgB;;AAAhB;AAHJ;;;AAII;;AAA0B;;AAA1B;AAJJ;;;AAKI;;AAAW;;AAAX;AALJ;;;AAMI;;AAAuB;AAAvB;AANJ;;;AAQI;;AAAkB;AAAlB;AARJ;;;AASI;;AAAa;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAb;AATJ;;;;AADJ;;;AAAA",
  "op_pc_offset": 2,
  "pc_events": {
    "0": {
      "op": "txn TypeEnum",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "2": {
      "op": "intc_0 // pay",
      "defined_out": [
        "pay",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "pay"
      ]
    },
    "3": {
      "op": "==",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "4": {
      "op": "bz main_bool_false@10",
      "stack_out": []
    },
    "7": {
      "op": "txn Receiver",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "9": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0"
      ]
    },
    "11": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "12": {
      "op": "bz main_bool_false@10",
      "stack_out": []
    },
    "15": {
      "op": "txn Amount",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "17": {
      "op": "bnz main_bool_false@10",
      "stack_out": []
    },
    "20": {
      "op": "txn RekeyTo",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "22": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "24": {
      "op": "==",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "25": {
      "op": "bz main_bool_false@10",
      "stack_out": []
    },
    "28": {
      "op": "txn CloseRemainderTo",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "30": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%10#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "tmp%11#0"
      ]
    },
    "32": {
      "op": "==",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "33": {
      "op": "bz main_bool_false@10",
      "stack_out": []
    },
    "36": {
      "op": "txn Fee",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "38": {
      "op": "global MinTxnFee",
      "defined_out": [
        "tmp%13#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%13#0",
        "tmp%14#0"
      ]
    },
    "40": {
      "op": "==",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "41": {
      "op": "bz main_bool_false@10",
      "stack_out": []
    },
    "44": {
      "op": "global GenesisHash",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "46": {
      "op": "bytec_0 // TMPL_TARGET_NETWORK_GENESIS",
      "defined_out": [
        "TMPL_TARGET_NETWORK_GENESIS",
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0",
        "TMPL_TARGET_NETWORK_GENESIS"
      ]
    },
    "47": {
      "op": "==",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "48": {
      "op": "bz main_bool_false@10",
      "stack_out": []
    },
    "51": {
      "op": "txn LastValid",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "53": {
      "op": "intc_1 // TMPL_LAST_ROUND",
      "defined_out": [
        "TMPL_LAST_ROUND",
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0",
        "TMPL_LAST_ROUND"
      ]
    },
    "54": {
      "op": "==",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "55": {
      "op": "bz main_bool_false@10",
      "stack_out": []
    },
    "58": {
      "op": "txn Lease",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "60": {
      "op": "pushbytes 0xd751a814da6b1673556450ce8f7de3c5cc2eb93ac6c1e54339682c0a8f0af709",
      "defined_out": [
        "0xd751a814da6b1673556450ce8f7de3c5cc2eb93ac6c1e54339682c0a8f0af709",
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0",
        "0xd751a814da6b1673556450ce8f7de3c5cc2eb93ac6c1e54339682c0a8f0af709"
      ]
    },
    "94": {
      "op": "==",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "95": {
      "op": "bz main_bool_false@10",
      "stack_out": []
    },
    "98": {
      "op": "intc_0 // 1",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "99": {
      "op": "return",
      "stack_out": []
    },
    "100": {
      "block": "main_bool_false@10",
      "stack_in": [],
      "op": "pushint 0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "and_result%0#0"
      ]
    },
    "102": {
      "op": "return",
      "stack_out": []
    }
  }
}