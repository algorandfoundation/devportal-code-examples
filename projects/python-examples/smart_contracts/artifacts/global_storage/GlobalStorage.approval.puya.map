{
  "version": 3,
  "sources": [
    "../../global_storage/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeQ;AAAmC;AAAnC;AACA;;AAA6B;AAA7B;AAMA;AACI;AADJ;AAGA;;AAA+B;AAA/B;AAMA;;AAA8B;AAA9B;AAnBR;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;AAAA;;;;;;;;;AA+Be;AAAA;AAAA;AAAiC;AAAjC;;AAAA;AAFV;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAM2B;AAAA;AAAA;AAAA;AAAA;;AAAA;AACrB;;;AACa;AAAZ;;AAJP;AAAA;AAAA;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AASU;AAAA;AAAA;AAAiC;AAAjC;;AAAA;AAA+C;AAA/C;AAAP;AACO;AAAA;;AAAA;AAAA;AAA8B;AAA9B;AAAP;AACO;AAAA;;AAAA;AAAuC;AAAvC;;AAAA;AAAA;AAAP;AAEO;AAAA;AAAA;AAA2B;;;;;;;;;AAA3B;;AAAA;AAAiD;AAAjD;AAAP;AANH;AAAA;AAAA;AAAA;AAcyB;AAAA;AAAA;AACtB;AACoB;AAAb;AAAP;AAEuB;AAAA;AAAA;AACvB;AAAA;AACO;AAAc;AAAd;AAAP;AAGO;AAAP;AAGuB;AAAA;;AAAA;AACvB;AACA;AAEwB;AAAA;;AAAA;AACxB;AAC4B;AAArB;AAAP;AAEwB;AAAA;;AAAA;AACxB;AACkC;AAA3B;AAAP;AAxBH;AAAA;AAAA;AAAA;AAiCU;AAAA;AAAA;AAAA;AAA8B;AAA9B;AAAP;AACO;AAAA;AAAA;AAAA;AAAgC;AAAhC;AAAP;AAEO;AAAA;;AAAA;AAAA;AAA8B;AAA9B;AAAP;AACO;AAAA;;AAAA;AAAA;AAAgC;AAAhC;AAAP;AACY;AAAA;;AAAA;AAAA;AAAZ;AAEO;AAAI;;AAAJ;AAAA;;AAAA;AAAP;AACO;AAAI;;AAAJ;AAAA;;AAAA;AAAP;AACO;AAAI;;AAAJ;AAAA;;AAAA;AAAP;AAEO;AAAA;;AAAA;AAAA;AAAiC;AAAjC;AAAP;AACO;AAAA;;AAAA;AAAA;AAA6C;AAA7C;AAAP;AACO;AAAA;;;;;;;;;;;;;;;;AAAA;AAAA;AAA6B;AAAA;AAAQ;AAArC;AAAP;AAfH;AAAA;AAAA;AAAA;AAqBA;;;AAAA;;;AAEG;AAAA;AAAA;AAFH;AAAA;AAOA;;;AAAA;;;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAQG;;AAAA;;AAAA;AAGA;;AAAA;;AAAA;AACA;AAEA;;AAAA;AAAA;AAdH;AAAA;AAsBO;AAAJ;AAFH;AAAA;AAAA;AAAA;AAUO;;AAAJ;AACI;;AAAJ;AACI;;AAAJ;AAJH;AAAA;AAAA;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 10 50"
    },
    "7": {
      "op": "bytecblock \"global_int_full\" 0x48656c6c6f \"global_bytes_full\" 0x151f7c7580 \"global_bool_no_default\" \"global_asset\" \"global_int_simplified\" \"global_bytes_no_default\" \"global_bytes_simplified\" \"global_bool_simplified\" 0x151f7c75 \"global_int_no_default\" \"global_application\""
    },
    "230": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "232": {
      "op": "bnz main_after_if_else@2",
      "stack_out": []
    },
    "235": {
      "op": "bytec_0 // \"global_int_full\"",
      "defined_out": [
        "\"global_int_full\""
      ],
      "stack_out": [
        "\"global_int_full\""
      ]
    },
    "236": {
      "op": "intc_3 // 50",
      "defined_out": [
        "\"global_int_full\"",
        "50"
      ],
      "stack_out": [
        "\"global_int_full\"",
        "50"
      ]
    },
    "237": {
      "op": "app_global_put",
      "stack_out": []
    },
    "238": {
      "op": "bytec 6 // \"global_int_simplified\"",
      "defined_out": [
        "\"global_int_simplified\""
      ],
      "stack_out": [
        "\"global_int_simplified\""
      ]
    },
    "240": {
      "op": "intc_2 // 10",
      "defined_out": [
        "\"global_int_simplified\"",
        "10"
      ],
      "stack_out": [
        "\"global_int_simplified\"",
        "10"
      ]
    },
    "241": {
      "op": "app_global_put",
      "stack_out": []
    },
    "242": {
      "op": "bytec_2 // \"global_bytes_full\"",
      "defined_out": [
        "\"global_bytes_full\""
      ],
      "stack_out": [
        "\"global_bytes_full\""
      ]
    },
    "243": {
      "op": "bytec_1 // 0x48656c6c6f",
      "defined_out": [
        "\"global_bytes_full\"",
        "0x48656c6c6f"
      ],
      "stack_out": [
        "\"global_bytes_full\"",
        "0x48656c6c6f"
      ]
    },
    "244": {
      "op": "app_global_put",
      "stack_out": []
    },
    "245": {
      "op": "bytec 8 // \"global_bytes_simplified\"",
      "defined_out": [
        "\"global_bytes_simplified\""
      ],
      "stack_out": [
        "\"global_bytes_simplified\""
      ]
    },
    "247": {
      "op": "bytec_1 // 0x48656c6c6f",
      "stack_out": [
        "\"global_bytes_simplified\"",
        "0x48656c6c6f"
      ]
    },
    "248": {
      "op": "app_global_put",
      "stack_out": []
    },
    "249": {
      "op": "bytec 9 // \"global_bool_simplified\"",
      "defined_out": [
        "\"global_bool_simplified\""
      ],
      "stack_out": [
        "\"global_bool_simplified\""
      ]
    },
    "251": {
      "op": "intc_1 // 1",
      "defined_out": [
        "\"global_bool_simplified\"",
        "1"
      ],
      "stack_out": [
        "\"global_bool_simplified\"",
        "1"
      ]
    },
    "252": {
      "op": "app_global_put",
      "stack_out": []
    },
    "253": {
      "block": "main_after_if_else@2",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "255": {
      "op": "bz main___algopy_default_create@18",
      "stack_out": []
    },
    "258": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "260": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "261": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "262": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "264": {
      "op": "assert",
      "stack_out": []
    },
    "265": {
      "op": "pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0xb10b3872 0x3feae30e 0x8fd05d5a // method \"get_global_state()uint64\", method \"maybe_global_state()(uint64,bool)\", method \"get_global_state_example()bool\", method \"maybe_global_state_example()bool\", method \"check_global_state_example()bool\", method \"set_global_state(byte[])void\", method \"set_global_state_example(byte[],uint64,bool)void\", method \"del_global_state()bool\", method \"del_global_state_example()bool\"",
      "defined_out": [
        "Method(check_global_state_example()bool)",
        "Method(del_global_state()bool)",
        "Method(del_global_state_example()bool)",
        "Method(get_global_state()uint64)",
        "Method(get_global_state_example()bool)",
        "Method(maybe_global_state()(uint64,bool))",
        "Method(maybe_global_state_example()bool)",
        "Method(set_global_state(byte[])void)",
        "Method(set_global_state_example(byte[],uint64,bool)void)"
      ],
      "stack_out": [
        "Method(get_global_state()uint64)",
        "Method(maybe_global_state()(uint64,bool))",
        "Method(get_global_state_example()bool)",
        "Method(maybe_global_state_example()bool)",
        "Method(check_global_state_example()bool)",
        "Method(set_global_state(byte[])void)",
        "Method(set_global_state_example(byte[],uint64,bool)void)",
        "Method(del_global_state()bool)",
        "Method(del_global_state_example()bool)"
      ]
    },
    "312": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(check_global_state_example()bool)",
        "Method(del_global_state()bool)",
        "Method(del_global_state_example()bool)",
        "Method(get_global_state()uint64)",
        "Method(get_global_state_example()bool)",
        "Method(maybe_global_state()(uint64,bool))",
        "Method(maybe_global_state_example()bool)",
        "Method(set_global_state(byte[])void)",
        "Method(set_global_state_example(byte[],uint64,bool)void)",
        "tmp%6#0"
      ],
      "stack_out": [
        "Method(get_global_state()uint64)",
        "Method(maybe_global_state()(uint64,bool))",
        "Method(get_global_state_example()bool)",
        "Method(maybe_global_state_example()bool)",
        "Method(check_global_state_example()bool)",
        "Method(set_global_state(byte[])void)",
        "Method(set_global_state_example(byte[],uint64,bool)void)",
        "Method(del_global_state()bool)",
        "Method(del_global_state_example()bool)",
        "tmp%6#0"
      ]
    },
    "315": {
      "op": "match get_global_state maybe_global_state get_global_state_example maybe_global_state_example check_global_state_example set_global_state set_global_state_example del_global_state del_global_state_example",
      "stack_out": []
    },
    "335": {
      "op": "err"
    },
    "336": {
      "block": "main___algopy_default_create@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "338": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "339": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "341": {
      "op": "!",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "342": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "343": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "return // on error: OnCompletion must be NoOp && can only call when creating",
      "defined_out": [],
      "stack_out": []
    },
    "344": {
      "subroutine": "smart_contracts.global_storage.contract.GlobalStorage.get_global_state[routing]",
      "params": {},
      "block": "get_global_state",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "345": {
      "op": "bytec_0 // \"global_int_full\"",
      "defined_out": [
        "\"global_int_full\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_int_full\""
      ]
    },
    "346": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "347": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0",
        "0"
      ]
    },
    "348": {
      "op": "cover 2",
      "stack_out": [
        "0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "350": {
      "op": "select",
      "defined_out": [
        "state_get%0#0"
      ],
      "stack_out": [
        "state_get%0#0"
      ]
    },
    "351": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "352": {
      "op": "bytec 10 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "354": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "355": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "356": {
      "op": "log",
      "stack_out": []
    },
    "357": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "358": {
      "op": "return",
      "stack_out": []
    },
    "359": {
      "subroutine": "smart_contracts.global_storage.contract.GlobalStorage.maybe_global_state[routing]",
      "params": {},
      "block": "maybe_global_state",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "360": {
      "op": "bytec_0 // \"global_int_full\"",
      "defined_out": [
        "\"global_int_full\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_int_full\""
      ]
    },
    "361": {
      "op": "app_global_get_ex",
      "defined_out": [
        "int_exists#0",
        "int_value#0"
      ],
      "stack_out": [
        "int_value#0",
        "int_exists#0"
      ]
    },
    "362": {
      "op": "dup",
      "stack_out": [
        "int_value#0",
        "int_exists#0",
        "int_exists#0 (copy)"
      ]
    },
    "363": {
      "op": "uncover 2",
      "defined_out": [
        "int_exists#0",
        "int_value#0"
      ],
      "stack_out": [
        "int_exists#0",
        "int_exists#0",
        "int_value#0"
      ]
    },
    "365": {
      "op": "swap",
      "defined_out": [
        "int_exists#0",
        "int_value#0"
      ],
      "stack_out": [
        "int_exists#0",
        "int_value#0",
        "int_exists#0"
      ]
    },
    "366": {
      "op": "bnz maybe_global_state_after_if_else@3",
      "stack_out": [
        "int_exists#0",
        "int_value#0"
      ]
    },
    "369": {
      "op": "intc_0 // 0",
      "stack_out": [
        "int_exists#0",
        "int_value#0",
        "int_value#0"
      ]
    },
    "370": {
      "op": "bury 1",
      "stack_out": [
        "int_exists#0",
        "int_value#0"
      ]
    },
    "372": {
      "block": "maybe_global_state_after_if_else@3",
      "stack_in": [
        "int_exists#0",
        "int_value#0"
      ],
      "op": "dup",
      "defined_out": [
        "int_value#0"
      ],
      "stack_out": [
        "int_exists#0",
        "int_value#0",
        "int_value#0"
      ]
    },
    "373": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "int_value#0"
      ],
      "stack_out": [
        "int_exists#0",
        "int_value#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "374": {
      "op": "pushbytes 0x00",
      "defined_out": [
        "0x00",
        "aggregate%val_as_bytes%0#0",
        "int_value#0"
      ],
      "stack_out": [
        "int_exists#0",
        "int_value#0",
        "aggregate%val_as_bytes%0#0",
        "0x00"
      ]
    },
    "377": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%val_as_bytes%0#0",
        "int_value#0"
      ],
      "stack_out": [
        "int_exists#0",
        "int_value#0",
        "aggregate%val_as_bytes%0#0",
        "0x00",
        "0"
      ]
    },
    "378": {
      "op": "dig 4",
      "defined_out": [
        "0",
        "0x00",
        "aggregate%val_as_bytes%0#0",
        "int_exists#0",
        "int_value#0"
      ],
      "stack_out": [
        "int_exists#0",
        "int_value#0",
        "aggregate%val_as_bytes%0#0",
        "0x00",
        "0",
        "int_exists#0"
      ]
    },
    "380": {
      "op": "setbit",
      "defined_out": [
        "aggregate%encoded_bool%0#0",
        "aggregate%val_as_bytes%0#0",
        "int_exists#0",
        "int_value#0"
      ],
      "stack_out": [
        "int_exists#0",
        "int_value#0",
        "aggregate%val_as_bytes%0#0",
        "aggregate%encoded_bool%0#0"
      ]
    },
    "381": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%1#0",
        "int_exists#0",
        "int_value#0"
      ],
      "stack_out": [
        "int_exists#0",
        "int_value#0",
        "aggregate%head%1#0"
      ]
    },
    "382": {
      "op": "bytec 10 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%head%1#0",
        "int_exists#0",
        "int_value#0"
      ],
      "stack_out": [
        "int_exists#0",
        "int_value#0",
        "aggregate%head%1#0",
        "0x151f7c75"
      ]
    },
    "384": {
      "op": "swap",
      "stack_out": [
        "int_exists#0",
        "int_value#0",
        "0x151f7c75",
        "aggregate%head%1#0"
      ]
    },
    "385": {
      "op": "concat",
      "defined_out": [
        "int_exists#0",
        "int_value#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "int_exists#0",
        "int_value#0",
        "tmp%3#0"
      ]
    },
    "386": {
      "op": "log",
      "stack_out": [
        "int_exists#0",
        "int_value#0"
      ]
    },
    "387": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "int_exists#0",
        "int_value#0"
      ],
      "stack_out": [
        "int_exists#0",
        "int_value#0",
        "1"
      ]
    },
    "388": {
      "op": "return",
      "stack_out": [
        "int_exists#0",
        "int_value#0"
      ]
    },
    "389": {
      "subroutine": "smart_contracts.global_storage.contract.GlobalStorage.get_global_state_example[routing]",
      "params": {},
      "block": "get_global_state_example",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "390": {
      "op": "bytec_0 // \"global_int_full\"",
      "defined_out": [
        "\"global_int_full\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_int_full\""
      ]
    },
    "391": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "392": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0",
        "0"
      ]
    },
    "393": {
      "op": "cover 2",
      "stack_out": [
        "0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "395": {
      "op": "select",
      "defined_out": [
        "state_get%0#0"
      ],
      "stack_out": [
        "state_get%0#0"
      ]
    },
    "396": {
      "op": "intc_3 // 50",
      "defined_out": [
        "50",
        "state_get%0#0"
      ],
      "stack_out": [
        "state_get%0#0",
        "50"
      ]
    },
    "397": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "398": {
      "op": "assert",
      "stack_out": []
    },
    "399": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "400": {
      "op": "bytec 6 // \"global_int_simplified\"",
      "defined_out": [
        "\"global_int_simplified\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_int_simplified\""
      ]
    },
    "402": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "403": {
      "error": "check self.global_int_simplified exists",
      "op": "assert // check self.global_int_simplified exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "404": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "10"
      ]
    },
    "405": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "406": {
      "op": "assert",
      "stack_out": []
    },
    "407": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "408": {
      "op": "bytec 11 // \"global_int_no_default\"",
      "defined_out": [
        "\"global_int_no_default\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_int_no_default\""
      ]
    },
    "410": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "411": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0",
        "0"
      ]
    },
    "412": {
      "op": "cover 2",
      "stack_out": [
        "0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "414": {
      "op": "select",
      "defined_out": [
        "state_get%1#0"
      ],
      "stack_out": [
        "state_get%1#0"
      ]
    },
    "415": {
      "op": "!",
      "defined_out": [
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%2#1"
      ]
    },
    "416": {
      "op": "assert",
      "stack_out": []
    },
    "417": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "418": {
      "op": "bytec_2 // \"global_bytes_full\"",
      "defined_out": [
        "\"global_bytes_full\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bytes_full\""
      ]
    },
    "419": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "420": {
      "op": "pushbytes 0x64656661756c74",
      "defined_out": [
        "0x64656661756c74",
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0",
        "0x64656661756c74"
      ]
    },
    "429": {
      "op": "cover 2",
      "stack_out": [
        "0x64656661756c74",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "431": {
      "op": "select",
      "defined_out": [
        "state_get%2#0"
      ],
      "stack_out": [
        "state_get%2#0"
      ]
    },
    "432": {
      "op": "bytec_1 // 0x48656c6c6f",
      "defined_out": [
        "0x48656c6c6f",
        "state_get%2#0"
      ],
      "stack_out": [
        "state_get%2#0",
        "0x48656c6c6f"
      ]
    },
    "433": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "434": {
      "op": "assert",
      "stack_out": []
    },
    "435": {
      "op": "bytec_3 // 0x151f7c7580",
      "defined_out": [
        "0x151f7c7580"
      ],
      "stack_out": [
        "0x151f7c7580"
      ]
    },
    "436": {
      "op": "log",
      "stack_out": []
    },
    "437": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "438": {
      "op": "return",
      "stack_out": []
    },
    "439": {
      "subroutine": "smart_contracts.global_storage.contract.GlobalStorage.maybe_global_state_example[routing]",
      "params": {},
      "block": "maybe_global_state_example",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "440": {
      "op": "bytec_0 // \"global_int_full\"",
      "defined_out": [
        "\"global_int_full\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_int_full\""
      ]
    },
    "441": {
      "op": "app_global_get_ex",
      "defined_out": [
        "i_exists#0",
        "int_value#0"
      ],
      "stack_out": [
        "int_value#0",
        "i_exists#0"
      ]
    },
    "442": {
      "op": "assert",
      "stack_out": [
        "int_value#0"
      ]
    },
    "443": {
      "op": "intc_3 // 50",
      "defined_out": [
        "50",
        "int_value#0"
      ],
      "stack_out": [
        "int_value#0",
        "50"
      ]
    },
    "444": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "445": {
      "op": "assert",
      "stack_out": []
    },
    "446": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "447": {
      "op": "bytec_2 // \"global_bytes_full\"",
      "defined_out": [
        "\"global_bytes_full\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bytes_full\""
      ]
    },
    "448": {
      "op": "app_global_get_ex",
      "defined_out": [
        "b_exists#0",
        "byte_value#0"
      ],
      "stack_out": [
        "byte_value#0",
        "b_exists#0"
      ]
    },
    "449": {
      "op": "dup",
      "defined_out": [
        "b_exists#0",
        "b_exists#0 (copy)",
        "byte_value#0"
      ],
      "stack_out": [
        "byte_value#0",
        "b_exists#0",
        "b_exists#0 (copy)"
      ]
    },
    "450": {
      "op": "assert",
      "stack_out": [
        "byte_value#0",
        "b_exists#0"
      ]
    },
    "451": {
      "op": "swap",
      "stack_out": [
        "b_exists#0",
        "byte_value#0"
      ]
    },
    "452": {
      "op": "bytec_1 // 0x48656c6c6f",
      "defined_out": [
        "0x48656c6c6f",
        "b_exists#0",
        "byte_value#0"
      ],
      "stack_out": [
        "b_exists#0",
        "byte_value#0",
        "0x48656c6c6f"
      ]
    },
    "453": {
      "op": "==",
      "defined_out": [
        "b_exists#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "b_exists#0",
        "tmp%1#1"
      ]
    },
    "454": {
      "op": "assert",
      "stack_out": [
        "b_exists#0"
      ]
    },
    "455": {
      "op": "!",
      "defined_out": [
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%2#1"
      ]
    },
    "456": {
      "op": "assert",
      "stack_out": []
    },
    "457": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "458": {
      "op": "bytec 4 // \"global_bool_no_default\"",
      "defined_out": [
        "\"global_bool_no_default\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bool_no_default\""
      ]
    },
    "460": {
      "op": "app_global_get_ex",
      "defined_out": [
        "bool_value#0",
        "i_exists#0"
      ],
      "stack_out": [
        "bool_value#0",
        "i_exists#0"
      ]
    },
    "461": {
      "op": "assert",
      "stack_out": [
        "bool_value#0"
      ]
    },
    "462": {
      "op": "assert",
      "stack_out": []
    },
    "463": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "464": {
      "op": "bytec 5 // \"global_asset\"",
      "defined_out": [
        "\"global_asset\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_asset\""
      ]
    },
    "466": {
      "op": "app_global_get_ex",
      "defined_out": [
        "asset_value#0",
        "i_exists#0"
      ],
      "stack_out": [
        "asset_value#0",
        "i_exists#0"
      ]
    },
    "467": {
      "op": "assert",
      "stack_out": [
        "asset_value#0"
      ]
    },
    "468": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "asset_value#0"
      ],
      "stack_out": [
        "asset_value#0",
        "10"
      ]
    },
    "469": {
      "op": "==",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "470": {
      "op": "assert",
      "stack_out": []
    },
    "471": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "472": {
      "op": "bytec 12 // \"global_application\"",
      "defined_out": [
        "\"global_application\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_application\""
      ]
    },
    "474": {
      "op": "app_global_get_ex",
      "defined_out": [
        "appln_value#0",
        "i_exists#0"
      ],
      "stack_out": [
        "appln_value#0",
        "i_exists#0"
      ]
    },
    "475": {
      "op": "assert",
      "stack_out": [
        "appln_value#0"
      ]
    },
    "476": {
      "op": "intc_2 // 10",
      "stack_out": [
        "appln_value#0",
        "10"
      ]
    },
    "477": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "478": {
      "op": "assert",
      "stack_out": []
    },
    "479": {
      "op": "bytec_3 // 0x151f7c7580",
      "defined_out": [
        "0x151f7c7580"
      ],
      "stack_out": [
        "0x151f7c7580"
      ]
    },
    "480": {
      "op": "log",
      "stack_out": []
    },
    "481": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "482": {
      "op": "return",
      "stack_out": []
    },
    "483": {
      "subroutine": "smart_contracts.global_storage.contract.GlobalStorage.check_global_state_example[routing]",
      "params": {},
      "block": "check_global_state_example",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "484": {
      "op": "bytec_0 // \"global_int_full\"",
      "defined_out": [
        "\"global_int_full\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_int_full\""
      ]
    },
    "485": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "486": {
      "error": "check self.global_int_full exists",
      "op": "assert // check self.global_int_full exists",
      "stack_out": [
        "maybe_value%0#0"
      ]
    },
    "487": {
      "op": "intc_3 // 50",
      "defined_out": [
        "50",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "50"
      ]
    },
    "488": {
      "op": "==",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "489": {
      "op": "assert",
      "stack_out": []
    },
    "490": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "491": {
      "op": "bytec_2 // \"global_bytes_full\"",
      "defined_out": [
        "\"global_bytes_full\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bytes_full\""
      ]
    },
    "492": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "493": {
      "error": "check self.global_bytes_full exists",
      "op": "assert // check self.global_bytes_full exists",
      "stack_out": [
        "maybe_value%1#0"
      ]
    },
    "494": {
      "op": "bytec_1 // 0x48656c6c6f",
      "defined_out": [
        "0x48656c6c6f",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "maybe_value%1#0",
        "0x48656c6c6f"
      ]
    },
    "495": {
      "op": "==",
      "defined_out": [
        "tmp%1#1"
      ],
      "stack_out": [
        "tmp%1#1"
      ]
    },
    "496": {
      "op": "assert",
      "stack_out": []
    },
    "497": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "498": {
      "op": "bytec 6 // \"global_int_simplified\"",
      "defined_out": [
        "\"global_int_simplified\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_int_simplified\""
      ]
    },
    "500": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "501": {
      "error": "check self.global_int_simplified exists",
      "op": "assert // check self.global_int_simplified exists",
      "stack_out": [
        "maybe_value%2#0"
      ]
    },
    "502": {
      "op": "intc_2 // 10",
      "defined_out": [
        "10",
        "maybe_value%2#0"
      ],
      "stack_out": [
        "maybe_value%2#0",
        "10"
      ]
    },
    "503": {
      "op": "==",
      "defined_out": [
        "tmp%2#1"
      ],
      "stack_out": [
        "tmp%2#1"
      ]
    },
    "504": {
      "op": "assert",
      "stack_out": []
    },
    "505": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "506": {
      "op": "bytec 8 // \"global_bytes_simplified\"",
      "defined_out": [
        "\"global_bytes_simplified\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bytes_simplified\""
      ]
    },
    "508": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0"
      ],
      "stack_out": [
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "509": {
      "error": "check self.global_bytes_simplified exists",
      "op": "assert // check self.global_bytes_simplified exists",
      "stack_out": [
        "maybe_value%3#0"
      ]
    },
    "510": {
      "op": "bytec_1 // 0x48656c6c6f",
      "stack_out": [
        "maybe_value%3#0",
        "0x48656c6c6f"
      ]
    },
    "511": {
      "op": "==",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "512": {
      "op": "assert",
      "stack_out": []
    },
    "513": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "514": {
      "op": "bytec 9 // \"global_bool_simplified\"",
      "defined_out": [
        "\"global_bool_simplified\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bool_simplified\""
      ]
    },
    "516": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%4#0",
        "maybe_value%4#0"
      ],
      "stack_out": [
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "517": {
      "error": "check self.global_bool_simplified exists",
      "op": "assert // check self.global_bool_simplified exists",
      "stack_out": [
        "maybe_value%4#0"
      ]
    },
    "518": {
      "op": "assert",
      "stack_out": []
    },
    "519": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "520": {
      "op": "bytec 11 // \"global_int_no_default\"",
      "defined_out": [
        "\"global_int_no_default\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_int_no_default\""
      ]
    },
    "522": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%0#0",
        "maybe_exists%5#0"
      ],
      "stack_out": [
        "_%0#0",
        "maybe_exists%5#0"
      ]
    },
    "523": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%5#0"
      ]
    },
    "525": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "526": {
      "op": "assert",
      "stack_out": []
    },
    "527": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "528": {
      "op": "bytec 7 // \"global_bytes_no_default\"",
      "defined_out": [
        "\"global_bytes_no_default\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bytes_no_default\""
      ]
    },
    "530": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%1#0",
        "maybe_exists%6#0"
      ],
      "stack_out": [
        "_%1#0",
        "maybe_exists%6#0"
      ]
    },
    "531": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%6#0"
      ]
    },
    "533": {
      "op": "!",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "534": {
      "op": "assert",
      "stack_out": []
    },
    "535": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "536": {
      "op": "bytec 4 // \"global_bool_no_default\"",
      "defined_out": [
        "\"global_bool_no_default\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_bool_no_default\""
      ]
    },
    "538": {
      "op": "app_global_get_ex",
      "defined_out": [
        "_%2#0",
        "maybe_exists%7#0"
      ],
      "stack_out": [
        "_%2#0",
        "maybe_exists%7#0"
      ]
    },
    "539": {
      "op": "bury 1",
      "stack_out": [
        "maybe_exists%7#0"
      ]
    },
    "541": {
      "op": "!",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "542": {
      "op": "assert",
      "stack_out": []
    },
    "543": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "544": {
      "op": "bytec 5 // \"global_asset\"",
      "defined_out": [
        "\"global_asset\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_asset\""
      ]
    },
    "546": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%5#0"
      ],
      "stack_out": [
        "maybe_value%5#0",
        "maybe_exists%8#0"
      ]
    },
    "547": {
      "error": "check self.global_asset exists",
      "op": "assert // check self.global_asset exists",
      "stack_out": [
        "maybe_value%5#0"
      ]
    },
    "548": {
      "op": "intc_2 // 10",
      "stack_out": [
        "maybe_value%5#0",
        "10"
      ]
    },
    "549": {
      "op": "==",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "550": {
      "op": "assert",
      "stack_out": []
    },
    "551": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "552": {
      "op": "bytec 12 // \"global_application\"",
      "defined_out": [
        "\"global_application\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_application\""
      ]
    },
    "554": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%6#0"
      ],
      "stack_out": [
        "maybe_value%6#0",
        "maybe_exists%9#0"
      ]
    },
    "555": {
      "error": "check self.global_application exists",
      "op": "assert // check self.global_application exists",
      "stack_out": [
        "maybe_value%6#0"
      ]
    },
    "556": {
      "op": "intc_2 // 10",
      "stack_out": [
        "maybe_value%6#0",
        "10"
      ]
    },
    "557": {
      "op": "==",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "558": {
      "op": "assert",
      "stack_out": []
    },
    "559": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "560": {
      "op": "pushbytes \"global_account\"",
      "defined_out": [
        "\"global_account\"",
        "0"
      ],
      "stack_out": [
        "0",
        "\"global_account\""
      ]
    },
    "576": {
      "op": "app_global_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%7#0"
      ],
      "stack_out": [
        "maybe_value%7#0",
        "maybe_exists%10#0"
      ]
    },
    "577": {
      "error": "check self.global_account exists",
      "op": "assert // check self.global_account exists",
      "stack_out": [
        "maybe_value%7#0"
      ]
    },
    "578": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%7#0",
        "0"
      ]
    },
    "579": {
      "error": "Address length is 32 bytes",
      "op": "assert // Address length is 32 bytes",
      "stack_out": [
        "maybe_value%7#0"
      ]
    },
    "580": {
      "op": "bytec_1 // 0x48656c6c6f",
      "stack_out": [
        "maybe_value%7#0",
        "0x48656c6c6f"
      ]
    },
    "581": {
      "op": "==",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "582": {
      "op": "assert",
      "stack_out": []
    },
    "583": {
      "op": "bytec_3 // 0x151f7c7580",
      "defined_out": [
        "0x151f7c7580"
      ],
      "stack_out": [
        "0x151f7c7580"
      ]
    },
    "584": {
      "op": "log",
      "stack_out": []
    },
    "585": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "586": {
      "op": "return",
      "stack_out": []
    },
    "587": {
      "subroutine": "smart_contracts.global_storage.contract.GlobalStorage.set_global_state[routing]",
      "params": {},
      "block": "set_global_state",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "590": {
      "op": "extract 2 0",
      "defined_out": [
        "value#0"
      ],
      "stack_out": [
        "value#0"
      ]
    },
    "593": {
      "op": "bytec_2 // \"global_bytes_full\"",
      "defined_out": [
        "\"global_bytes_full\"",
        "value#0"
      ],
      "stack_out": [
        "value#0",
        "\"global_bytes_full\""
      ]
    },
    "594": {
      "op": "swap",
      "stack_out": [
        "\"global_bytes_full\"",
        "value#0"
      ]
    },
    "595": {
      "op": "app_global_put",
      "stack_out": []
    },
    "596": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "597": {
      "op": "return",
      "stack_out": []
    },
    "598": {
      "subroutine": "smart_contracts.global_storage.contract.GlobalStorage.set_global_state_example[routing]",
      "params": {},
      "block": "set_global_state_example",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+uint8[])%0#0"
      ]
    },
    "601": {
      "op": "extract 2 0",
      "defined_out": [
        "value_bytes#0"
      ],
      "stack_out": [
        "value_bytes#0"
      ]
    },
    "604": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0",
        "value_bytes#0"
      ],
      "stack_out": [
        "value_bytes#0",
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "607": {
      "op": "btoi",
      "defined_out": [
        "value_asset#0",
        "value_bytes#0"
      ],
      "stack_out": [
        "value_bytes#0",
        "value_asset#0"
      ]
    },
    "608": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_Encoded(bool8)%0#0",
        "value_asset#0",
        "value_bytes#0"
      ],
      "stack_out": [
        "value_bytes#0",
        "value_asset#0",
        "reinterpret_Encoded(bool8)%0#0"
      ]
    },
    "611": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_Encoded(bool8)%0#0",
        "value_asset#0",
        "value_bytes#0"
      ],
      "stack_out": [
        "value_bytes#0",
        "value_asset#0",
        "reinterpret_Encoded(bool8)%0#0",
        "0"
      ]
    },
    "612": {
      "op": "getbit",
      "defined_out": [
        "value_asset#0",
        "value_bool#0",
        "value_bytes#0"
      ],
      "stack_out": [
        "value_bytes#0",
        "value_asset#0",
        "value_bool#0"
      ]
    },
    "613": {
      "op": "bytec 7 // \"global_bytes_no_default\"",
      "defined_out": [
        "\"global_bytes_no_default\"",
        "value_asset#0",
        "value_bool#0",
        "value_bytes#0"
      ],
      "stack_out": [
        "value_bytes#0",
        "value_asset#0",
        "value_bool#0",
        "\"global_bytes_no_default\""
      ]
    },
    "615": {
      "op": "uncover 3",
      "stack_out": [
        "value_asset#0",
        "value_bool#0",
        "\"global_bytes_no_default\"",
        "value_bytes#0"
      ]
    },
    "617": {
      "op": "app_global_put",
      "stack_out": [
        "value_asset#0",
        "value_bool#0"
      ]
    },
    "618": {
      "op": "bytec 4 // \"global_bool_no_default\"",
      "defined_out": [
        "\"global_bool_no_default\"",
        "value_asset#0",
        "value_bool#0"
      ],
      "stack_out": [
        "value_asset#0",
        "value_bool#0",
        "\"global_bool_no_default\""
      ]
    },
    "620": {
      "op": "dig 1",
      "defined_out": [
        "\"global_bool_no_default\"",
        "value_asset#0",
        "value_bool#0",
        "value_bool#0 (copy)"
      ],
      "stack_out": [
        "value_asset#0",
        "value_bool#0",
        "\"global_bool_no_default\"",
        "value_bool#0 (copy)"
      ]
    },
    "622": {
      "op": "app_global_put",
      "stack_out": [
        "value_asset#0",
        "value_bool#0"
      ]
    },
    "623": {
      "op": "assert",
      "stack_out": [
        "value_asset#0"
      ]
    },
    "624": {
      "op": "bytec 5 // \"global_asset\"",
      "defined_out": [
        "\"global_asset\"",
        "value_asset#0"
      ],
      "stack_out": [
        "value_asset#0",
        "\"global_asset\""
      ]
    },
    "626": {
      "op": "swap",
      "stack_out": [
        "\"global_asset\"",
        "value_asset#0"
      ]
    },
    "627": {
      "op": "app_global_put",
      "stack_out": []
    },
    "628": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "629": {
      "op": "return",
      "stack_out": []
    },
    "630": {
      "subroutine": "smart_contracts.global_storage.contract.GlobalStorage.del_global_state[routing]",
      "params": {},
      "block": "del_global_state",
      "stack_in": [],
      "op": "bytec_0 // \"global_int_full\"",
      "defined_out": [
        "\"global_int_full\""
      ],
      "stack_out": [
        "\"global_int_full\""
      ]
    },
    "631": {
      "op": "app_global_del",
      "stack_out": []
    },
    "632": {
      "op": "bytec_3 // 0x151f7c7580",
      "defined_out": [
        "0x151f7c7580"
      ],
      "stack_out": [
        "0x151f7c7580"
      ]
    },
    "633": {
      "op": "log",
      "stack_out": []
    },
    "634": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "635": {
      "op": "return",
      "stack_out": []
    },
    "636": {
      "subroutine": "smart_contracts.global_storage.contract.GlobalStorage.del_global_state_example[routing]",
      "params": {},
      "block": "del_global_state_example",
      "stack_in": [],
      "op": "bytec 7 // \"global_bytes_no_default\"",
      "defined_out": [
        "\"global_bytes_no_default\""
      ],
      "stack_out": [
        "\"global_bytes_no_default\""
      ]
    },
    "638": {
      "op": "app_global_del",
      "stack_out": []
    },
    "639": {
      "op": "bytec 4 // \"global_bool_no_default\"",
      "defined_out": [
        "\"global_bool_no_default\""
      ],
      "stack_out": [
        "\"global_bool_no_default\""
      ]
    },
    "641": {
      "op": "app_global_del",
      "stack_out": []
    },
    "642": {
      "op": "bytec 5 // \"global_asset\"",
      "defined_out": [
        "\"global_asset\""
      ],
      "stack_out": [
        "\"global_asset\""
      ]
    },
    "644": {
      "op": "app_global_del",
      "stack_out": []
    },
    "645": {
      "op": "bytec_3 // 0x151f7c7580",
      "defined_out": [
        "0x151f7c7580"
      ],
      "stack_out": [
        "0x151f7c7580"
      ]
    },
    "646": {
      "op": "log",
      "stack_out": []
    },
    "647": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "648": {
      "op": "return",
      "stack_out": []
    }
  }
}