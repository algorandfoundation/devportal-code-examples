{
    "name": "Arc4Types",
    "structs": {},
    "methods": [
        {
            "name": "add_arc4_uint64",
            "args": [
                {
                    "type": "uint64",
                    "name": "a"
                },
                {
                    "type": "uint64",
                    "name": "b"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Math operations (like a + b) are not supported on arc4.UInt64 types\nsince they are internally represented as byte arrays in the AVM. Use the .native property to perform arithmetic operations.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "add_arc4_uint_n",
            "args": [
                {
                    "type": "uint8",
                    "name": "a"
                },
                {
                    "type": "uint16",
                    "name": "b"
                },
                {
                    "type": "uint32",
                    "name": "c"
                },
                {
                    "type": "uint64",
                    "name": "d"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "The encoding of arc4 integers will be smaller if it uses fewer bits.\nUltimately, they are all represented with native UInt64.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "add_arc4_biguint_n",
            "args": [
                {
                    "type": "uint128",
                    "name": "a"
                },
                {
                    "type": "uint256",
                    "name": "b"
                },
                {
                    "type": "uint512",
                    "name": "c"
                }
            ],
            "returns": {
                "type": "uint512"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Integers with larger bit size are supported up to 512 bits.\nUltimately, they are all represented with native BigUInt.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "arc4_byte",
            "args": [
                {
                    "type": "byte",
                    "name": "a"
                }
            ],
            "returns": {
                "type": "byte"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "An arc4.Byte is essentially an alias for an 8-bit integer.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "arc4_address_properties",
            "args": [
                {
                    "type": "address",
                    "name": "address"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "arc4_address_return",
            "args": [
                {
                    "type": "address",
                    "name": "address"
                }
            ],
            "returns": {
                "type": "address"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        21
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        82
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                },
                {
                    "pc": [
                        231,
                        237
                    ],
                    "errorMessage": "account funded"
                },
                {
                    "pc": [
                        194,
                        215
                    ],
                    "errorMessage": "overflow"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyADAUAIJgEEFR98dTEbQQA5MRkURDEYRIIGBAWUORcEhFsGhQTq0XDPBNy2iX8E/dz0TwTy7I5YNhoAjgYACQAaAFQAggCXAKsAMRkUMRgUEEM2GgI2GgEXTBcIFihMULAiQzYaATYaAjYaAzYaBEsDFSISREsCFYECEkRLARWBBBJESRUkEkRPAxdPAxcITwIXCEwXCBYoTFCwIkM2GgE2GgI2GgNLAhWBEBJESwEVgSASREkVIxJETgKgoEkVIw5EI6+rKExQsCJDNhoBFyIIFkmTJA5EVwcBKExQsCJDNhoBSXMARExzCUUBRBYoTFCwIkMoNhoBULAiQw==",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}