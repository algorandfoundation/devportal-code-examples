{
    "name": "Arc4Tuple",
    "structs": {},
    "methods": [
        {
            "name": "add_contact_info",
            "args": [
                {
                    "type": "(string,string,uint64)",
                    "name": "contact"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "An arc4.Tuple is a heterogeneous collection of arc4 types.",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "return_contact",
            "args": [],
            "returns": {
                "type": "(string,string,uint64)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "An arc4.Tuple can be returned when more than one return value is needed.",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 1
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "contact_info": {
                    "keyType": "AVMString",
                    "valueType": "(string,string,uint64)",
                    "key": "Y29udGFjdF9pbmZv"
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        156
                    ],
                    "errorMessage": "Index access is out of bounds"
                },
                {
                    "pc": [
                        81,
                        97
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        122
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        84,
                        100
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        225
                    ],
                    "errorMessage": "check self.contact_info exists"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBzbWFydF9jb250cmFjdHMuYXJjNF90eXBlcy5jb250cmFjdC5BcmM0VHVwbGUuX19hbGdvcHlfZW50cnlwb2ludF93aXRoX2luaXQoKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCAxCiAgICBieXRlY2Jsb2NrICJjb250YWN0X2luZm8iIDB4MTUxZjdjNzUKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hcmM0X3R5cGVzL2NvbnRyYWN0LnB5OjI4MgogICAgLy8gc2VsZi5jb250YWN0X2luZm8gPSBHbG9iYWxTdGF0ZSgKICAgIGJ5dGVjXzAgLy8gImNvbnRhY3RfaW5mbyIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hcmM0X3R5cGVzL2NvbnRyYWN0LnB5OjI4MwogICAgLy8gY29udGFjdF9pbmZvX3R1cGxlKChhcmM0LlN0cmluZygiIiksIGFyYzQuU3RyaW5nKCIiKSwgYXJjNC5VSW50NjQoMCkpKQogICAgcHVzaGJ5dGVzIDB4MDAwYzAwMGUwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hcmM0X3R5cGVzL2NvbnRyYWN0LnB5OjI4Mi0yODQKICAgIC8vIHNlbGYuY29udGFjdF9pbmZvID0gR2xvYmFsU3RhdGUoCiAgICAvLyAgICAgY29udGFjdF9pbmZvX3R1cGxlKChhcmM0LlN0cmluZygiIiksIGFyYzQuU3RyaW5nKCIiKSwgYXJjNC5VSW50NjQoMCkpKQogICAgLy8gKQogICAgYXBwX2dsb2JhbF9wdXQKCm1haW5fYWZ0ZXJfaWZfZWxzZUAyOgogICAgLy8gc21hcnRfY29udHJhY3RzL2FyYzRfdHlwZXMvY29udHJhY3QucHk6Mjc5CiAgICAvLyBjbGFzcyBBcmM0VHVwbGUoQVJDNENvbnRyYWN0KToKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX2JhcmVfcm91dGluZ0A3CiAgICBwdXNoYnl0ZXNzIDB4N2Y2OGMxM2YgMHgyODhkYzc1ZiAvLyBtZXRob2QgImFkZF9jb250YWN0X2luZm8oKHN0cmluZyxzdHJpbmcsdWludDY0KSl1aW50NjQiLCBtZXRob2QgInJldHVybl9jb250YWN0KCkoc3RyaW5nLHN0cmluZyx1aW50NjQpIgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggbWFpbl9hZGRfY29udGFjdF9pbmZvX3JvdXRlQDUgbWFpbl9yZXR1cm5fY29udGFjdF9yb3V0ZUA2CgptYWluX2FmdGVyX2lmX2Vsc2VAOToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hcmM0X3R5cGVzL2NvbnRyYWN0LnB5OjI3OQogICAgLy8gY2xhc3MgQXJjNFR1cGxlKEFSQzRDb250cmFjdCk6CiAgICBpbnRjXzAgLy8gMAogICAgcmV0dXJuCgptYWluX3JldHVybl9jb250YWN0X3JvdXRlQDY6CiAgICAvLyBzbWFydF9jb250cmFjdHMvYXJjNF90eXBlcy9jb250cmFjdC5weToyOTkKICAgIC8vIEBhYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBjYWxsc3ViIHJldHVybl9jb250YWN0CiAgICBieXRlY18xIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgptYWluX2FkZF9jb250YWN0X2luZm9fcm91dGVANToKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hcmM0X3R5cGVzL2NvbnRyYWN0LnB5OjI4NgogICAgLy8gQGFiaW1ldGhvZCgpCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hcmM0X3R5cGVzL2NvbnRyYWN0LnB5OjI3OQogICAgLy8gY2xhc3MgQXJjNFR1cGxlKEFSQzRDb250cmFjdCk6CiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvYXJjNF90eXBlcy9jb250cmFjdC5weToyODYKICAgIC8vIEBhYmltZXRob2QoKQogICAgY2FsbHN1YiBhZGRfY29udGFjdF9pbmZvCiAgICBpdG9iCiAgICBieXRlY18xIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgptYWluX2JhcmVfcm91dGluZ0A3OgogICAgLy8gc21hcnRfY29udHJhY3RzL2FyYzRfdHlwZXMvY29udHJhY3QucHk6Mjc5CiAgICAvLyBjbGFzcyBBcmM0VHVwbGUoQVJDNENvbnRyYWN0KToKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGJueiBtYWluX2FmdGVyX2lmX2Vsc2VAOQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCgovLyBzbWFydF9jb250cmFjdHMuYXJjNF90eXBlcy5jb250cmFjdC5BcmM0VHVwbGUuYWRkX2NvbnRhY3RfaW5mbyhjb250YWN0OiBieXRlcykgLT4gdWludDY0OgphZGRfY29udGFjdF9pbmZvOgogICAgLy8gc21hcnRfY29udHJhY3RzL2FyYzRfdHlwZXMvY29udHJhY3QucHk6Mjg2LTI4NwogICAgLy8gQGFiaW1ldGhvZCgpCiAgICAvLyBkZWYgYWRkX2NvbnRhY3RfaW5mbyhzZWxmLCBjb250YWN0OiBjb250YWN0X2luZm9fdHVwbGUpIC0+IFVJbnQ2NDoKICAgIHByb3RvIDEgMQogICAgLy8gc21hcnRfY29udHJhY3RzL2FyYzRfdHlwZXMvY29udHJhY3QucHk6Mjg5CiAgICAvLyBuYW1lLCBlbWFpbCwgcGhvbmUgPSBjb250YWN0Lm5hdGl2ZQogICAgZnJhbWVfZGlnIC0xCiAgICBpbnRjXzAgLy8gMAogICAgZXh0cmFjdF91aW50MTYKICAgIGZyYW1lX2RpZyAtMQogICAgcHVzaGludCAyIC8vIDIKICAgIGV4dHJhY3RfdWludDE2CiAgICBmcmFtZV9kaWcgLTEKICAgIHVuY292ZXIgMgogICAgZGlnIDIKICAgIHN1YnN0cmluZzMKICAgIGZyYW1lX2RpZyAtMQogICAgbGVuCiAgICBmcmFtZV9kaWcgLTEKICAgIHVuY292ZXIgMwogICAgdW5jb3ZlciAyCiAgICBzdWJzdHJpbmczCiAgICBmcmFtZV9kaWcgLTEKICAgIGV4dHJhY3QgNCA4IC8vIG9uIGVycm9yOiBJbmRleCBhY2Nlc3MgaXMgb3V0IG9mIGJvdW5kcwogICAgLy8gc21hcnRfY29udHJhY3RzL2FyYzRfdHlwZXMvY29udHJhY3QucHk6MjkxCiAgICAvLyBhc3NlcnQgbmFtZS5uYXRpdmUgPT0gIkFsaWNlIgogICAgdW5jb3ZlciAyCiAgICBleHRyYWN0IDIgMAogICAgcHVzaGJ5dGVzICJBbGljZSIKICAgID09CiAgICBhc3NlcnQKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hcmM0X3R5cGVzL2NvbnRyYWN0LnB5OjI5MgogICAgLy8gYXNzZXJ0IGVtYWlsLm5hdGl2ZSA9PSAiYWxpY2VAc29tZXRoaW5nLmNvbSIKICAgIHN3YXAKICAgIGV4dHJhY3QgMiAwCiAgICBwdXNoYnl0ZXMgImFsaWNlQHNvbWV0aGluZy5jb20iCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyBzbWFydF9jb250cmFjdHMvYXJjNF90eXBlcy9jb250cmFjdC5weToyOTMKICAgIC8vIGFzc2VydCBwaG9uZSA9PSBhcmM0LlVJbnQ2NCg1NTVfNTU1XzU1NSkKICAgIHB1c2hieXRlcyAweDAwMDAwMDAwMjExZDFhZTMKICAgIGI9PQogICAgYXNzZXJ0CiAgICAvLyBzbWFydF9jb250cmFjdHMvYXJjNF90eXBlcy9jb250cmFjdC5weToyOTUKICAgIC8vIHNlbGYuY29udGFjdF9pbmZvLnZhbHVlID0gY29udGFjdAogICAgYnl0ZWNfMCAvLyAiY29udGFjdF9pbmZvIgogICAgZnJhbWVfZGlnIC0xCiAgICBhcHBfZ2xvYmFsX3B1dAogICAgLy8gc21hcnRfY29udHJhY3RzL2FyYzRfdHlwZXMvY29udHJhY3QucHk6Mjk3CiAgICAvLyByZXR1cm4gcGhvbmUubmF0aXZlCiAgICBmcmFtZV9kaWcgLTEKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9hcmM0X3R5cGVzL2NvbnRyYWN0LnB5OjI4OQogICAgLy8gbmFtZSwgZW1haWwsIHBob25lID0gY29udGFjdC5uYXRpdmUKICAgIHB1c2hpbnQgNCAvLyA0CiAgICAvLyBzbWFydF9jb250cmFjdHMvYXJjNF90eXBlcy9jb250cmFjdC5weToyOTcKICAgIC8vIHJldHVybiBwaG9uZS5uYXRpdmUKICAgIGV4dHJhY3RfdWludDY0CiAgICByZXRzdWIKCgovLyBzbWFydF9jb250cmFjdHMuYXJjNF90eXBlcy5jb250cmFjdC5BcmM0VHVwbGUucmV0dXJuX2NvbnRhY3QoKSAtPiBieXRlczoKcmV0dXJuX2NvbnRhY3Q6CiAgICAvLyBzbWFydF9jb250cmFjdHMvYXJjNF90eXBlcy9jb250cmFjdC5weTozMDMKICAgIC8vIHJldHVybiBzZWxmLmNvbnRhY3RfaW5mby52YWx1ZQogICAgaW50Y18wIC8vIDAKICAgIGJ5dGVjXzAgLy8gImNvbnRhY3RfaW5mbyIKICAgIGFwcF9nbG9iYWxfZ2V0X2V4CiAgICBhc3NlcnQgLy8gY2hlY2sgc2VsZi5jb250YWN0X2luZm8gZXhpc3RzCiAgICByZXRzdWIK",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiACAAEmAgxjb250YWN0X2luZm8EFR98dTEYQAAUKIAQAAwADgAAAAAAAAAAAAAAAGcxG0EAO4ICBH9owT8EKI3HXzYaAI4CABIAAiJDMRkURDEYRIgAhilMULAjQzEZFEQxGEQ2GgGIABIWKUxQsCNDMRlA/9UxGBREI0OKAQGL/yJZi/+BAlmL/08CSwJSi/8Vi/9PA08CUov/VwQITwJXAgCABUFsaWNlEkRMVwIAgBNhbGljZUBzb21ldGhpbmcuY29tEkSACAAAAAAhHRrjqEQoi/9ni/+BBFuJIihlRIk=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 5,
            "patch": 3
        }
    },
    "events": [],
    "templateVariables": {}
}