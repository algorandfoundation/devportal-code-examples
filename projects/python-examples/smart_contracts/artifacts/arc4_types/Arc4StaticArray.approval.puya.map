{
  "version": 3,
  "sources": [
    "../../arc4_types/contract.py"
  ],
  "mappings": ";AA0HA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AACK;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;;;;;;;;;AASW;;;AAChB;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;AAAA;AAL8B;;;;;;;;;;;;;;;;;;AAMT;AAAA;AAAT;;AAAA;AAAA;;;;;;;;;;AAEG;;AAAS;;;AAAT;AAbV",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "3": {
      "op": "bz main___algopy_default_create@5",
      "stack_out": []
    },
    "6": {
      "op": "pushbytes 0x0a28e7b6 // method \"arc4_static_array()void\"",
      "defined_out": [
        "Method(arc4_static_array()void)"
      ],
      "stack_out": [
        "Method(arc4_static_array()void)"
      ]
    },
    "12": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(arc4_static_array()void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(arc4_static_array()void)",
        "tmp%2#0"
      ]
    },
    "15": {
      "op": "match main_arc4_static_array_route@3",
      "stack_out": []
    },
    "19": {
      "op": "err"
    },
    "20": {
      "block": "main_arc4_static_array_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "22": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "23": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "tmp%5#0"
      ]
    },
    "25": {
      "op": "&&",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "26": {
      "error": "OnCompletion must be NoOp && can only call when not creating",
      "op": "assert // OnCompletion must be NoOp && can only call when not creating",
      "stack_out": []
    },
    "27": {
      "op": "b arc4_static_array"
    },
    "30": {
      "block": "main___algopy_default_create@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "32": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "33": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "35": {
      "op": "!",
      "defined_out": [
        "tmp%11#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0",
        "tmp%11#0"
      ]
    },
    "36": {
      "op": "&&",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "37": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "return // on error: OnCompletion must be NoOp && can only call when creating",
      "defined_out": [],
      "stack_out": []
    },
    "38": {
      "subroutine": "smart_contracts.arc4_types.contract.Arc4StaticArray.arc4_static_array[routing]",
      "params": {},
      "block": "arc4_static_array",
      "stack_in": [],
      "op": "pushint 0 // 0"
    },
    "40": {
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "41": {
      "block": "arc4_static_array_for_header@2",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "42": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "4"
      ]
    },
    "44": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "continue_looping%0#0"
      ]
    },
    "45": {
      "op": "bz arc4_static_array_after_for@5",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "48": {
      "op": "dupn 2",
      "defined_out": [
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "50": {
      "op": "pushint 4 // 4",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "4"
      ]
    },
    "52": {
      "op": "*",
      "defined_out": [
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "53": {
      "op": "pushbytes 0x000000010000000a000000ff00000080",
      "defined_out": [
        "0x000000010000000a000000ff00000080",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "aggregate%bytes_offset%0#0",
        "0x000000010000000a000000ff00000080"
      ]
    },
    "71": {
      "op": "swap",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "0x000000010000000a000000ff00000080",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "72": {
      "op": "extract_uint32",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%0#0"
      ]
    },
    "73": {
      "op": "dig 3",
      "defined_out": [
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "tmp%0#0",
        "total#0"
      ]
    },
    "75": {
      "op": "+",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "76": {
      "op": "bury 3",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "78": {
      "op": "pushint 1 // 1",
      "defined_out": [
        "1",
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "80": {
      "op": "+",
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0"
      ]
    },
    "81": {
      "op": "bury 1",
      "defined_out": [
        "item_index_internal%0#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    },
    "83": {
      "op": "b arc4_static_array_for_header@2"
    },
    "86": {
      "block": "arc4_static_array_after_for@5",
      "stack_in": [
        "total#0",
        "item_index_internal%0#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0"
      ]
    },
    "88": {
      "op": "pushint 394 // 394",
      "defined_out": [
        "394",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "total#0",
        "394"
      ]
    },
    "91": {
      "op": "==",
      "defined_out": [
        "tmp%2#0",
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0",
        "tmp%2#0"
      ]
    },
    "92": {
      "op": "return",
      "defined_out": [
        "total#0"
      ],
      "stack_out": [
        "total#0",
        "item_index_internal%0#0"
      ]
    }
  }
}