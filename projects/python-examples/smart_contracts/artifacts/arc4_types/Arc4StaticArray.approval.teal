#pragma version 11
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    // smart_contracts/arc4_types/contract.py:123
    // class Arc4StaticArray(ARC4Contract):
    txn NumAppArgs
    bz main___algopy_default_create@5
    pushbytes 0x0a28e7b6 // method "arc4_static_array()void"
    txna ApplicationArgs 0
    match main_arc4_static_array_route@3
    err

main_arc4_static_array_route@3:
    // smart_contracts/arc4_types/contract.py:124
    // @abimethod()
    txn OnCompletion
    !
    txn ApplicationID
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    b arc4_static_array

main___algopy_default_create@5:
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating


// smart_contracts.arc4_types.contract.Arc4StaticArray.arc4_static_array[routing]() -> void:
arc4_static_array:
    // smart_contracts/arc4_types/contract.py:133
    // total = UInt64(0)
    pushint 0 // 0
    dup

arc4_static_array_for_header@2:
    // smart_contracts/arc4_types/contract.py:134
    // for uint32_item in static_uint32_array:
    dup
    pushint 4 // 4
    <
    bz arc4_static_array_after_for@5
    dupn 2
    pushint 4 // 4
    *
    // smart_contracts/arc4_types/contract.py:129-131
    // static_uint32_array = arc4.StaticArray(
    //     arc4.UInt32(1), arc4.UInt32(10), arc4.UInt32(255), arc4.UInt32(128)
    // )
    pushbytes 0x000000010000000a000000ff00000080
    // smart_contracts/arc4_types/contract.py:135
    // total += uint32_item.native
    swap
    extract_uint32
    dig 3
    +
    bury 3
    pushint 1 // 1
    +
    bury 1
    b arc4_static_array_for_header@2

arc4_static_array_after_for@5:
    // smart_contracts/arc4_types/contract.py:137
    // assert total == 1 + 10 + 255 + 128
    dig 1
    pushint 394 // 394
    ==
    // smart_contracts/arc4_types/contract.py:124
    // @abimethod()
    return
