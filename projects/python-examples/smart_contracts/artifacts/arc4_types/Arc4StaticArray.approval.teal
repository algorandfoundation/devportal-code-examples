#pragma version 10
#pragma typetrack false

// algopy.arc4.ARC4Contract.approval_program() -> uint64:
main:
    intcblock 1 0 4
    // smart_contracts/arc4_types/contract.py:125
    // class Arc4StaticArray(ARC4Contract):
    txn NumAppArgs
    bz main_bare_routing@6
    pushbytes 0x0a28e7b6 // method "arc4_static_array()void"
    txna ApplicationArgs 0
    match main_arc4_static_array_route@3

main_after_if_else@10:
    // smart_contracts/arc4_types/contract.py:125
    // class Arc4StaticArray(ARC4Contract):
    intc_1 // 0
    return

main_arc4_static_array_route@3:
    // smart_contracts/arc4_types/contract.py:127
    // @abimethod()
    txn OnCompletion
    !
    assert // OnCompletion is not NoOp
    txn ApplicationID
    assert // can only call when not creating
    callsub arc4_static_array
    intc_0 // 1
    return

main_bare_routing@6:
    // smart_contracts/arc4_types/contract.py:125
    // class Arc4StaticArray(ARC4Contract):
    txn OnCompletion
    bnz main_after_if_else@10
    txn ApplicationID
    !
    assert // can only call when creating
    intc_0 // 1
    return


// smart_contracts.arc4_types.contract.Arc4StaticArray.arc4_static_array() -> void:
arc4_static_array:
    // smart_contracts/arc4_types/contract.py:127-128
    // @abimethod()
    // def arc4_static_array(self) -> None:
    proto 0 0
    // smart_contracts/arc4_types/contract.py:136
    // total = UInt64(0)
    intc_1 // 0
    dup

arc4_static_array_for_header@1:
    // smart_contracts/arc4_types/contract.py:137
    // for uint32_item in static_uint32_array:
    frame_dig 1
    intc_2 // 4
    <
    bz arc4_static_array_after_for@4
    frame_dig 1
    dup
    intc_2 // 4
    *
    // smart_contracts/arc4_types/contract.py:132-134
    // static_uint32_array = arc4.StaticArray(
    //     arc4.UInt32(1), arc4.UInt32(10), arc4.UInt32(255), arc4.UInt32(128)
    // )
    pushbytes 0x000000010000000a000000ff00000080
    // smart_contracts/arc4_types/contract.py:138
    // total += uint32_item.native
    swap
    extract_uint32
    frame_dig 0
    +
    frame_bury 0
    intc_0 // 1
    +
    frame_bury 1
    b arc4_static_array_for_header@1

arc4_static_array_after_for@4:
    // smart_contracts/arc4_types/contract.py:140
    // assert total == 1 + 10 + 255 + 128
    frame_dig 0
    pushint 394 // 394
    ==
    assert
    retsub
