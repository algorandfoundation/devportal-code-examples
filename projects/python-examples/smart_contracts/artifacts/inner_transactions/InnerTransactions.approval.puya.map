{
  "version": 3,
  "sources": [
    "../../inner_transactions/contract.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAkBA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAmNK;;AAAA;AAAA;AAAA;;AAAA;AAnNL;;;AAAA;AAAA;;AAmNK;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAZA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAzBA;;AAAA;AAAA;AAAA;;AAAA;AA9JL;;;AAAA;AAAA;;AA8JK;;;AAAA;AAAA;AAAA;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAVA;;AAAA;AAAA;AAAA;;AAAA;AApJL;;;AAAA;AAAA;;AAoJK;;;AAAA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AA/HL;;;AAAA;AAAA;;AA+HK;;;AAAA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AA1GL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AA0GK;;;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AA1FL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AA0FK;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AAvEL;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAuEK;;;AAAA;;AAnBA;;AAAA;AAAA;AAAA;;AAAA;AApDL;;;AAAA;AAAA;;AAoDK;;;AAAA;;AAxBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAXA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAFL;;AAAA;;;;;;;;;AAIiB;AAAmC;;;;AAAf;;;;;AAApB;;;AAAmD;;;AAAnD;;;AACT;AAcc;AAIC;;;;;;;;;;;;;;;;;;AADD;;;;;;AADD;;;;AADH;;;;;;;;;AADI;;;;AAAA;;;AAAA;;;AAOd;AASc;AAMF;;AACA;;;;;;;;;;AAFJ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADO;;;;;;;;;;;;;AADD;;;;;;AADD;;;;AADH;;;;AADI;;;;AAAA;;;AAAA;;;AAYd;AAKR;;;AAEQ;AACmB;;AAEF;;;;;;;;;AAHjB;;;AAIQ;;;AAJR;;AAiBR;;;AAEQ;;;;;;;;;;;;;AAAA;;;AAIQ;;;AAJR;;AAiBR;;;AAEQ;AAGW;;;;;;;;;;;AAHX;;;;AAIQ;;;AAJR;;AAcR;;;AAIQ;AACmB;;;;;;;;;;;;;;;;AADnB;;;AAKQ;;;AALR;;AAiBR;;;AAEQ;AAEY;;AACA;AACD;;AACE;;;;;;;;;;;;;AALb;;;;AAMQ;;;AANR;;AAmBR;;;AAEQ;;;;;AAAA;;;;AAEQ;;;AAFR;;AAQR;;;AAE4D;;AAQ5B;;;AARa;;;;;AAApB;;;AAAmD;;;AAQX;AAJ3C;;;AAA4C;;;;;;;AAFxC;;;AAGV;;;AAGgB;;;;;;AAEH;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AACrB;AAmBU;AAFU;;;AAAA;;;;AAEV;;;AAGF;;;AAHE;;;AAOV;AAOU;AAAA;;;AAAA;;;;AAAA;;;AAAA;;;AAAA;;;AAEV;AAKR;;;AAGmB;AAEG;;;AAA4C;;;;;;;AAF/C;;;AAAA;;;AAAA;;;AAKgB;AAAA;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAGW;;;;;AAAA;;;AAElC;;;;;;;;;;;AAFkC;;;AAAA;;;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAMtC",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "algopy.arc4.ARC4Contract.approval_program",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 6 4"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 0x02bece11 0x0005576f726c64 base64(CoEBQw==) base64(CjEbQQA0gAQCvs4RNhoAjgEAA4EAQzEZFEQxGEQ2GgFXAgCIACBJFRZXBgJMUIAEFR98dUxQsIEBQzEZQP/UMRgURIEBQ4oBAYAHSGVsbG8sIIv/UIk=)"
    },
    "119": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "121": {
      "op": "bz main_bare_routing@18",
      "stack_out": []
    },
    "124": {
      "op": "pushbytess 0x23950027 0xea7689f3 0xfe264730 0xb6c2b148 0x4b19dfdd 0xa90e6a4f 0xc5046282 0x584400ff 0xa9e812a5 0x0e739814 0x3631745d 0x10a9b102 0x9d0c5de1 // method \"payment()uint64\", method \"fungible_asset_create()uint64\", method \"non_fungible_asset_create()uint64\", method \"asset_opt_in(asset)void\", method \"asset_transfer(asset,account,uint64)void\", method \"asset_freeze(account,asset)void\", method \"asset_revoke(asset,account,uint64)void\", method \"asset_config(asset)void\", method \"asset_delete(asset)void\", method \"multi_inner_txns(application)(uint64,string)\", method \"deploy_app()uint64\", method \"arc4_deploy_app()uint64\", method \"noop_app_call(application)(string,string)\"",
      "defined_out": [
        "Method(arc4_deploy_app()uint64)",
        "Method(asset_config(asset)void)",
        "Method(asset_delete(asset)void)",
        "Method(asset_freeze(account,asset)void)",
        "Method(asset_opt_in(asset)void)",
        "Method(asset_revoke(asset,account,uint64)void)",
        "Method(asset_transfer(asset,account,uint64)void)",
        "Method(deploy_app()uint64)",
        "Method(fungible_asset_create()uint64)",
        "Method(multi_inner_txns(application)(uint64,string))",
        "Method(non_fungible_asset_create()uint64)",
        "Method(noop_app_call(application)(string,string))",
        "Method(payment()uint64)"
      ],
      "stack_out": [
        "Method(payment()uint64)",
        "Method(fungible_asset_create()uint64)",
        "Method(non_fungible_asset_create()uint64)",
        "Method(asset_opt_in(asset)void)",
        "Method(asset_transfer(asset,account,uint64)void)",
        "Method(asset_freeze(account,asset)void)",
        "Method(asset_revoke(asset,account,uint64)void)",
        "Method(asset_config(asset)void)",
        "Method(asset_delete(asset)void)",
        "Method(multi_inner_txns(application)(uint64,string))",
        "Method(deploy_app()uint64)",
        "Method(arc4_deploy_app()uint64)",
        "Method(noop_app_call(application)(string,string))"
      ]
    },
    "191": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(arc4_deploy_app()uint64)",
        "Method(asset_config(asset)void)",
        "Method(asset_delete(asset)void)",
        "Method(asset_freeze(account,asset)void)",
        "Method(asset_opt_in(asset)void)",
        "Method(asset_revoke(asset,account,uint64)void)",
        "Method(asset_transfer(asset,account,uint64)void)",
        "Method(deploy_app()uint64)",
        "Method(fungible_asset_create()uint64)",
        "Method(multi_inner_txns(application)(uint64,string))",
        "Method(non_fungible_asset_create()uint64)",
        "Method(noop_app_call(application)(string,string))",
        "Method(payment()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(payment()uint64)",
        "Method(fungible_asset_create()uint64)",
        "Method(non_fungible_asset_create()uint64)",
        "Method(asset_opt_in(asset)void)",
        "Method(asset_transfer(asset,account,uint64)void)",
        "Method(asset_freeze(account,asset)void)",
        "Method(asset_revoke(asset,account,uint64)void)",
        "Method(asset_config(asset)void)",
        "Method(asset_delete(asset)void)",
        "Method(multi_inner_txns(application)(uint64,string))",
        "Method(deploy_app()uint64)",
        "Method(arc4_deploy_app()uint64)",
        "Method(noop_app_call(application)(string,string))",
        "tmp%2#0"
      ]
    },
    "194": {
      "op": "match main_payment_route@3 main_fungible_asset_create_route@4 main_non_fungible_asset_create_route@5 main_asset_opt_in_route@6 main_asset_transfer_route@7 main_asset_freeze_route@8 main_asset_revoke_route@9 main_asset_config_route@10 main_asset_delete_route@11 main_multi_inner_txns_route@12 main_deploy_app_route@13 main_arc4_deploy_app_route@14 main_noop_app_call_route@15",
      "stack_out": []
    },
    "222": {
      "block": "main_after_if_else@22",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "223": {
      "op": "return",
      "stack_out": []
    },
    "224": {
      "block": "main_noop_app_call_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "226": {
      "op": "!",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "227": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "228": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "230": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "231": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%10#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%10#0"
      ]
    },
    "234": {
      "op": "btoi",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "235": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "237": {
      "callsub": "smart_contracts.inner_transactions.contract.InnerTransactions.noop_app_call",
      "op": "callsub noop_app_call",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0"
      ]
    },
    "240": {
      "op": "dup",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%3#0 (copy)"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "elements_to_encode%3#0 (copy)"
      ]
    },
    "241": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "length%0#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "length%0#0"
      ]
    },
    "242": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "elements_to_encode%2#0",
        "elements_to_encode%3#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "as_bytes%1#0"
      ]
    },
    "243": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "length_uint16%0#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%3#0",
        "length_uint16%0#0"
      ]
    },
    "246": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%2#0",
        "length_uint16%0#0",
        "elements_to_encode%3#0"
      ]
    },
    "247": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%2#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "encoded_value%0#0"
      ]
    },
    "248": {
      "op": "dig 1",
      "defined_out": [
        "elements_to_encode%2#0",
        "elements_to_encode%2#0 (copy)",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "encoded_value%0#0",
        "elements_to_encode%2#0 (copy)"
      ]
    },
    "250": {
      "op": "len",
      "defined_out": [
        "data_length%1#0",
        "elements_to_encode%2#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "encoded_value%0#0",
        "data_length%1#0"
      ]
    },
    "251": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4",
        "data_length%1#0",
        "elements_to_encode%2#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "encoded_value%0#0",
        "data_length%1#0",
        "4"
      ]
    },
    "252": {
      "op": "+",
      "defined_out": [
        "current_tail_offset%3#0",
        "elements_to_encode%2#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "encoded_value%0#0",
        "current_tail_offset%3#0"
      ]
    },
    "253": {
      "op": "itob",
      "defined_out": [
        "as_bytes%3#0",
        "elements_to_encode%2#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "encoded_value%0#0",
        "as_bytes%3#0"
      ]
    },
    "254": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%2#0",
        "encoded_value%0#0",
        "offset_as_uint16%2#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "encoded_value%0#0",
        "offset_as_uint16%2#0"
      ]
    },
    "257": {
      "op": "pushbytes 0x0004",
      "defined_out": [
        "0x0004",
        "elements_to_encode%2#0",
        "encoded_value%0#0",
        "offset_as_uint16%2#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "encoded_value%0#0",
        "offset_as_uint16%2#0",
        "0x0004"
      ]
    },
    "261": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%2#0",
        "encoded_value%0#0",
        "0x0004",
        "offset_as_uint16%2#0"
      ]
    },
    "262": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%2#0",
        "encoded_tuple_buffer%6#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "elements_to_encode%2#0",
        "encoded_value%0#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "263": {
      "op": "uncover 2",
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%6#0",
        "elements_to_encode%2#0"
      ]
    },
    "265": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "266": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%7#0",
        "encoded_value%0#0"
      ]
    },
    "267": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%8#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%8#0"
      ]
    },
    "268": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%8#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%8#0",
        "0x151f7c75"
      ]
    },
    "269": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%8#0"
      ]
    },
    "270": {
      "op": "concat",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "271": {
      "op": "log",
      "stack_out": []
    },
    "272": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "273": {
      "op": "return",
      "stack_out": []
    },
    "274": {
      "block": "main_arc4_deploy_app_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "276": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "277": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "278": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "280": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "281": {
      "callsub": "smart_contracts.inner_transactions.contract.InnerTransactions.arc4_deploy_app",
      "op": "callsub arc4_deploy_app",
      "defined_out": [
        "to_encode%4#0"
      ],
      "stack_out": [
        "to_encode%4#0"
      ]
    },
    "284": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0"
      ]
    },
    "285": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%5#0"
      ],
      "stack_out": [
        "val_as_bytes%5#0",
        "0x151f7c75"
      ]
    },
    "286": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%5#0"
      ]
    },
    "287": {
      "op": "concat",
      "defined_out": [
        "tmp%78#0"
      ],
      "stack_out": [
        "tmp%78#0"
      ]
    },
    "288": {
      "op": "log",
      "stack_out": []
    },
    "289": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "290": {
      "op": "return",
      "stack_out": []
    },
    "291": {
      "block": "main_deploy_app_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "293": {
      "op": "!",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "294": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "295": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "297": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "298": {
      "callsub": "smart_contracts.inner_transactions.contract.InnerTransactions.deploy_app",
      "op": "callsub deploy_app",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "301": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0"
      ]
    },
    "302": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "0x151f7c75"
      ]
    },
    "303": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ]
    },
    "304": {
      "op": "concat",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "305": {
      "op": "log",
      "stack_out": []
    },
    "306": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "307": {
      "op": "return",
      "stack_out": []
    },
    "308": {
      "block": "main_multi_inner_txns_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "310": {
      "op": "!",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "311": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "312": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "314": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "315": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%9#0"
      ]
    },
    "318": {
      "op": "btoi",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "319": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "321": {
      "callsub": "smart_contracts.inner_transactions.contract.InnerTransactions.multi_inner_txns",
      "op": "callsub multi_inner_txns",
      "defined_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0"
      ]
    },
    "324": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%0#0"
      ]
    },
    "325": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%1#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "val_as_bytes%3#0"
      ]
    },
    "326": {
      "op": "pushbytes 0x000a",
      "defined_out": [
        "0x000a",
        "elements_to_encode%1#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "val_as_bytes%3#0",
        "0x000a"
      ]
    },
    "330": {
      "op": "concat",
      "defined_out": [
        "elements_to_encode%1#0",
        "encoded_tuple_buffer%2#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "331": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "elements_to_encode%1#0"
      ]
    },
    "332": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0"
      ]
    },
    "333": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "0x151f7c75"
      ]
    },
    "334": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "335": {
      "op": "concat",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "336": {
      "op": "log",
      "stack_out": []
    },
    "337": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "338": {
      "op": "return",
      "stack_out": []
    },
    "339": {
      "block": "main_asset_delete_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "341": {
      "op": "!",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "342": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "343": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "345": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "346": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%8#0"
      ]
    },
    "349": {
      "op": "btoi",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "350": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "352": {
      "callsub": "smart_contracts.inner_transactions.contract.InnerTransactions.asset_delete",
      "op": "callsub asset_delete",
      "stack_out": []
    },
    "355": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "356": {
      "op": "return",
      "stack_out": []
    },
    "357": {
      "block": "main_asset_config_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "359": {
      "op": "!",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "360": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "361": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "363": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "364": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%7#0"
      ]
    },
    "367": {
      "op": "btoi",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "368": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "370": {
      "callsub": "smart_contracts.inner_transactions.contract.InnerTransactions.asset_config",
      "op": "callsub asset_config",
      "stack_out": []
    },
    "373": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "374": {
      "op": "return",
      "stack_out": []
    },
    "375": {
      "block": "main_asset_revoke_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "377": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "378": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "379": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "381": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "382": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "385": {
      "op": "btoi",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "386": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "388": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%6#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "391": {
      "op": "btoi",
      "defined_out": [
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "tmp%47#0"
      ]
    },
    "392": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%46#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "tmp%48#0"
      ]
    },
    "394": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%46#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "tmp%48#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "397": {
      "op": "btoi",
      "defined_out": [
        "tmp%46#0",
        "tmp%48#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "tmp%48#0",
        "tmp%49#0"
      ]
    },
    "398": {
      "callsub": "smart_contracts.inner_transactions.contract.InnerTransactions.asset_revoke",
      "op": "callsub asset_revoke",
      "stack_out": []
    },
    "401": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "402": {
      "op": "return",
      "stack_out": []
    },
    "403": {
      "block": "main_asset_freeze_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "405": {
      "op": "!",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "406": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "407": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "409": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "410": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "413": {
      "op": "btoi",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "414": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "416": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%4#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "419": {
      "op": "btoi",
      "defined_out": [
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0"
      ]
    },
    "420": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%38#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%40#0"
      ]
    },
    "422": {
      "callsub": "smart_contracts.inner_transactions.contract.InnerTransactions.asset_freeze",
      "op": "callsub asset_freeze",
      "stack_out": []
    },
    "425": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "426": {
      "op": "return",
      "stack_out": []
    },
    "427": {
      "block": "main_asset_transfer_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "429": {
      "op": "!",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "430": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "431": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "433": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "434": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "437": {
      "op": "btoi",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "438": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "440": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%2#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "443": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "444": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0"
      ]
    },
    "446": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "449": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0",
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "tmp%32#0"
      ]
    },
    "450": {
      "callsub": "smart_contracts.inner_transactions.contract.InnerTransactions.asset_transfer",
      "op": "callsub asset_transfer",
      "stack_out": []
    },
    "453": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "454": {
      "op": "return",
      "stack_out": []
    },
    "455": {
      "block": "main_asset_opt_in_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "457": {
      "op": "!",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "458": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "459": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "461": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "462": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "465": {
      "op": "btoi",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "466": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "468": {
      "callsub": "smart_contracts.inner_transactions.contract.InnerTransactions.asset_opt_in",
      "op": "callsub asset_opt_in",
      "stack_out": []
    },
    "471": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "472": {
      "op": "return",
      "stack_out": []
    },
    "473": {
      "block": "main_non_fungible_asset_create_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "475": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "476": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "477": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "479": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "480": {
      "callsub": "smart_contracts.inner_transactions.contract.InnerTransactions.non_fungible_asset_create",
      "op": "callsub non_fungible_asset_create",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "483": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "484": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "485": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "486": {
      "op": "concat",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "487": {
      "op": "log",
      "stack_out": []
    },
    "488": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "489": {
      "op": "return",
      "stack_out": []
    },
    "490": {
      "block": "main_fungible_asset_create_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "492": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "493": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "494": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "496": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "497": {
      "callsub": "smart_contracts.inner_transactions.contract.InnerTransactions.fungible_asset_create",
      "op": "callsub fungible_asset_create",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "500": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "501": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "502": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "503": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "504": {
      "op": "log",
      "stack_out": []
    },
    "505": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "506": {
      "op": "return",
      "stack_out": []
    },
    "507": {
      "block": "main_payment_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "509": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "510": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "511": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "513": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "514": {
      "callsub": "smart_contracts.inner_transactions.contract.InnerTransactions.payment",
      "op": "callsub payment",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "517": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "518": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "519": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "520": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "521": {
      "op": "log",
      "stack_out": []
    },
    "522": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "523": {
      "op": "return",
      "stack_out": []
    },
    "524": {
      "block": "main_bare_routing@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "526": {
      "op": "bnz main_after_if_else@22",
      "stack_out": []
    },
    "529": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "531": {
      "op": "!",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "532": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "533": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "534": {
      "op": "return",
      "stack_out": []
    },
    "535": {
      "subroutine": "smart_contracts.inner_transactions.contract.InnerTransactions.payment",
      "params": {},
      "block": "payment",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "536": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "538": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "540": {
      "op": "pushint 5000 // 5000",
      "defined_out": [
        "5000"
      ],
      "stack_out": [
        "5000"
      ]
    },
    "543": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "545": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "546": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "548": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "549": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "551": {
      "op": "itxn_submit"
    },
    "552": {
      "op": "itxn Amount",
      "defined_out": [
        "result.Amount#0"
      ],
      "stack_out": [
        "result.Amount#0"
      ]
    },
    "554": {
      "retsub": true,
      "op": "retsub"
    },
    "555": {
      "subroutine": "smart_contracts.inner_transactions.contract.InnerTransactions.fungible_asset_create",
      "params": {},
      "block": "fungible_asset_create",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "556": {
      "op": "pushbytes \"Royalty Points\"",
      "defined_out": [
        "\"Royalty Points\""
      ],
      "stack_out": [
        "\"Royalty Points\""
      ]
    },
    "572": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "574": {
      "op": "pushbytes \"RP\"",
      "defined_out": [
        "\"RP\""
      ],
      "stack_out": [
        "\"RP\""
      ]
    },
    "578": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": []
    },
    "580": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "582": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": []
    },
    "584": {
      "op": "pushint 100000000000 // 100000000000",
      "defined_out": [
        "100000000000"
      ],
      "stack_out": [
        "100000000000"
      ]
    },
    "591": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": []
    },
    "593": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "595": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "597": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "598": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "600": {
      "op": "itxn_submit"
    },
    "601": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "itxn_result.CreatedAssetID#0"
      ],
      "stack_out": [
        "itxn_result.CreatedAssetID#0"
      ]
    },
    "603": {
      "retsub": true,
      "op": "retsub"
    },
    "604": {
      "subroutine": "smart_contracts.inner_transactions.contract.InnerTransactions.non_fungible_asset_create",
      "params": {},
      "block": "non_fungible_asset_create",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "605": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "607": {
      "op": "dupn 3",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "609": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "611": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "613": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "615": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "617": {
      "op": "pushbytes \"https://link_to_ipfs/Mona_Lisa\"",
      "defined_out": [
        "\"https://link_to_ipfs/Mona_Lisa\""
      ],
      "stack_out": [
        "\"https://link_to_ipfs/Mona_Lisa\""
      ]
    },
    "649": {
      "op": "itxn_field ConfigAssetURL",
      "stack_out": []
    },
    "651": {
      "op": "pushbytes \"Mona Lisa\"",
      "defined_out": [
        "\"Mona Lisa\""
      ],
      "stack_out": [
        "\"Mona Lisa\""
      ]
    },
    "662": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "664": {
      "op": "pushbytes \"ML\"",
      "defined_out": [
        "\"ML\""
      ],
      "stack_out": [
        "\"ML\""
      ]
    },
    "668": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": []
    },
    "670": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "672": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": []
    },
    "674": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100"
      ],
      "stack_out": [
        "100"
      ]
    },
    "676": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": []
    },
    "678": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "680": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "682": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "683": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "685": {
      "op": "itxn_submit"
    },
    "686": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "itxn_result.CreatedAssetID#0"
      ],
      "stack_out": [
        "itxn_result.CreatedAssetID#0"
      ]
    },
    "688": {
      "retsub": true,
      "op": "retsub"
    },
    "689": {
      "subroutine": "smart_contracts.inner_transactions.contract.InnerTransactions.asset_opt_in",
      "params": {
        "asset#0": "uint64"
      },
      "block": "asset_opt_in",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "692": {
      "op": "itxn_begin"
    },
    "693": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "695": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "696": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "698": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "asset#0 (copy)"
      ]
    },
    "700": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "702": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "704": {
      "op": "intc_3 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "705": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "707": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "708": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "710": {
      "op": "itxn_submit"
    },
    "711": {
      "retsub": true,
      "op": "retsub"
    },
    "712": {
      "subroutine": "smart_contracts.inner_transactions.contract.InnerTransactions.asset_transfer",
      "params": {
        "asset#0": "uint64",
        "receiver#0": "bytes",
        "amount#0": "uint64"
      },
      "block": "asset_transfer",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "715": {
      "op": "itxn_begin"
    },
    "716": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "718": {
      "op": "itxn_field AssetAmount",
      "stack_out": []
    },
    "720": {
      "op": "frame_dig -3",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "722": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "724": {
      "op": "frame_dig -2",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "726": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "728": {
      "op": "intc_3 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "729": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "731": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "732": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "734": {
      "op": "itxn_submit"
    },
    "735": {
      "retsub": true,
      "op": "retsub"
    },
    "736": {
      "subroutine": "smart_contracts.inner_transactions.contract.InnerTransactions.asset_freeze",
      "params": {
        "acct_to_be_frozen#0": "bytes",
        "asset#0": "uint64"
      },
      "block": "asset_freeze",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "739": {
      "op": "itxn_begin"
    },
    "740": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "741": {
      "op": "itxn_field FreezeAssetFrozen",
      "stack_out": []
    },
    "743": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "745": {
      "op": "itxn_field FreezeAsset",
      "stack_out": []
    },
    "747": {
      "op": "frame_dig -2",
      "defined_out": [
        "acct_to_be_frozen#0 (copy)"
      ],
      "stack_out": [
        "acct_to_be_frozen#0 (copy)"
      ]
    },
    "749": {
      "op": "itxn_field FreezeAssetAccount",
      "stack_out": []
    },
    "751": {
      "op": "pushint 5 // afrz",
      "defined_out": [
        "afrz"
      ],
      "stack_out": [
        "afrz"
      ]
    },
    "753": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "755": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "756": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "758": {
      "op": "itxn_submit"
    },
    "759": {
      "retsub": true,
      "op": "retsub"
    },
    "760": {
      "subroutine": "smart_contracts.inner_transactions.contract.InnerTransactions.asset_revoke",
      "params": {
        "asset#0": "uint64",
        "account_to_be_revoked#0": "bytes",
        "amount#0": "uint64"
      },
      "block": "asset_revoke",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "763": {
      "op": "itxn_begin"
    },
    "764": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "766": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "amount#0 (copy)"
      ]
    },
    "768": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "770": {
      "op": "frame_dig -2",
      "defined_out": [
        "account_to_be_revoked#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "account_to_be_revoked#0 (copy)"
      ]
    },
    "772": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "774": {
      "op": "frame_dig -3",
      "defined_out": [
        "asset#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "asset#0 (copy)"
      ]
    },
    "776": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "778": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "780": {
      "op": "intc_3 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "781": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "783": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "784": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "786": {
      "op": "itxn_submit"
    },
    "787": {
      "retsub": true,
      "op": "retsub"
    },
    "788": {
      "subroutine": "smart_contracts.inner_transactions.contract.InnerTransactions.asset_config",
      "params": {
        "asset#0": "uint64"
      },
      "block": "asset_config",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "791": {
      "op": "itxn_begin"
    },
    "792": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "794": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "795": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "797": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "798": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "800": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "802": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "804": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "806": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "808": {
      "op": "itxn_field ConfigAsset",
      "stack_out": []
    },
    "810": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "812": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "814": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "815": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "817": {
      "op": "itxn_submit"
    },
    "818": {
      "retsub": true,
      "op": "retsub"
    },
    "819": {
      "subroutine": "smart_contracts.inner_transactions.contract.InnerTransactions.asset_delete",
      "params": {
        "asset#0": "uint64"
      },
      "block": "asset_delete",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "822": {
      "op": "itxn_begin"
    },
    "823": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "825": {
      "op": "itxn_field ConfigAsset",
      "stack_out": []
    },
    "827": {
      "op": "pushint 3 // acfg",
      "defined_out": [
        "acfg"
      ],
      "stack_out": [
        "acfg"
      ]
    },
    "829": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "831": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "832": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "834": {
      "op": "itxn_submit"
    },
    "835": {
      "retsub": true,
      "op": "retsub"
    },
    "836": {
      "subroutine": "smart_contracts.inner_transactions.contract.InnerTransactions.multi_inner_txns",
      "params": {
        "app_id#0": "uint64"
      },
      "block": "multi_inner_txns",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "839": {
      "op": "txn Sender",
      "defined_out": [
        "payment_params%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "payment_params%%param_Receiver_idx_0#0"
      ]
    },
    "841": {
      "op": "itxn_begin"
    },
    "842": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "844": {
      "op": "pushint 5000 // 5000",
      "defined_out": [
        "5000"
      ],
      "stack_out": [
        "5000"
      ]
    },
    "847": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "849": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "850": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "852": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "853": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "855": {
      "op": "itxn_next"
    },
    "856": {
      "op": "bytec_1 // method \"hello(string)string\"",
      "defined_out": [
        "Method(hello(string)string)"
      ],
      "stack_out": [
        "Method(hello(string)string)"
      ]
    },
    "857": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "859": {
      "op": "bytec_2 // 0x0005576f726c64",
      "defined_out": [
        "0x0005576f726c64"
      ],
      "stack_out": [
        "0x0005576f726c64"
      ]
    },
    "860": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "862": {
      "op": "frame_dig -1",
      "defined_out": [
        "app_id#0 (copy)"
      ],
      "stack_out": [
        "app_id#0 (copy)"
      ]
    },
    "864": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "866": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "867": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "869": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "870": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "872": {
      "op": "itxn_submit"
    },
    "873": {
      "op": "gitxn 0 Amount",
      "defined_out": [
        "pay_txn.Amount#0"
      ],
      "stack_out": [
        "pay_txn.Amount#0"
      ]
    },
    "876": {
      "op": "itxn LastLog",
      "defined_out": [
        "app_call_txn.LastLog#0",
        "pay_txn.Amount#0"
      ],
      "stack_out": [
        "pay_txn.Amount#0",
        "app_call_txn.LastLog#0"
      ]
    },
    "878": {
      "op": "dup",
      "defined_out": [
        "app_call_txn.LastLog#0",
        "app_call_txn.LastLog#0 (copy)",
        "pay_txn.Amount#0"
      ],
      "stack_out": [
        "pay_txn.Amount#0",
        "app_call_txn.LastLog#0",
        "app_call_txn.LastLog#0 (copy)"
      ]
    },
    "879": {
      "op": "extract 4 0",
      "defined_out": [
        "app_call_txn.LastLog#0",
        "hello_world_result#0",
        "pay_txn.Amount#0"
      ],
      "stack_out": [
        "pay_txn.Amount#0",
        "app_call_txn.LastLog#0",
        "hello_world_result#0"
      ]
    },
    "882": {
      "op": "swap",
      "stack_out": [
        "pay_txn.Amount#0",
        "hello_world_result#0",
        "app_call_txn.LastLog#0"
      ]
    },
    "883": {
      "op": "extract 0 4",
      "defined_out": [
        "hello_world_result#0",
        "pay_txn.Amount#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "pay_txn.Amount#0",
        "hello_world_result#0",
        "tmp%1#0"
      ]
    },
    "886": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "hello_world_result#0",
        "pay_txn.Amount#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "pay_txn.Amount#0",
        "hello_world_result#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "887": {
      "op": "==",
      "defined_out": [
        "hello_world_result#0",
        "pay_txn.Amount#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "pay_txn.Amount#0",
        "hello_world_result#0",
        "tmp%2#0"
      ]
    },
    "888": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "pay_txn.Amount#0",
        "hello_world_result#0"
      ]
    },
    "889": {
      "retsub": true,
      "op": "retsub"
    },
    "890": {
      "subroutine": "smart_contracts.inner_transactions.contract.InnerTransactions.deploy_app",
      "params": {},
      "block": "deploy_app",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "891": {
      "op": "bytec_3 // base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "CoEBQw=="
      ]
    },
    "892": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "894": {
      "op": "bytec 4 // base64(CjEbQQA0gAQCvs4RNhoAjgEAA4EAQzEZFEQxGEQ2GgFXAgCIACBJFRZXBgJMUIAEFR98dUxQsIEBQzEZQP/UMRgURIEBQ4oBAYAHSGVsbG8sIIv/UIk=)",
      "defined_out": [
        "CjEbQQA0gAQCvs4RNhoAjgEAA4EAQzEZFEQxGEQ2GgFXAgCIACBJFRZXBgJMUIAEFR98dUxQsIEBQzEZQP/UMRgURIEBQ4oBAYAHSGVsbG8sIIv/UIk="
      ],
      "stack_out": [
        "CjEbQQA0gAQCvs4RNhoAjgEAA4EAQzEZFEQxGEQ2GgFXAgCIACBJFRZXBgJMUIAEFR98dUxQsIEBQzEZQP/UMRgURIEBQ4oBAYAHSGVsbG8sIIv/UIk="
      ]
    },
    "896": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "898": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "899": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "901": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "902": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "904": {
      "op": "itxn_submit"
    },
    "905": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "app_txn.CreatedApplicationID#0"
      ],
      "stack_out": [
        "app_txn.CreatedApplicationID#0"
      ]
    },
    "907": {
      "retsub": true,
      "op": "retsub"
    },
    "908": {
      "subroutine": "smart_contracts.inner_transactions.contract.InnerTransactions.arc4_deploy_app",
      "params": {},
      "block": "arc4_deploy_app",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "909": {
      "op": "bytec_3 // base64(CoEBQw==)",
      "defined_out": [
        "CoEBQw=="
      ],
      "stack_out": [
        "CoEBQw=="
      ]
    },
    "910": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "912": {
      "op": "bytec 4 // base64(CjEbQQA0gAQCvs4RNhoAjgEAA4EAQzEZFEQxGEQ2GgFXAgCIACBJFRZXBgJMUIAEFR98dUxQsIEBQzEZQP/UMRgURIEBQ4oBAYAHSGVsbG8sIIv/UIk=)",
      "defined_out": [
        "CjEbQQA0gAQCvs4RNhoAjgEAA4EAQzEZFEQxGEQ2GgFXAgCIACBJFRZXBgJMUIAEFR98dUxQsIEBQzEZQP/UMRgURIEBQ4oBAYAHSGVsbG8sIIv/UIk="
      ],
      "stack_out": [
        "CjEbQQA0gAQCvs4RNhoAjgEAA4EAQzEZFEQxGEQ2GgFXAgCIACBJFRZXBgJMUIAEFR98dUxQsIEBQzEZQP/UMRgURIEBQ4oBAYAHSGVsbG8sIIv/UIk="
      ]
    },
    "914": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "916": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "917": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "919": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "920": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "922": {
      "op": "itxn_submit"
    },
    "923": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "app_txn.CreatedApplicationID#0"
      ],
      "stack_out": [
        "app_txn.CreatedApplicationID#0"
      ]
    },
    "925": {
      "retsub": true,
      "op": "retsub"
    },
    "926": {
      "subroutine": "smart_contracts.inner_transactions.contract.InnerTransactions.noop_app_call",
      "params": {
        "app_id#0": "uint64"
      },
      "block": "noop_app_call",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "929": {
      "op": "itxn_begin"
    },
    "930": {
      "op": "bytec_1 // method \"hello(string)string\"",
      "defined_out": [
        "Method(hello(string)string)"
      ],
      "stack_out": [
        "Method(hello(string)string)"
      ]
    },
    "931": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "933": {
      "op": "bytec_2 // 0x0005576f726c64",
      "defined_out": [
        "0x0005576f726c64"
      ],
      "stack_out": [
        "0x0005576f726c64"
      ]
    },
    "934": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "936": {
      "op": "frame_dig -1",
      "defined_out": [
        "app_id#0 (copy)"
      ],
      "stack_out": [
        "app_id#0 (copy)"
      ]
    },
    "938": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "940": {
      "op": "intc_2 // appl",
      "defined_out": [
        "appl"
      ],
      "stack_out": [
        "appl"
      ]
    },
    "941": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "943": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "944": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "946": {
      "op": "itxn_submit"
    },
    "947": {
      "op": "itxn LastLog",
      "defined_out": [
        "call_txn.LastLog#0"
      ],
      "stack_out": [
        "call_txn.LastLog#0"
      ]
    },
    "949": {
      "op": "dup",
      "defined_out": [
        "call_txn.LastLog#0",
        "call_txn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "call_txn.LastLog#0",
        "call_txn.LastLog#0 (copy)"
      ]
    },
    "950": {
      "op": "extract 4 0",
      "defined_out": [
        "call_txn.LastLog#0",
        "first_hello_world_result#0"
      ],
      "stack_out": [
        "call_txn.LastLog#0",
        "first_hello_world_result#0"
      ]
    },
    "953": {
      "op": "swap",
      "stack_out": [
        "first_hello_world_result#0",
        "call_txn.LastLog#0"
      ]
    },
    "954": {
      "op": "extract 0 4",
      "defined_out": [
        "first_hello_world_result#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "first_hello_world_result#0",
        "tmp%1#0"
      ]
    },
    "957": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "first_hello_world_result#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "first_hello_world_result#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "958": {
      "op": "==",
      "defined_out": [
        "first_hello_world_result#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "first_hello_world_result#0",
        "tmp%2#0"
      ]
    },
    "959": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "first_hello_world_result#0"
      ]
    },
    "960": {
      "op": "itxn_begin"
    },
    "961": {
      "op": "frame_dig -1",
      "stack_out": [
        "first_hello_world_result#0",
        "app_id#0 (copy)"
      ]
    },
    "963": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "first_hello_world_result#0"
      ]
    },
    "965": {
      "op": "bytec_1 // method \"hello(string)string\"",
      "stack_out": [
        "first_hello_world_result#0",
        "Method(hello(string)string)"
      ]
    },
    "966": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "first_hello_world_result#0"
      ]
    },
    "968": {
      "op": "pushbytes 0x0005616761696e",
      "defined_out": [
        "0x0005616761696e",
        "first_hello_world_result#0"
      ],
      "stack_out": [
        "first_hello_world_result#0",
        "0x0005616761696e"
      ]
    },
    "977": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "first_hello_world_result#0"
      ]
    },
    "979": {
      "op": "intc_2 // appl",
      "stack_out": [
        "first_hello_world_result#0",
        "appl"
      ]
    },
    "980": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "first_hello_world_result#0"
      ]
    },
    "982": {
      "op": "intc_0 // 0",
      "stack_out": [
        "first_hello_world_result#0",
        "0"
      ]
    },
    "983": {
      "op": "itxn_field Fee",
      "stack_out": [
        "first_hello_world_result#0"
      ]
    },
    "985": {
      "op": "itxn_submit"
    },
    "986": {
      "op": "itxn LastLog",
      "defined_out": [
        "awst_tmp%0#0",
        "first_hello_world_result#0"
      ],
      "stack_out": [
        "first_hello_world_result#0",
        "awst_tmp%0#0"
      ]
    },
    "988": {
      "op": "dup",
      "defined_out": [
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)",
        "first_hello_world_result#0"
      ],
      "stack_out": [
        "first_hello_world_result#0",
        "awst_tmp%0#0",
        "awst_tmp%0#0 (copy)"
      ]
    },
    "989": {
      "op": "extract 0 4",
      "defined_out": [
        "awst_tmp%0#0",
        "first_hello_world_result#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "first_hello_world_result#0",
        "awst_tmp%0#0",
        "tmp%4#0"
      ]
    },
    "992": {
      "op": "bytec_0 // 0x151f7c75",
      "stack_out": [
        "first_hello_world_result#0",
        "awst_tmp%0#0",
        "tmp%4#0",
        "0x151f7c75"
      ]
    },
    "993": {
      "op": "==",
      "defined_out": [
        "awst_tmp%0#0",
        "first_hello_world_result#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "first_hello_world_result#0",
        "awst_tmp%0#0",
        "tmp%5#0"
      ]
    },
    "994": {
      "error": "ARC4 prefix is valid",
      "op": "assert // ARC4 prefix is valid",
      "stack_out": [
        "first_hello_world_result#0",
        "awst_tmp%0#0"
      ]
    },
    "995": {
      "op": "extract 6 0",
      "defined_out": [
        "first_hello_world_result#0",
        "second_hello_world_result#0"
      ],
      "stack_out": [
        "first_hello_world_result#0",
        "second_hello_world_result#0"
      ]
    },
    "998": {
      "retsub": true,
      "op": "retsub"
    }
  }
}