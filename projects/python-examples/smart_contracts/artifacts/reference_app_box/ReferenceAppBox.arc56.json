{
    "name": "ReferenceAppBox",
    "structs": {},
    "methods": [
        {
            "name": "create",
            "args": [],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [
                    "NoOp"
                ],
                "call": []
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "increment_box_counter",
            "args": [
                {
                    "type": "pay",
                    "name": "pay_mbr"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_box_counter",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_box_counter_for_account",
            "args": [
                {
                    "type": "address",
                    "name": "account"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_box_mbr",
            "args": [],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "get_box_configuration",
            "args": [],
            "returns": {
                "type": "(uint64,uint64,uint64,uint64)"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "update_box_configuration",
            "args": [
                {
                    "type": "uint64",
                    "name": "new_key_length"
                },
                {
                    "type": "uint64",
                    "name": "new_value_length"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 4,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {
                "key_length": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "a2V5X2xlbmd0aA=="
                },
                "value_length": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "dmFsdWVfbGVuZ3Ro"
                },
                "box_size": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Ym94X3NpemU="
                },
                "box_mbr": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Ym94X21icg=="
                }
            },
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "account_box_counter": {
                    "keyType": "address",
                    "valueType": "uint64",
                    "prefix": "Y291bnRlcg=="
                }
            }
        }
    },
    "bareActions": {
        "create": [],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        82
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        200
                    ],
                    "errorMessage": "Payment must be to the contract"
                },
                {
                    "pc": [
                        194
                    ],
                    "errorMessage": "Payment must cover the box MBR"
                },
                {
                    "pc": [
                        217,
                        228
                    ],
                    "errorMessage": "check self.account_box_counter entry exists"
                },
                {
                    "pc": [
                        192,
                        298,
                        323
                    ],
                    "errorMessage": "check self.box_mbr exists"
                },
                {
                    "pc": [
                        319
                    ],
                    "errorMessage": "check self.box_size exists"
                },
                {
                    "pc": [
                        155,
                        309,
                        364
                    ],
                    "errorMessage": "check self.key_length exists"
                },
                {
                    "pc": [
                        160,
                        314
                    ],
                    "errorMessage": "check self.value_length exists"
                },
                {
                    "pc": [
                        185
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CyAEAQCQA8QTJgYHY291bnRlcgprZXlfbGVuZ3RoB2JveF9tYnIEFR98dQx2YWx1ZV9sZW5ndGgIYm94X3NpemUxGEAACSmBM2cnBIEIZzEZFEQxGEEAMoIGBANcj5kExBWZLQTgd4UBBDNWhh0EGj6g6QQFmydANhoAjgYAJwBvAIYAngCpAM8AgARMXGG6NhoAjgEAAQAjKWVEIycEZUQIJwVLAWckCyUIKkxnIkMxFiIJSTgQIhJESTgIIyplRBJEOAcyChJEKDEAUL1FAUEAGigxAFBJvkQXIggWvygxAFC+RBcWK0xQsCJDKDEAUCIWvyJC/+4oMQBQvkwXTEEACEkWK0xQsCJDI0L/9Sg2GgFQvkwXTEEACEkWK0xQsCJDI0L/9SMqZUQWK0xQsCJDIyllRCMnBGVEIycFZUQjKmVETwMWTwMWUE8CFlBMFlArTFCwIkM2GgEXNhoCFylPAmcnBEsBZyMpZUQIJwVLAWckCyUIKkxnIkM=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}