{
    "name": "BoxCounter",
    "structs": {},
    "methods": [
        {
            "name": "increment_box_counter",
            "args": [
                {
                    "type": "pay",
                    "name": "pay_mbr"
                }
            ],
            "returns": {
                "type": "uint64"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "account_box_counter": {
                    "keyType": "AVMBytes",
                    "valueType": "AVMUint64",
                    "prefix": "YWNjb3VudF9ib3hfY291bnRlcg=="
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        50
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        87
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        53
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        130,
                        143
                    ],
                    "errorMessage": "check self.account_box_counter entry exists"
                },
                {
                    "pc": [
                        63
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBzbWFydF9jb250cmFjdHMucmVmZXJlbmNlX2FwcF9ib3guY29udHJhY3QuQm94Q291bnRlci5fX2FsZ29weV9lbnRyeXBvaW50X3dpdGhfaW5pdCgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIGludGNibG9jayAxCiAgICBieXRlY2Jsb2NrICJhY2NvdW50X2JveF9jb3VudGVyIgogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hcHBfYm94L2NvbnRyYWN0LnB5OjEwCiAgICAvLyBjbGFzcyBCb3hDb3VudGVyKEFSQzRDb250cmFjdCk6CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdANgogICAgcHVzaGJ5dGVzIDB4MDM1YzhmOTkgLy8gbWV0aG9kICJpbmNyZW1lbnRfYm94X2NvdW50ZXIocGF5KXVpbnQ2NCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIG1haW5faW5jcmVtZW50X2JveF9jb3VudGVyX3JvdXRlQDUKCm1haW5fYWZ0ZXJfaWZfZWxzZUA4OgogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hcHBfYm94L2NvbnRyYWN0LnB5OjEwCiAgICAvLyBjbGFzcyBCb3hDb3VudGVyKEFSQzRDb250cmFjdCk6CiAgICBwdXNoaW50IDAgLy8gMAogICAgcmV0dXJuCgptYWluX2luY3JlbWVudF9ib3hfY291bnRlcl9yb3V0ZUA1OgogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hcHBfYm94L2NvbnRyYWN0LnB5OjE1CiAgICAvLyBAYWJpbWV0aG9kCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9yZWZlcmVuY2VfYXBwX2JveC9jb250cmFjdC5weToxMAogICAgLy8gY2xhc3MgQm94Q291bnRlcihBUkM0Q29udHJhY3QpOgogICAgdHhuIEdyb3VwSW5kZXgKICAgIGludGNfMCAvLyAxCiAgICAtCiAgICBkdXAKICAgIGd0eG5zIFR5cGVFbnVtCiAgICBpbnRjXzAgLy8gcGF5CiAgICA9PQogICAgYXNzZXJ0IC8vIHRyYW5zYWN0aW9uIHR5cGUgaXMgcGF5CiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FwcF9ib3gvY29udHJhY3QucHk6MTUKICAgIC8vIEBhYmltZXRob2QKICAgIGNhbGxzdWIgaW5jcmVtZW50X2JveF9jb3VudGVyCiAgICBpdG9iCiAgICBwdXNoYnl0ZXMgMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYmFyZV9yb3V0aW5nQDY6CiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FwcF9ib3gvY29udHJhY3QucHk6MTAKICAgIC8vIGNsYXNzIEJveENvdW50ZXIoQVJDNENvbnRyYWN0KToKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGJueiBtYWluX2FmdGVyX2lmX2Vsc2VAOAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCgovLyBzbWFydF9jb250cmFjdHMucmVmZXJlbmNlX2FwcF9ib3guY29udHJhY3QuQm94Q291bnRlci5pbmNyZW1lbnRfYm94X2NvdW50ZXIocGF5X21icjogdWludDY0KSAtPiB1aW50NjQ6CmluY3JlbWVudF9ib3hfY291bnRlcjoKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9yZWZlcmVuY2VfYXBwX2JveC9jb250cmFjdC5weToxNS0xNgogICAgLy8gQGFiaW1ldGhvZAogICAgLy8gZGVmIGluY3JlbWVudF9ib3hfY291bnRlcihzZWxmLCBwYXlfbWJyOiBndHhuLlBheW1lbnRUcmFuc2FjdGlvbikgLT4gVUludDY0OgogICAgcHJvdG8gMSAxCiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FwcF9ib3gvY29udHJhY3QucHk6MTcKICAgIC8vIGFzc2VydCBwYXlfbWJyLmFtb3VudCA9PSBDT1VOVEVSX0JPWF9NQlIKICAgIGZyYW1lX2RpZyAtMQogICAgZ3R4bnMgQW1vdW50CiAgICBwdXNoaW50IDI2MTAwIC8vIDI2MTAwCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FwcF9ib3gvY29udHJhY3QucHk6MTgKICAgIC8vIGFzc2VydCBwYXlfbWJyLnJlY2VpdmVyID09IEdsb2JhbC5jdXJyZW50X2FwcGxpY2F0aW9uX2FkZHJlc3MKICAgIGZyYW1lX2RpZyAtMQogICAgZ3R4bnMgUmVjZWl2ZXIKICAgIGdsb2JhbCBDdXJyZW50QXBwbGljYXRpb25BZGRyZXNzCiAgICA9PQogICAgYXNzZXJ0CiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FwcF9ib3gvY29udHJhY3QucHk6MjAKICAgIC8vIGlmIFR4bi5zZW5kZXIgaW4gc2VsZi5hY2NvdW50X2JveF9jb3VudGVyOgogICAgYnl0ZWNfMCAvLyAiYWNjb3VudF9ib3hfY291bnRlciIKICAgIHR4biBTZW5kZXIKICAgIGNvbmNhdAogICAgYm94X2xlbgogICAgYnVyeSAxCiAgICBieiBpbmNyZW1lbnRfYm94X2NvdW50ZXJfZWxzZV9ib2R5QDIKICAgIC8vIHNtYXJ0X2NvbnRyYWN0cy9yZWZlcmVuY2VfYXBwX2JveC9jb250cmFjdC5weToyMQogICAgLy8gc2VsZi5hY2NvdW50X2JveF9jb3VudGVyW1R4bi5zZW5kZXJdICs9IDEKICAgIGJ5dGVjXzAgLy8gImFjY291bnRfYm94X2NvdW50ZXIiCiAgICB0eG4gU2VuZGVyCiAgICBjb25jYXQKICAgIGR1cAogICAgYm94X2dldAogICAgc3dhcAogICAgYnRvaQogICAgc3dhcAogICAgYXNzZXJ0IC8vIGNoZWNrIHNlbGYuYWNjb3VudF9ib3hfY291bnRlciBlbnRyeSBleGlzdHMKICAgIGludGNfMCAvLyAxCiAgICArCiAgICBpdG9iCiAgICBib3hfcHV0CgppbmNyZW1lbnRfYm94X2NvdW50ZXJfYWZ0ZXJfaWZfZWxzZUAzOgogICAgLy8gc21hcnRfY29udHJhY3RzL3JlZmVyZW5jZV9hcHBfYm94L2NvbnRyYWN0LnB5OjI1CiAgICAvLyByZXR1cm4gc2VsZi5hY2NvdW50X2JveF9jb3VudGVyW1R4bi5zZW5kZXJdCiAgICBieXRlY18wIC8vICJhY2NvdW50X2JveF9jb3VudGVyIgogICAgdHhuIFNlbmRlcgogICAgY29uY2F0CiAgICBib3hfZ2V0CiAgICBzd2FwCiAgICBidG9pCiAgICBzd2FwCiAgICBhc3NlcnQgLy8gY2hlY2sgc2VsZi5hY2NvdW50X2JveF9jb3VudGVyIGVudHJ5IGV4aXN0cwogICAgcmV0c3ViCgppbmNyZW1lbnRfYm94X2NvdW50ZXJfZWxzZV9ib2R5QDI6CiAgICAvLyBzbWFydF9jb250cmFjdHMvcmVmZXJlbmNlX2FwcF9ib3gvY29udHJhY3QucHk6MjMKICAgIC8vIHNlbGYuYWNjb3VudF9ib3hfY291bnRlcltUeG4uc2VuZGVyXSA9IFVJbnQ2NCgxKQogICAgYnl0ZWNfMCAvLyAiYWNjb3VudF9ib3hfY291bnRlciIKICAgIHR4biBTZW5kZXIKICAgIGNvbmNhdAogICAgaW50Y18wIC8vIDEKICAgIGl0b2IKICAgIGJveF9wdXQKICAgIGIgaW5jcmVtZW50X2JveF9jb3VudGVyX2FmdGVyX2lmX2Vsc2VAMwo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiABASYBE2FjY291bnRfYm94X2NvdW50ZXIxG0EAMIAEA1yPmTYaAI4BAAOBAEMxGRREMRhEMRYiCUk4ECISRIgAFxaABBUffHVMULAiQzEZQP/YMRgURCJDigEBi/84CIH0ywESRIv/OAcyChJEKDEAUL1FAUEAGCgxAFBJvkwXTEQiCBa/KDEAUL5MF0xEiSgxAFAiFr9C/+w=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 5,
            "patch": 3
        }
    },
    "events": [],
    "templateVariables": {}
}