{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 9,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9 -> 10 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "147: bytec_0",
              "148: txn Sender",
              "149: concat",
              "150: dup",
              "151: box_get",
              "152: assert",
              "153: btoi",
              "154: intc_0",
              "155: +",
              "156: itob",
              "157: box_put",
              "160: bytec_0",
              "161: txn Sender",
              "162: concat",
              "163: box_get",
              "164: assert",
              "165: btoi"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9 -> 12 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "178: increment_box_counter_else_body@3:",
              "181: bytec_0",
              "182: txn Sender",
              "183: concat",
              "184: intc_0",
              "185: itob",
              "186: box_put",
              "189: intc_0",
              "192: b increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 13 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 13 -> 16 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "222: get_box_counter_after_if_else@3:",
              "225: intc_1",
              "228: b get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 17 -> 18 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "249: dup"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 17 -> 20 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "262: get_box_counter_for_account_after_if_else@3:",
              "265: intc_1",
              "268: b get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "272: get_box_mbr:",
              "275: intc_1",
              "276: bytec_2",
              "277: app_global_get_ex",
              "278: assert",
              "281: itob",
              "282: bytec_3",
              "283: swap",
              "284: concat",
              "285: log",
              "286: intc_0",
              "287: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 22",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "291: get_box_configuration:",
              "294: intc_1",
              "295: bytec_1",
              "296: app_global_get_ex",
              "297: assert",
              "300: intc_1",
              "301: bytec 4",
              "302: app_global_get_ex",
              "303: assert",
              "306: intc_1",
              "307: bytec 5",
              "308: app_global_get_ex",
              "309: assert",
              "312: intc_1",
              "313: bytec_2",
              "314: app_global_get_ex",
              "315: assert",
              "318: uncover 3",
              "319: itob",
              "320: uncover 3",
              "321: itob",
              "322: concat",
              "323: uncover 2",
              "324: itob",
              "325: concat",
              "326: swap",
              "327: itob",
              "328: concat",
              "329: bytec_3",
              "330: swap",
              "331: concat",
              "332: log",
              "333: intc_0",
              "334: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 23",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "338: update_box_configuration:",
              "341: txna ApplicationArgs 1",
              "342: btoi",
              "343: txna ApplicationArgs 2",
              "344: btoi",
              "347: bytec_1",
              "348: uncover 2",
              "349: app_global_put",
              "352: bytec 4",
              "353: dig 1",
              "354: app_global_put",
              "358: intc_1",
              "359: bytec_1",
              "360: app_global_get_ex",
              "361: assert",
              "362: +",
              "363: bytec 5",
              "364: dig 1",
              "365: app_global_put",
              "368: intc_2",
              "369: *",
              "370: intc_3",
              "371: +",
              "372: bytec_2",
              "373: swap",
              "374: app_global_put",
              "377: intc_0",
              "378: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 9,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9 -> 10 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "147: bytec_0",
              "148: txn Sender",
              "149: concat",
              "150: dup",
              "151: box_get",
              "152: assert",
              "153: btoi",
              "154: intc_0",
              "155: +",
              "156: itob",
              "157: box_put",
              "160: bytec_0",
              "161: txn Sender",
              "162: concat",
              "163: box_get",
              "164: assert",
              "165: btoi"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9 -> 12 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "178: increment_box_counter_else_body@3:",
              "181: bytec_0",
              "182: txn Sender",
              "183: concat",
              "184: intc_0",
              "185: itob",
              "186: box_put",
              "189: intc_0",
              "192: b increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 13 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 13 -> 16 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "222: get_box_counter_after_if_else@3:",
              "225: intc_1",
              "228: b get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 17 -> 18 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "249: dup"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 17 -> 20 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "262: get_box_counter_for_account_after_if_else@3:",
              "265: intc_1",
              "268: b get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "272: get_box_mbr:",
              "275: intc_1",
              "276: bytec_2",
              "277: app_global_get_ex",
              "278: assert",
              "281: itob",
              "282: bytec_3",
              "283: swap",
              "284: concat",
              "285: log",
              "286: intc_0",
              "287: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 22",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "291: get_box_configuration:",
              "294: intc_1",
              "295: bytec_1",
              "296: app_global_get_ex",
              "297: assert",
              "300: intc_1",
              "301: bytec 4",
              "302: app_global_get_ex",
              "303: assert",
              "306: intc_1",
              "307: bytec 5",
              "308: app_global_get_ex",
              "309: assert",
              "312: intc_1",
              "313: bytec_2",
              "314: app_global_get_ex",
              "315: assert",
              "318: uncover 3",
              "319: itob",
              "320: uncover 3",
              "321: itob",
              "322: concat",
              "323: uncover 2",
              "324: itob",
              "325: concat",
              "326: swap",
              "327: itob",
              "328: concat",
              "329: bytec_3",
              "330: swap",
              "331: concat",
              "332: log",
              "333: intc_0",
              "334: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 23",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "338: update_box_configuration:",
              "341: txna ApplicationArgs 1",
              "342: btoi",
              "343: txna ApplicationArgs 2",
              "344: btoi",
              "347: bytec_1",
              "348: uncover 2",
              "349: app_global_put",
              "352: bytec 4",
              "353: dig 1",
              "354: app_global_put",
              "358: intc_1",
              "359: bytec_1",
              "360: app_global_get_ex",
              "361: assert",
              "362: +",
              "363: bytec 5",
              "364: dig 1",
              "365: app_global_put",
              "368: intc_2",
              "369: *",
              "370: intc_3",
              "371: +",
              "372: bytec_2",
              "373: swap",
              "374: app_global_put",
              "377: intc_0",
              "378: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 9,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9 -> 10 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "147: bytec_0",
              "148: txn Sender",
              "149: concat",
              "150: dup",
              "151: box_get",
              "152: assert",
              "153: btoi",
              "154: intc_0",
              "155: +",
              "156: itob",
              "157: box_put",
              "160: bytec_0",
              "161: txn Sender",
              "162: concat",
              "163: box_get",
              "164: assert",
              "165: btoi"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9 -> 12 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "178: increment_box_counter_else_body@3:",
              "181: bytec_0",
              "182: txn Sender",
              "183: concat",
              "184: intc_0",
              "185: itob",
              "186: box_put",
              "189: intc_0",
              "192: b increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 13 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 13 -> 16 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "222: get_box_counter_after_if_else@3:",
              "225: intc_1",
              "228: b get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 17 -> 18 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "249: dup"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 17 -> 20 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "262: get_box_counter_for_account_after_if_else@3:",
              "265: intc_1",
              "268: b get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "272: get_box_mbr:",
              "275: intc_1",
              "276: bytec_2",
              "277: app_global_get_ex",
              "278: assert",
              "281: itob",
              "282: bytec_3",
              "283: swap",
              "284: concat",
              "285: log",
              "286: intc_0",
              "287: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 22",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "291: get_box_configuration:",
              "294: intc_1",
              "295: bytec_1",
              "296: app_global_get_ex",
              "297: assert",
              "300: intc_1",
              "301: bytec 4",
              "302: app_global_get_ex",
              "303: assert",
              "306: intc_1",
              "307: bytec 5",
              "308: app_global_get_ex",
              "309: assert",
              "312: intc_1",
              "313: bytec_2",
              "314: app_global_get_ex",
              "315: assert",
              "318: uncover 3",
              "319: itob",
              "320: uncover 3",
              "321: itob",
              "322: concat",
              "323: uncover 2",
              "324: itob",
              "325: concat",
              "326: swap",
              "327: itob",
              "328: concat",
              "329: bytec_3",
              "330: swap",
              "331: concat",
              "332: log",
              "333: intc_0",
              "334: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 23",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "338: update_box_configuration:",
              "341: txna ApplicationArgs 1",
              "342: btoi",
              "343: txna ApplicationArgs 2",
              "344: btoi",
              "347: bytec_1",
              "348: uncover 2",
              "349: app_global_put",
              "352: bytec 4",
              "353: dig 1",
              "354: app_global_put",
              "358: intc_1",
              "359: bytec_1",
              "360: app_global_get_ex",
              "361: assert",
              "362: +",
              "363: bytec 5",
              "364: dig 1",
              "365: app_global_put",
              "368: intc_2",
              "369: *",
              "370: intc_3",
              "371: +",
              "372: bytec_2",
              "373: swap",
              "374: app_global_put",
              "377: intc_0",
              "378: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 9,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9 -> 10 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "147: bytec_0",
              "148: txn Sender",
              "149: concat",
              "150: dup",
              "151: box_get",
              "152: assert",
              "153: btoi",
              "154: intc_0",
              "155: +",
              "156: itob",
              "157: box_put",
              "160: bytec_0",
              "161: txn Sender",
              "162: concat",
              "163: box_get",
              "164: assert",
              "165: btoi"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9 -> 12 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "178: increment_box_counter_else_body@3:",
              "181: bytec_0",
              "182: txn Sender",
              "183: concat",
              "184: intc_0",
              "185: itob",
              "186: box_put",
              "189: intc_0",
              "192: b increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 13 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 13 -> 16 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "222: get_box_counter_after_if_else@3:",
              "225: intc_1",
              "228: b get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 17 -> 18 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "249: dup"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 17 -> 20 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "262: get_box_counter_for_account_after_if_else@3:",
              "265: intc_1",
              "268: b get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "272: get_box_mbr:",
              "275: intc_1",
              "276: bytec_2",
              "277: app_global_get_ex",
              "278: assert",
              "281: itob",
              "282: bytec_3",
              "283: swap",
              "284: concat",
              "285: log",
              "286: intc_0",
              "287: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 22",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "291: get_box_configuration:",
              "294: intc_1",
              "295: bytec_1",
              "296: app_global_get_ex",
              "297: assert",
              "300: intc_1",
              "301: bytec 4",
              "302: app_global_get_ex",
              "303: assert",
              "306: intc_1",
              "307: bytec 5",
              "308: app_global_get_ex",
              "309: assert",
              "312: intc_1",
              "313: bytec_2",
              "314: app_global_get_ex",
              "315: assert",
              "318: uncover 3",
              "319: itob",
              "320: uncover 3",
              "321: itob",
              "322: concat",
              "323: uncover 2",
              "324: itob",
              "325: concat",
              "326: swap",
              "327: itob",
              "328: concat",
              "329: bytec_3",
              "330: swap",
              "331: concat",
              "332: log",
              "333: intc_0",
              "334: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 23",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "338: update_box_configuration:",
              "341: txna ApplicationArgs 1",
              "342: btoi",
              "343: txna ApplicationArgs 2",
              "344: btoi",
              "347: bytec_1",
              "348: uncover 2",
              "349: app_global_put",
              "352: bytec 4",
              "353: dig 1",
              "354: app_global_put",
              "358: intc_1",
              "359: bytec_1",
              "360: app_global_get_ex",
              "361: assert",
              "362: +",
              "363: bytec 5",
              "364: dig 1",
              "365: app_global_put",
              "368: intc_2",
              "369: *",
              "370: intc_3",
              "371: +",
              "372: bytec_2",
              "373: swap",
              "374: app_global_put",
              "377: intc_0",
              "378: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 20,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 9 -> 10 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "147: bytec_0",
              "148: txn Sender",
              "149: concat",
              "150: dup",
              "151: box_get",
              "152: assert",
              "153: btoi",
              "154: intc_0",
              "155: +",
              "156: itob",
              "157: box_put",
              "160: bytec_0",
              "161: txn Sender",
              "162: concat",
              "163: box_get",
              "164: assert",
              "165: btoi"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 9 -> 12 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "178: increment_box_counter_else_body@3:",
              "181: bytec_0",
              "182: txn Sender",
              "183: concat",
              "184: intc_0",
              "185: itob",
              "186: box_put",
              "189: intc_0",
              "192: b increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 13 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 13 -> 16 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "222: get_box_counter_after_if_else@3:",
              "225: intc_1",
              "228: b get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 17 -> 18 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "249: dup"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 17 -> 20 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "262: get_box_counter_for_account_after_if_else@3:",
              "265: intc_1",
              "268: b get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "272: get_box_mbr:",
              "275: intc_1",
              "276: bytec_2",
              "277: app_global_get_ex",
              "278: assert",
              "281: itob",
              "282: bytec_3",
              "283: swap",
              "284: concat",
              "285: log",
              "286: intc_0",
              "287: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 22",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "291: get_box_configuration:",
              "294: intc_1",
              "295: bytec_1",
              "296: app_global_get_ex",
              "297: assert",
              "300: intc_1",
              "301: bytec 4",
              "302: app_global_get_ex",
              "303: assert",
              "306: intc_1",
              "307: bytec 5",
              "308: app_global_get_ex",
              "309: assert",
              "312: intc_1",
              "313: bytec_2",
              "314: app_global_get_ex",
              "315: assert",
              "318: uncover 3",
              "319: itob",
              "320: uncover 3",
              "321: itob",
              "322: concat",
              "323: uncover 2",
              "324: itob",
              "325: concat",
              "326: swap",
              "327: itob",
              "328: concat",
              "329: bytec_3",
              "330: swap",
              "331: concat",
              "332: log",
              "333: intc_0",
              "334: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 23",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "338: update_box_configuration:",
              "341: txna ApplicationArgs 1",
              "342: btoi",
              "343: txna ApplicationArgs 2",
              "344: btoi",
              "347: bytec_1",
              "348: uncover 2",
              "349: app_global_put",
              "352: bytec 4",
              "353: dig 1",
              "354: app_global_put",
              "358: intc_1",
              "359: bytec_1",
              "360: app_global_get_ex",
              "361: assert",
              "362: +",
              "363: bytec 5",
              "364: dig 1",
              "365: app_global_put",
              "368: intc_2",
              "369: *",
              "370: intc_3",
              "371: +",
              "372: bytec_2",
              "373: swap",
              "374: app_global_put",
              "377: intc_0",
              "378: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 6 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "48: main_create_NoOp@12:",
              "51: pushbytes 0x4c5c61ba",
              "52: txna ApplicationArgs 0",
              "53: match create"
            ],
            [
              "58: create:",
              "61: intc_1",
              "62: bytec_1",
              "63: app_global_get_ex",
              "64: assert",
              "65: intc_1",
              "66: bytec 4",
              "67: app_global_get_ex",
              "68: assert",
              "69: +",
              "70: bytec 5",
              "71: dig 1",
              "72: app_global_put",
              "77: intc_2",
              "78: *",
              "81: intc_3",
              "86: +",
              "89: bytec_2",
              "94: swap",
              "95: app_global_put",
              "98: intc_0",
              "99: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9 -> 10 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "147: bytec_0",
              "148: txn Sender",
              "149: concat",
              "150: dup",
              "151: box_get",
              "152: assert",
              "153: btoi",
              "154: intc_0",
              "155: +",
              "156: itob",
              "157: box_put",
              "160: bytec_0",
              "161: txn Sender",
              "162: concat",
              "163: box_get",
              "164: assert",
              "165: btoi"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9 -> 12 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "178: increment_box_counter_else_body@3:",
              "181: bytec_0",
              "182: txn Sender",
              "183: concat",
              "184: intc_0",
              "185: itob",
              "186: box_put",
              "189: intc_0",
              "192: b increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 13 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 13 -> 16 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "222: get_box_counter_after_if_else@3:",
              "225: intc_1",
              "228: b get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 17 -> 18 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "249: dup"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 17 -> 20 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "262: get_box_counter_for_account_after_if_else@3:",
              "265: intc_1",
              "268: b get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "272: get_box_mbr:",
              "275: intc_1",
              "276: bytec_2",
              "277: app_global_get_ex",
              "278: assert",
              "281: itob",
              "282: bytec_3",
              "283: swap",
              "284: concat",
              "285: log",
              "286: intc_0",
              "287: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 22",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "291: get_box_configuration:",
              "294: intc_1",
              "295: bytec_1",
              "296: app_global_get_ex",
              "297: assert",
              "300: intc_1",
              "301: bytec 4",
              "302: app_global_get_ex",
              "303: assert",
              "306: intc_1",
              "307: bytec 5",
              "308: app_global_get_ex",
              "309: assert",
              "312: intc_1",
              "313: bytec_2",
              "314: app_global_get_ex",
              "315: assert",
              "318: uncover 3",
              "319: itob",
              "320: uncover 3",
              "321: itob",
              "322: concat",
              "323: uncover 2",
              "324: itob",
              "325: concat",
              "326: swap",
              "327: itob",
              "328: concat",
              "329: bytec_3",
              "330: swap",
              "331: concat",
              "332: log",
              "333: intc_0",
              "334: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 23",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "338: update_box_configuration:",
              "341: txna ApplicationArgs 1",
              "342: btoi",
              "343: txna ApplicationArgs 2",
              "344: btoi",
              "347: bytec_1",
              "348: uncover 2",
              "349: app_global_put",
              "352: bytec 4",
              "353: dig 1",
              "354: app_global_put",
              "358: intc_1",
              "359: bytec_1",
              "360: app_global_get_ex",
              "361: assert",
              "362: +",
              "363: bytec 5",
              "364: dig 1",
              "365: app_global_put",
              "368: intc_2",
              "369: *",
              "370: intc_3",
              "371: +",
              "372: bytec_2",
              "373: swap",
              "374: app_global_put",
              "377: intc_0",
              "378: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 6 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "48: main_create_NoOp@12:",
              "51: pushbytes 0x4c5c61ba",
              "52: txna ApplicationArgs 0",
              "53: match create"
            ],
            [
              "58: create:",
              "61: intc_1",
              "62: bytec_1",
              "63: app_global_get_ex",
              "64: assert",
              "65: intc_1",
              "66: bytec 4",
              "67: app_global_get_ex",
              "68: assert",
              "69: +",
              "70: bytec 5",
              "71: dig 1",
              "72: app_global_put",
              "77: intc_2",
              "78: *",
              "81: intc_3",
              "86: +",
              "89: bytec_2",
              "94: swap",
              "95: app_global_put",
              "98: intc_0",
              "99: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 20,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 9 -> 10 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "147: bytec_0",
              "148: txn Sender",
              "149: concat",
              "150: dup",
              "151: box_get",
              "152: assert",
              "153: btoi",
              "154: intc_0",
              "155: +",
              "156: itob",
              "157: box_put",
              "160: bytec_0",
              "161: txn Sender",
              "162: concat",
              "163: box_get",
              "164: assert",
              "165: btoi"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 9 -> 12 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "178: increment_box_counter_else_body@3:",
              "181: bytec_0",
              "182: txn Sender",
              "183: concat",
              "184: intc_0",
              "185: itob",
              "186: box_put",
              "189: intc_0",
              "192: b increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 13 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 13 -> 16 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "222: get_box_counter_after_if_else@3:",
              "225: intc_1",
              "228: b get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 17 -> 18 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "249: dup"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 17 -> 20 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "262: get_box_counter_for_account_after_if_else@3:",
              "265: intc_1",
              "268: b get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "272: get_box_mbr:",
              "275: intc_1",
              "276: bytec_2",
              "277: app_global_get_ex",
              "278: assert",
              "281: itob",
              "282: bytec_3",
              "283: swap",
              "284: concat",
              "285: log",
              "286: intc_0",
              "287: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 22",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "291: get_box_configuration:",
              "294: intc_1",
              "295: bytec_1",
              "296: app_global_get_ex",
              "297: assert",
              "300: intc_1",
              "301: bytec 4",
              "302: app_global_get_ex",
              "303: assert",
              "306: intc_1",
              "307: bytec 5",
              "308: app_global_get_ex",
              "309: assert",
              "312: intc_1",
              "313: bytec_2",
              "314: app_global_get_ex",
              "315: assert",
              "318: uncover 3",
              "319: itob",
              "320: uncover 3",
              "321: itob",
              "322: concat",
              "323: uncover 2",
              "324: itob",
              "325: concat",
              "326: swap",
              "327: itob",
              "328: concat",
              "329: bytec_3",
              "330: swap",
              "331: concat",
              "332: log",
              "333: intc_0",
              "334: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 23",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "338: update_box_configuration:",
              "341: txna ApplicationArgs 1",
              "342: btoi",
              "343: txna ApplicationArgs 2",
              "344: btoi",
              "347: bytec_1",
              "348: uncover 2",
              "349: app_global_put",
              "352: bytec 4",
              "353: dig 1",
              "354: app_global_put",
              "358: intc_1",
              "359: bytec_1",
              "360: app_global_get_ex",
              "361: assert",
              "362: +",
              "363: bytec 5",
              "364: dig 1",
              "365: app_global_put",
              "368: intc_2",
              "369: *",
              "370: intc_3",
              "371: +",
              "372: bytec_2",
              "373: swap",
              "374: app_global_put",
              "377: intc_0",
              "378: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 6 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "13: bytec_1",
              "16: pushint 51",
              "22: app_global_put",
              "25: bytec 4",
              "28: pushint 8",
              "33: app_global_put"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "48: main_create_NoOp@12:",
              "51: pushbytes 0x4c5c61ba",
              "52: txna ApplicationArgs 0",
              "53: match create"
            ],
            [
              "58: create:",
              "61: intc_1",
              "62: bytec_1",
              "63: app_global_get_ex",
              "64: assert",
              "65: intc_1",
              "66: bytec 4",
              "67: app_global_get_ex",
              "68: assert",
              "69: +",
              "70: bytec 5",
              "71: dig 1",
              "72: app_global_put",
              "77: intc_2",
              "78: *",
              "81: intc_3",
              "86: +",
              "89: bytec_2",
              "94: swap",
              "95: app_global_put",
              "98: intc_0",
              "99: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9 -> 10 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "147: bytec_0",
              "148: txn Sender",
              "149: concat",
              "150: dup",
              "151: box_get",
              "152: assert",
              "153: btoi",
              "154: intc_0",
              "155: +",
              "156: itob",
              "157: box_put",
              "160: bytec_0",
              "161: txn Sender",
              "162: concat",
              "163: box_get",
              "164: assert",
              "165: btoi"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9 -> 12 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "103: increment_box_counter:",
              "106: txn GroupIndex",
              "107: intc_0",
              "108: -",
              "109: dup",
              "110: Gtxns TypeEnum",
              "111: intc_0",
              "112: ==",
              "113: assert",
              "117: dup",
              "118: Gtxns Amount",
              "119: intc_1",
              "120: bytec_2",
              "121: app_global_get_ex",
              "122: assert",
              "123: ==",
              "124: assert",
              "127: Gtxns Receiver",
              "128: global CurrentApplicationAddress",
              "129: ==",
              "134: assert",
              "137: bytec_0",
              "138: txn Sender",
              "139: concat",
              "140: box_len",
              "141: bury 1",
              "144: bz increment_box_counter_else_body@3"
            ],
            [
              "178: increment_box_counter_else_body@3:",
              "181: bytec_0",
              "182: txn Sender",
              "183: concat",
              "184: intc_0",
              "185: itob",
              "186: box_put",
              "189: intc_0",
              "192: b increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4"
            ],
            [
              "167: increment_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.increment_box_counter@4:",
              "170: itob",
              "171: bytec_3",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 13 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 13 -> 16 -> 15",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "196: get_box_counter:",
              "199: bytec_0",
              "200: txn Sender",
              "201: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz get_box_counter_after_if_else@3"
            ],
            [
              "222: get_box_counter_after_if_else@3:",
              "225: intc_1",
              "228: b get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4"
            ],
            [
              "211: get_box_counter_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 17 -> 18 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "249: dup"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 17 -> 20 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "232: get_box_counter_for_account:",
              "235: bytec_0",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "242: box_get",
              "243: swap",
              "244: btoi",
              "245: swap",
              "248: bz get_box_counter_for_account_after_if_else@3"
            ],
            [
              "262: get_box_counter_for_account_after_if_else@3:",
              "265: intc_1",
              "268: b get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4"
            ],
            [
              "251: get_box_counter_for_account_after_inlined_smart_contracts.reference_app_box.contract.ReferenceAppBox.get_box_counter_for_account@4:",
              "254: itob",
              "255: bytec_3",
              "256: swap",
              "257: concat",
              "258: log",
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "272: get_box_mbr:",
              "275: intc_1",
              "276: bytec_2",
              "277: app_global_get_ex",
              "278: assert",
              "281: itob",
              "282: bytec_3",
              "283: swap",
              "284: concat",
              "285: log",
              "286: intc_0",
              "287: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 22",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "291: get_box_configuration:",
              "294: intc_1",
              "295: bytec_1",
              "296: app_global_get_ex",
              "297: assert",
              "300: intc_1",
              "301: bytec 4",
              "302: app_global_get_ex",
              "303: assert",
              "306: intc_1",
              "307: bytec 5",
              "308: app_global_get_ex",
              "309: assert",
              "312: intc_1",
              "313: bytec_2",
              "314: app_global_get_ex",
              "315: assert",
              "318: uncover 3",
              "319: itob",
              "320: uncover 3",
              "321: itob",
              "322: concat",
              "323: uncover 2",
              "324: itob",
              "325: concat",
              "326: swap",
              "327: itob",
              "328: concat",
              "329: bytec_3",
              "330: swap",
              "331: concat",
              "332: log",
              "333: intc_0",
              "334: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 23",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "43: pushbytess 0x035c8f99 0xc415992d 0xe0778501 0x3356861d 0x1a3ea0e9 0x059b2740",
              "44: txna ApplicationArgs 0",
              "45: match increment_box_counter get_box_counter get_box_counter_for_account get_box_mbr get_box_configuration update_box_configuration"
            ],
            [
              "338: update_box_configuration:",
              "341: txna ApplicationArgs 1",
              "342: btoi",
              "343: txna ApplicationArgs 2",
              "344: btoi",
              "347: bytec_1",
              "348: uncover 2",
              "349: app_global_put",
              "352: bytec 4",
              "353: dig 1",
              "354: app_global_put",
              "358: intc_1",
              "359: bytec_1",
              "360: app_global_get_ex",
              "361: assert",
              "362: +",
              "363: bytec 5",
              "364: dig 1",
              "365: app_global_put",
              "368: intc_2",
              "369: *",
              "370: intc_3",
              "371: +",
              "372: bytec_2",
              "373: swap",
              "374: app_global_put",
              "377: intc_0",
              "378: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 6 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 400 2500",
              "7: bytecblock \"counter\" \"key_length\" \"box_mbr\" 0x151f7c75 \"value_length\" \"box_size\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "35: main_after_if_else@2:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: bz main_create_NoOp@12"
            ],
            [
              "48: main_create_NoOp@12:",
              "51: pushbytes 0x4c5c61ba",
              "52: txna ApplicationArgs 0",
              "53: match create"
            ],
            [
              "58: create:",
              "61: intc_1",
              "62: bytec_1",
              "63: app_global_get_ex",
              "64: assert",
              "65: intc_1",
              "66: bytec 4",
              "67: app_global_get_ex",
              "68: assert",
              "69: +",
              "70: bytec 5",
              "71: dig 1",
              "72: app_global_put",
              "77: intc_2",
              "78: *",
              "81: intc_3",
              "86: +",
              "89: bytec_2",
              "94: swap",
              "95: app_global_put",
              "98: intc_0",
              "99: return"
            ]
          ]
        }
      ]
    }
  ]
}