{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 4,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "46: main_increment_via_inner_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "54: callsub increment_via_inner"
            ],
            [
              "76: increment_via_inner:",
              "83: itxn_begin",
              "86: pushint 1717",
              "87: itxn_field ApplicationID",
              "94: bytec_1",
              "95: itxn_field ApplicationArgs",
              "96: intc_2",
              "97: itxn_field TypeEnum",
              "100: intc_0",
              "101: itxn_field Fee",
              "108: itxn_submit",
              "109: itxn LastLog",
              "110: dup",
              "111: extract 4 0",
              "112: swap",
              "113: extract 0 4",
              "114: bytec_0",
              "115: ==",
              "116: assert",
              "117: btoi",
              "120: retsub"
            ],
            [
              "55: itob",
              "56: bytec_0",
              "57: swap",
              "58: concat",
              "59: log",
              "60: intc_1",
              "61: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "22: main_increment_via_inner_with_arg_route@4:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "32: txna ApplicationArgs 1",
              "33: btoi",
              "34: txnas Applications",
              "37: callsub increment_via_inner_with_arg"
            ],
            [
              "124: increment_via_inner_with_arg:",
              "128: proto 1 1",
              "132: itxn_begin",
              "133: frame_dig -1",
              "134: itxn_field ApplicationID",
              "135: bytec_1",
              "136: itxn_field ApplicationArgs",
              "137: intc_2",
              "138: itxn_field TypeEnum",
              "139: intc_0",
              "140: itxn_field Fee",
              "141: itxn_submit",
              "142: itxn LastLog",
              "143: dup",
              "144: extract 4 0",
              "145: swap",
              "146: extract 0 4",
              "147: bytec_0",
              "148: ==",
              "149: assert",
              "150: btoi",
              "153: retsub"
            ],
            [
              "38: itob",
              "39: bytec_0",
              "40: swap",
              "41: concat",
              "42: log",
              "43: intc_1",
              "44: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "63: main_bare_routing@7:",
              "66: txn OnCompletion",
              "67: bnz main_after_if_else@11"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 4,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "46: main_increment_via_inner_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "54: callsub increment_via_inner"
            ],
            [
              "76: increment_via_inner:",
              "83: itxn_begin",
              "86: pushint 1717",
              "87: itxn_field ApplicationID",
              "94: bytec_1",
              "95: itxn_field ApplicationArgs",
              "96: intc_2",
              "97: itxn_field TypeEnum",
              "100: intc_0",
              "101: itxn_field Fee",
              "108: itxn_submit",
              "109: itxn LastLog",
              "110: dup",
              "111: extract 4 0",
              "112: swap",
              "113: extract 0 4",
              "114: bytec_0",
              "115: ==",
              "116: assert",
              "117: btoi",
              "120: retsub"
            ],
            [
              "55: itob",
              "56: bytec_0",
              "57: swap",
              "58: concat",
              "59: log",
              "60: intc_1",
              "61: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "22: main_increment_via_inner_with_arg_route@4:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "32: txna ApplicationArgs 1",
              "33: btoi",
              "34: txnas Applications",
              "37: callsub increment_via_inner_with_arg"
            ],
            [
              "124: increment_via_inner_with_arg:",
              "128: proto 1 1",
              "132: itxn_begin",
              "133: frame_dig -1",
              "134: itxn_field ApplicationID",
              "135: bytec_1",
              "136: itxn_field ApplicationArgs",
              "137: intc_2",
              "138: itxn_field TypeEnum",
              "139: intc_0",
              "140: itxn_field Fee",
              "141: itxn_submit",
              "142: itxn LastLog",
              "143: dup",
              "144: extract 4 0",
              "145: swap",
              "146: extract 0 4",
              "147: bytec_0",
              "148: ==",
              "149: assert",
              "150: btoi",
              "153: retsub"
            ],
            [
              "38: itob",
              "39: bytec_0",
              "40: swap",
              "41: concat",
              "42: log",
              "43: intc_1",
              "44: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "63: main_bare_routing@7:",
              "66: txn OnCompletion",
              "67: bnz main_after_if_else@11"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "63: main_bare_routing@7:",
              "66: txn OnCompletion",
              "67: bnz main_after_if_else@11"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "63: main_bare_routing@7:",
              "66: txn OnCompletion",
              "67: bnz main_after_if_else@11"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 4,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "46: main_increment_via_inner_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "54: callsub increment_via_inner"
            ],
            [
              "76: increment_via_inner:",
              "83: itxn_begin",
              "86: pushint 1717",
              "87: itxn_field ApplicationID",
              "94: bytec_1",
              "95: itxn_field ApplicationArgs",
              "96: intc_2",
              "97: itxn_field TypeEnum",
              "100: intc_0",
              "101: itxn_field Fee",
              "108: itxn_submit",
              "109: itxn LastLog",
              "110: dup",
              "111: extract 4 0",
              "112: swap",
              "113: extract 0 4",
              "114: bytec_0",
              "115: ==",
              "116: assert",
              "117: btoi",
              "120: retsub"
            ],
            [
              "55: itob",
              "56: bytec_0",
              "57: swap",
              "58: concat",
              "59: log",
              "60: intc_1",
              "61: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "22: main_increment_via_inner_with_arg_route@4:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "32: txna ApplicationArgs 1",
              "33: btoi",
              "34: txnas Applications",
              "37: callsub increment_via_inner_with_arg"
            ],
            [
              "124: increment_via_inner_with_arg:",
              "128: proto 1 1",
              "132: itxn_begin",
              "133: frame_dig -1",
              "134: itxn_field ApplicationID",
              "135: bytec_1",
              "136: itxn_field ApplicationArgs",
              "137: intc_2",
              "138: itxn_field TypeEnum",
              "139: intc_0",
              "140: itxn_field Fee",
              "141: itxn_submit",
              "142: itxn LastLog",
              "143: dup",
              "144: extract 4 0",
              "145: swap",
              "146: extract 0 4",
              "147: bytec_0",
              "148: ==",
              "149: assert",
              "150: btoi",
              "153: retsub"
            ],
            [
              "38: itob",
              "39: bytec_0",
              "40: swap",
              "41: concat",
              "42: log",
              "43: intc_1",
              "44: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "63: main_bare_routing@7:",
              "66: txn OnCompletion",
              "67: bnz main_after_if_else@11"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 4,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "46: main_increment_via_inner_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "54: callsub increment_via_inner"
            ],
            [
              "76: increment_via_inner:",
              "83: itxn_begin",
              "86: pushint 1717",
              "87: itxn_field ApplicationID",
              "94: bytec_1",
              "95: itxn_field ApplicationArgs",
              "96: intc_2",
              "97: itxn_field TypeEnum",
              "100: intc_0",
              "101: itxn_field Fee",
              "108: itxn_submit",
              "109: itxn LastLog",
              "110: dup",
              "111: extract 4 0",
              "112: swap",
              "113: extract 0 4",
              "114: bytec_0",
              "115: ==",
              "116: assert",
              "117: btoi",
              "120: retsub"
            ],
            [
              "55: itob",
              "56: bytec_0",
              "57: swap",
              "58: concat",
              "59: log",
              "60: intc_1",
              "61: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "22: main_increment_via_inner_with_arg_route@4:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "32: txna ApplicationArgs 1",
              "33: btoi",
              "34: txnas Applications",
              "37: callsub increment_via_inner_with_arg"
            ],
            [
              "124: increment_via_inner_with_arg:",
              "128: proto 1 1",
              "132: itxn_begin",
              "133: frame_dig -1",
              "134: itxn_field ApplicationID",
              "135: bytec_1",
              "136: itxn_field ApplicationArgs",
              "137: intc_2",
              "138: itxn_field TypeEnum",
              "139: intc_0",
              "140: itxn_field Fee",
              "141: itxn_submit",
              "142: itxn LastLog",
              "143: dup",
              "144: extract 4 0",
              "145: swap",
              "146: extract 0 4",
              "147: bytec_0",
              "148: ==",
              "149: assert",
              "150: btoi",
              "153: retsub"
            ],
            [
              "38: itob",
              "39: bytec_0",
              "40: swap",
              "41: concat",
              "42: log",
              "43: intc_1",
              "44: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "63: main_bare_routing@7:",
              "66: txn OnCompletion",
              "67: bnz main_after_if_else@11"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "46: main_increment_via_inner_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "54: callsub increment_via_inner"
            ],
            [
              "76: increment_via_inner:",
              "83: itxn_begin",
              "86: pushint 1717",
              "87: itxn_field ApplicationID",
              "94: bytec_1",
              "95: itxn_field ApplicationArgs",
              "96: intc_2",
              "97: itxn_field TypeEnum",
              "100: intc_0",
              "101: itxn_field Fee",
              "108: itxn_submit",
              "109: itxn LastLog",
              "110: dup",
              "111: extract 4 0",
              "112: swap",
              "113: extract 0 4",
              "114: bytec_0",
              "115: ==",
              "116: assert",
              "117: btoi",
              "120: retsub"
            ],
            [
              "55: itob",
              "56: bytec_0",
              "57: swap",
              "58: concat",
              "59: log",
              "60: intc_1",
              "61: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "22: main_increment_via_inner_with_arg_route@4:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "32: txna ApplicationArgs 1",
              "33: btoi",
              "34: txnas Applications",
              "37: callsub increment_via_inner_with_arg"
            ],
            [
              "124: increment_via_inner_with_arg:",
              "128: proto 1 1",
              "132: itxn_begin",
              "133: frame_dig -1",
              "134: itxn_field ApplicationID",
              "135: bytec_1",
              "136: itxn_field ApplicationArgs",
              "137: intc_2",
              "138: itxn_field TypeEnum",
              "139: intc_0",
              "140: itxn_field Fee",
              "141: itxn_submit",
              "142: itxn LastLog",
              "143: dup",
              "144: extract 4 0",
              "145: swap",
              "146: extract 0 4",
              "147: bytec_0",
              "148: ==",
              "149: assert",
              "150: btoi",
              "153: retsub"
            ],
            [
              "38: itob",
              "39: bytec_0",
              "40: swap",
              "41: concat",
              "42: log",
              "43: intc_1",
              "44: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "63: main_bare_routing@7:",
              "66: txn OnCompletion",
              "67: bnz main_after_if_else@11"
            ],
            [
              "68: txn ApplicationID",
              "69: !",
              "70: assert",
              "71: intc_1",
              "72: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "63: main_bare_routing@7:",
              "66: txn OnCompletion",
              "67: bnz main_after_if_else@11"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "46: main_increment_via_inner_route@3:",
              "49: txn OnCompletion",
              "50: !",
              "51: assert",
              "52: txn ApplicationID",
              "53: assert",
              "54: callsub increment_via_inner"
            ],
            [
              "76: increment_via_inner:",
              "83: itxn_begin",
              "86: pushint 1717",
              "87: itxn_field ApplicationID",
              "94: bytec_1",
              "95: itxn_field ApplicationArgs",
              "96: intc_2",
              "97: itxn_field TypeEnum",
              "100: intc_0",
              "101: itxn_field Fee",
              "108: itxn_submit",
              "109: itxn LastLog",
              "110: dup",
              "111: extract 4 0",
              "112: swap",
              "113: extract 0 4",
              "114: bytec_0",
              "115: ==",
              "116: assert",
              "117: btoi",
              "120: retsub"
            ],
            [
              "55: itob",
              "56: bytec_0",
              "57: swap",
              "58: concat",
              "59: log",
              "60: intc_1",
              "61: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xd06846a9 0x06c48686",
              "13: txna ApplicationArgs 0",
              "14: match main_increment_via_inner_route@3 main_increment_via_inner_with_arg_route@4"
            ],
            [
              "22: main_increment_via_inner_with_arg_route@4:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "32: txna ApplicationArgs 1",
              "33: btoi",
              "34: txnas Applications",
              "37: callsub increment_via_inner_with_arg"
            ],
            [
              "124: increment_via_inner_with_arg:",
              "128: proto 1 1",
              "132: itxn_begin",
              "133: frame_dig -1",
              "134: itxn_field ApplicationID",
              "135: bytec_1",
              "136: itxn_field ApplicationArgs",
              "137: intc_2",
              "138: itxn_field TypeEnum",
              "139: intc_0",
              "140: itxn_field Fee",
              "141: itxn_submit",
              "142: itxn LastLog",
              "143: dup",
              "144: extract 4 0",
              "145: swap",
              "146: extract 0 4",
              "147: bytec_0",
              "148: ==",
              "149: assert",
              "150: btoi",
              "153: retsub"
            ],
            [
              "38: itob",
              "39: bytec_0",
              "40: swap",
              "41: concat",
              "42: log",
              "43: intc_1",
              "44: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "63: main_bare_routing@7:",
              "66: txn OnCompletion",
              "67: bnz main_after_if_else@11"
            ],
            [
              "68: txn ApplicationID",
              "69: !",
              "70: assert",
              "71: intc_1",
              "72: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 6",
              "7: bytecblock 0x151f7c75 0x4a325901",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "63: main_bare_routing@7:",
              "66: txn OnCompletion",
              "67: bnz main_after_if_else@11"
            ],
            [
              "16: main_after_if_else@11:",
              "19: intc_0",
              "20: return"
            ]
          ]
        }
      ]
    }
  ]
}