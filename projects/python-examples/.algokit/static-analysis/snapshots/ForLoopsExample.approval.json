{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 1,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 4 -> 6 -> 7 -> 9 -> 10 -> 12",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0",
              "9: txn NumAppArgs",
              "10: bz main___algopy_default_create@5"
            ],
            [
              "11: pushbytes 0x91d632fb",
              "12: txna ApplicationArgs 0",
              "13: match main_for_loop_route@3"
            ],
            [
              "16: main_for_loop_route@3:",
              "20: txn OnCompletion",
              "21: !",
              "22: txn ApplicationID",
              "23: &&",
              "24: assert",
              "25: b for_loop"
            ],
            [
              "37: for_loop:",
              "40: pushbytess \"\" 0x00000000",
              "43: pushint 3",
              "44: intc_1"
            ],
            [
              "46: for_loop_for_body@3:",
              "49: dig 1",
              "50: dup",
              "51: itob",
              "52: dup",
              "53: bitlen",
              "54: pushint 8",
              "55: <=",
              "56: assert",
              "57: extract 7 1",
              "58: dig 4",
              "59: dig 3",
              "60: uncover 2",
              "61: replace3",
              "62: bury 4",
              "65: bz for_loop_after_for@6"
            ],
            [
              "76: for_loop_after_for@6:",
              "79: intc_1",
              "80: bury 4",
              "83: intc_0",
              "84: bury 2"
            ],
            [
              "86: for_loop_for_header@7:",
              "89: dig 1",
              "90: pushint 5",
              "91: <",
              "92: bz for_loop_after_for@10"
            ],
            [
              "108: for_loop_after_for@10:",
              "111: dig 3",
              "112: pushint 10",
              "113: ==",
              "114: assert",
              "118: pushbytes 0x151f7c75",
              "119: dig 3",
              "120: concat",
              "121: log",
              "122: intc_0",
              "123: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 1,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 4 -> 6 -> 7 -> 9 -> 10 -> 12",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0",
              "9: txn NumAppArgs",
              "10: bz main___algopy_default_create@5"
            ],
            [
              "11: pushbytes 0x91d632fb",
              "12: txna ApplicationArgs 0",
              "13: match main_for_loop_route@3"
            ],
            [
              "16: main_for_loop_route@3:",
              "20: txn OnCompletion",
              "21: !",
              "22: txn ApplicationID",
              "23: &&",
              "24: assert",
              "25: b for_loop"
            ],
            [
              "37: for_loop:",
              "40: pushbytess \"\" 0x00000000",
              "43: pushint 3",
              "44: intc_1"
            ],
            [
              "46: for_loop_for_body@3:",
              "49: dig 1",
              "50: dup",
              "51: itob",
              "52: dup",
              "53: bitlen",
              "54: pushint 8",
              "55: <=",
              "56: assert",
              "57: extract 7 1",
              "58: dig 4",
              "59: dig 3",
              "60: uncover 2",
              "61: replace3",
              "62: bury 4",
              "65: bz for_loop_after_for@6"
            ],
            [
              "76: for_loop_after_for@6:",
              "79: intc_1",
              "80: bury 4",
              "83: intc_0",
              "84: bury 2"
            ],
            [
              "86: for_loop_for_header@7:",
              "89: dig 1",
              "90: pushint 5",
              "91: <",
              "92: bz for_loop_after_for@10"
            ],
            [
              "108: for_loop_after_for@10:",
              "111: dig 3",
              "112: pushint 10",
              "113: ==",
              "114: assert",
              "118: pushbytes 0x151f7c75",
              "119: dig 3",
              "120: concat",
              "121: log",
              "122: intc_0",
              "123: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 1,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 4 -> 6 -> 7 -> 9 -> 10 -> 12",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0",
              "9: txn NumAppArgs",
              "10: bz main___algopy_default_create@5"
            ],
            [
              "11: pushbytes 0x91d632fb",
              "12: txna ApplicationArgs 0",
              "13: match main_for_loop_route@3"
            ],
            [
              "16: main_for_loop_route@3:",
              "20: txn OnCompletion",
              "21: !",
              "22: txn ApplicationID",
              "23: &&",
              "24: assert",
              "25: b for_loop"
            ],
            [
              "37: for_loop:",
              "40: pushbytess \"\" 0x00000000",
              "43: pushint 3",
              "44: intc_1"
            ],
            [
              "46: for_loop_for_body@3:",
              "49: dig 1",
              "50: dup",
              "51: itob",
              "52: dup",
              "53: bitlen",
              "54: pushint 8",
              "55: <=",
              "56: assert",
              "57: extract 7 1",
              "58: dig 4",
              "59: dig 3",
              "60: uncover 2",
              "61: replace3",
              "62: bury 4",
              "65: bz for_loop_after_for@6"
            ],
            [
              "76: for_loop_after_for@6:",
              "79: intc_1",
              "80: bury 4",
              "83: intc_0",
              "84: bury 2"
            ],
            [
              "86: for_loop_for_header@7:",
              "89: dig 1",
              "90: pushint 5",
              "91: <",
              "92: bz for_loop_after_for@10"
            ],
            [
              "108: for_loop_after_for@10:",
              "111: dig 3",
              "112: pushint 10",
              "113: ==",
              "114: assert",
              "118: pushbytes 0x151f7c75",
              "119: dig 3",
              "120: concat",
              "121: log",
              "122: intc_0",
              "123: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 1,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 4 -> 6 -> 7 -> 9 -> 10 -> 12",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0",
              "9: txn NumAppArgs",
              "10: bz main___algopy_default_create@5"
            ],
            [
              "11: pushbytes 0x91d632fb",
              "12: txna ApplicationArgs 0",
              "13: match main_for_loop_route@3"
            ],
            [
              "16: main_for_loop_route@3:",
              "20: txn OnCompletion",
              "21: !",
              "22: txn ApplicationID",
              "23: &&",
              "24: assert",
              "25: b for_loop"
            ],
            [
              "37: for_loop:",
              "40: pushbytess \"\" 0x00000000",
              "43: pushint 3",
              "44: intc_1"
            ],
            [
              "46: for_loop_for_body@3:",
              "49: dig 1",
              "50: dup",
              "51: itob",
              "52: dup",
              "53: bitlen",
              "54: pushint 8",
              "55: <=",
              "56: assert",
              "57: extract 7 1",
              "58: dig 4",
              "59: dig 3",
              "60: uncover 2",
              "61: replace3",
              "62: bury 4",
              "65: bz for_loop_after_for@6"
            ],
            [
              "76: for_loop_after_for@6:",
              "79: intc_1",
              "80: bury 4",
              "83: intc_0",
              "84: bury 2"
            ],
            [
              "86: for_loop_for_header@7:",
              "89: dig 1",
              "90: pushint 5",
              "91: <",
              "92: bz for_loop_after_for@10"
            ],
            [
              "108: for_loop_after_for@10:",
              "111: dig 3",
              "112: pushint 10",
              "113: ==",
              "114: assert",
              "118: pushbytes 0x151f7c75",
              "119: dig 3",
              "120: concat",
              "121: log",
              "122: intc_0",
              "123: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 4 -> 6 -> 7 -> 9 -> 10 -> 12",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0",
              "9: txn NumAppArgs",
              "10: bz main___algopy_default_create@5"
            ],
            [
              "11: pushbytes 0x91d632fb",
              "12: txna ApplicationArgs 0",
              "13: match main_for_loop_route@3"
            ],
            [
              "16: main_for_loop_route@3:",
              "20: txn OnCompletion",
              "21: !",
              "22: txn ApplicationID",
              "23: &&",
              "24: assert",
              "25: b for_loop"
            ],
            [
              "37: for_loop:",
              "40: pushbytess \"\" 0x00000000",
              "43: pushint 3",
              "44: intc_1"
            ],
            [
              "46: for_loop_for_body@3:",
              "49: dig 1",
              "50: dup",
              "51: itob",
              "52: dup",
              "53: bitlen",
              "54: pushint 8",
              "55: <=",
              "56: assert",
              "57: extract 7 1",
              "58: dig 4",
              "59: dig 3",
              "60: uncover 2",
              "61: replace3",
              "62: bury 4",
              "65: bz for_loop_after_for@6"
            ],
            [
              "76: for_loop_after_for@6:",
              "79: intc_1",
              "80: bury 4",
              "83: intc_0",
              "84: bury 2"
            ],
            [
              "86: for_loop_for_header@7:",
              "89: dig 1",
              "90: pushint 5",
              "91: <",
              "92: bz for_loop_after_for@10"
            ],
            [
              "108: for_loop_after_for@10:",
              "111: dig 3",
              "112: pushint 10",
              "113: ==",
              "114: assert",
              "118: pushbytes 0x151f7c75",
              "119: dig 3",
              "120: concat",
              "121: log",
              "122: intc_0",
              "123: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 5",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0",
              "9: txn NumAppArgs",
              "10: bz main___algopy_default_create@5"
            ],
            [
              "27: main___algopy_default_create@5:",
              "28: txn OnCompletion",
              "29: !",
              "30: txn ApplicationID",
              "31: !",
              "32: &&",
              "33: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 4 -> 6 -> 7 -> 9 -> 10 -> 12",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0",
              "9: txn NumAppArgs",
              "10: bz main___algopy_default_create@5"
            ],
            [
              "11: pushbytes 0x91d632fb",
              "12: txna ApplicationArgs 0",
              "13: match main_for_loop_route@3"
            ],
            [
              "16: main_for_loop_route@3:",
              "20: txn OnCompletion",
              "21: !",
              "22: txn ApplicationID",
              "23: &&",
              "24: assert",
              "25: b for_loop"
            ],
            [
              "37: for_loop:",
              "40: pushbytess \"\" 0x00000000",
              "43: pushint 3",
              "44: intc_1"
            ],
            [
              "46: for_loop_for_body@3:",
              "49: dig 1",
              "50: dup",
              "51: itob",
              "52: dup",
              "53: bitlen",
              "54: pushint 8",
              "55: <=",
              "56: assert",
              "57: extract 7 1",
              "58: dig 4",
              "59: dig 3",
              "60: uncover 2",
              "61: replace3",
              "62: bury 4",
              "65: bz for_loop_after_for@6"
            ],
            [
              "76: for_loop_after_for@6:",
              "79: intc_1",
              "80: bury 4",
              "83: intc_0",
              "84: bury 2"
            ],
            [
              "86: for_loop_for_header@7:",
              "89: dig 1",
              "90: pushint 5",
              "91: <",
              "92: bz for_loop_after_for@10"
            ],
            [
              "108: for_loop_after_for@10:",
              "111: dig 3",
              "112: pushint 10",
              "113: ==",
              "114: assert",
              "118: pushbytes 0x151f7c75",
              "119: dig 3",
              "120: concat",
              "121: log",
              "122: intc_0",
              "123: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 5",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0",
              "9: txn NumAppArgs",
              "10: bz main___algopy_default_create@5"
            ],
            [
              "27: main___algopy_default_create@5:",
              "28: txn OnCompletion",
              "29: !",
              "30: txn ApplicationID",
              "31: !",
              "32: &&",
              "33: return"
            ]
          ]
        }
      ]
    }
  ]
}