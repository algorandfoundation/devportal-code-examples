{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xa65e7b96 0x3313495a",
              "13: txna ApplicationArgs 0",
              "14: match main_get_asset_balance_route@3 main_get_asset_balance_with_arg_route@4"
            ],
            [
              "49: main_get_asset_balance_route@3:",
              "52: txn OnCompletion",
              "53: !",
              "54: assert",
              "55: txn ApplicationID",
              "56: assert",
              "57: callsub get_asset_balance"
            ],
            [
              "79: get_asset_balance:",
              "84: bytec_1",
              "87: intc_1",
              "90: asset_holding_get AssetBalance",
              "91: bury 1",
              "92: assert",
              "97: bytec_1",
              "100: intc_1",
              "103: asset_holding_get AssetBalance",
              "104: assert",
              "105: retsub"
            ],
            [
              "58: itob",
              "59: bytec_0",
              "60: swap",
              "61: concat",
              "62: log",
              "63: intc_0",
              "64: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xa65e7b96 0x3313495a",
              "13: txna ApplicationArgs 0",
              "14: match main_get_asset_balance_route@3 main_get_asset_balance_with_arg_route@4"
            ],
            [
              "22: main_get_asset_balance_with_arg_route@4:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "32: txna ApplicationArgs 1",
              "33: btoi",
              "34: txnas Accounts",
              "35: txna ApplicationArgs 2",
              "36: btoi",
              "37: txnas Assets",
              "40: callsub get_asset_balance_with_arg"
            ],
            [
              "109: get_asset_balance_with_arg:",
              "113: proto 2 1",
              "116: frame_dig -2",
              "117: frame_dig -1",
              "118: asset_holding_get AssetBalance",
              "119: bury 1",
              "120: assert",
              "124: frame_dig -2",
              "125: frame_dig -1",
              "126: asset_holding_get AssetBalance",
              "127: assert",
              "128: retsub"
            ],
            [
              "41: itob",
              "42: bytec_0",
              "43: swap",
              "44: concat",
              "45: log",
              "46: intc_0",
              "47: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xa65e7b96 0x3313495a",
              "13: txna ApplicationArgs 0",
              "14: match main_get_asset_balance_route@3 main_get_asset_balance_with_arg_route@4"
            ],
            [
              "49: main_get_asset_balance_route@3:",
              "52: txn OnCompletion",
              "53: !",
              "54: assert",
              "55: txn ApplicationID",
              "56: assert",
              "57: callsub get_asset_balance"
            ],
            [
              "79: get_asset_balance:",
              "84: bytec_1",
              "87: intc_1",
              "90: asset_holding_get AssetBalance",
              "91: bury 1",
              "92: assert",
              "97: bytec_1",
              "100: intc_1",
              "103: asset_holding_get AssetBalance",
              "104: assert",
              "105: retsub"
            ],
            [
              "58: itob",
              "59: bytec_0",
              "60: swap",
              "61: concat",
              "62: log",
              "63: intc_0",
              "64: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xa65e7b96 0x3313495a",
              "13: txna ApplicationArgs 0",
              "14: match main_get_asset_balance_route@3 main_get_asset_balance_with_arg_route@4"
            ],
            [
              "22: main_get_asset_balance_with_arg_route@4:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "32: txna ApplicationArgs 1",
              "33: btoi",
              "34: txnas Accounts",
              "35: txna ApplicationArgs 2",
              "36: btoi",
              "37: txnas Assets",
              "40: callsub get_asset_balance_with_arg"
            ],
            [
              "109: get_asset_balance_with_arg:",
              "113: proto 2 1",
              "116: frame_dig -2",
              "117: frame_dig -1",
              "118: asset_holding_get AssetBalance",
              "119: bury 1",
              "120: assert",
              "124: frame_dig -2",
              "125: frame_dig -1",
              "126: asset_holding_get AssetBalance",
              "127: assert",
              "128: retsub"
            ],
            [
              "41: itob",
              "42: bytec_0",
              "43: swap",
              "44: concat",
              "45: log",
              "46: intc_0",
              "47: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xa65e7b96 0x3313495a",
              "13: txna ApplicationArgs 0",
              "14: match main_get_asset_balance_route@3 main_get_asset_balance_with_arg_route@4"
            ],
            [
              "49: main_get_asset_balance_route@3:",
              "52: txn OnCompletion",
              "53: !",
              "54: assert",
              "55: txn ApplicationID",
              "56: assert",
              "57: callsub get_asset_balance"
            ],
            [
              "79: get_asset_balance:",
              "84: bytec_1",
              "87: intc_1",
              "90: asset_holding_get AssetBalance",
              "91: bury 1",
              "92: assert",
              "97: bytec_1",
              "100: intc_1",
              "103: asset_holding_get AssetBalance",
              "104: assert",
              "105: retsub"
            ],
            [
              "58: itob",
              "59: bytec_0",
              "60: swap",
              "61: concat",
              "62: log",
              "63: intc_0",
              "64: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xa65e7b96 0x3313495a",
              "13: txna ApplicationArgs 0",
              "14: match main_get_asset_balance_route@3 main_get_asset_balance_with_arg_route@4"
            ],
            [
              "22: main_get_asset_balance_with_arg_route@4:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "32: txna ApplicationArgs 1",
              "33: btoi",
              "34: txnas Accounts",
              "35: txna ApplicationArgs 2",
              "36: btoi",
              "37: txnas Assets",
              "40: callsub get_asset_balance_with_arg"
            ],
            [
              "109: get_asset_balance_with_arg:",
              "113: proto 2 1",
              "116: frame_dig -2",
              "117: frame_dig -1",
              "118: asset_holding_get AssetBalance",
              "119: bury 1",
              "120: assert",
              "124: frame_dig -2",
              "125: frame_dig -1",
              "126: asset_holding_get AssetBalance",
              "127: assert",
              "128: retsub"
            ],
            [
              "41: itob",
              "42: bytec_0",
              "43: swap",
              "44: concat",
              "45: log",
              "46: intc_0",
              "47: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xa65e7b96 0x3313495a",
              "13: txna ApplicationArgs 0",
              "14: match main_get_asset_balance_route@3 main_get_asset_balance_with_arg_route@4"
            ],
            [
              "49: main_get_asset_balance_route@3:",
              "52: txn OnCompletion",
              "53: !",
              "54: assert",
              "55: txn ApplicationID",
              "56: assert",
              "57: callsub get_asset_balance"
            ],
            [
              "79: get_asset_balance:",
              "84: bytec_1",
              "87: intc_1",
              "90: asset_holding_get AssetBalance",
              "91: bury 1",
              "92: assert",
              "97: bytec_1",
              "100: intc_1",
              "103: asset_holding_get AssetBalance",
              "104: assert",
              "105: retsub"
            ],
            [
              "58: itob",
              "59: bytec_0",
              "60: swap",
              "61: concat",
              "62: log",
              "63: intc_0",
              "64: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xa65e7b96 0x3313495a",
              "13: txna ApplicationArgs 0",
              "14: match main_get_asset_balance_route@3 main_get_asset_balance_with_arg_route@4"
            ],
            [
              "22: main_get_asset_balance_with_arg_route@4:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "32: txna ApplicationArgs 1",
              "33: btoi",
              "34: txnas Accounts",
              "35: txna ApplicationArgs 2",
              "36: btoi",
              "37: txnas Assets",
              "40: callsub get_asset_balance_with_arg"
            ],
            [
              "109: get_asset_balance_with_arg:",
              "113: proto 2 1",
              "116: frame_dig -2",
              "117: frame_dig -1",
              "118: asset_holding_get AssetBalance",
              "119: bury 1",
              "120: assert",
              "124: frame_dig -2",
              "125: frame_dig -1",
              "126: asset_holding_get AssetBalance",
              "127: assert",
              "128: retsub"
            ],
            [
              "41: itob",
              "42: bytec_0",
              "43: swap",
              "44: concat",
              "45: log",
              "46: intc_0",
              "47: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 3,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xa65e7b96 0x3313495a",
              "13: txna ApplicationArgs 0",
              "14: match main_get_asset_balance_route@3 main_get_asset_balance_with_arg_route@4"
            ],
            [
              "49: main_get_asset_balance_route@3:",
              "52: txn OnCompletion",
              "53: !",
              "54: assert",
              "55: txn ApplicationID",
              "56: assert",
              "57: callsub get_asset_balance"
            ],
            [
              "79: get_asset_balance:",
              "84: bytec_1",
              "87: intc_1",
              "90: asset_holding_get AssetBalance",
              "91: bury 1",
              "92: assert",
              "97: bytec_1",
              "100: intc_1",
              "103: asset_holding_get AssetBalance",
              "104: assert",
              "105: retsub"
            ],
            [
              "58: itob",
              "59: bytec_0",
              "60: swap",
              "61: concat",
              "62: log",
              "63: intc_0",
              "64: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xa65e7b96 0x3313495a",
              "13: txna ApplicationArgs 0",
              "14: match main_get_asset_balance_route@3 main_get_asset_balance_with_arg_route@4"
            ],
            [
              "22: main_get_asset_balance_with_arg_route@4:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "32: txna ApplicationArgs 1",
              "33: btoi",
              "34: txnas Accounts",
              "35: txna ApplicationArgs 2",
              "36: btoi",
              "37: txnas Assets",
              "40: callsub get_asset_balance_with_arg"
            ],
            [
              "109: get_asset_balance_with_arg:",
              "113: proto 2 1",
              "116: frame_dig -2",
              "117: frame_dig -1",
              "118: asset_holding_get AssetBalance",
              "119: bury 1",
              "120: assert",
              "124: frame_dig -2",
              "125: frame_dig -1",
              "126: asset_holding_get AssetBalance",
              "127: assert",
              "128: retsub"
            ],
            [
              "41: itob",
              "42: bytec_0",
              "43: swap",
              "44: concat",
              "45: log",
              "46: intc_0",
              "47: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "66: main_bare_routing@7:",
              "69: txn OnCompletion",
              "70: bnz main_after_if_else@11"
            ],
            [
              "71: txn ApplicationID",
              "72: !",
              "73: assert",
              "74: intc_0",
              "75: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 3,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xa65e7b96 0x3313495a",
              "13: txna ApplicationArgs 0",
              "14: match main_get_asset_balance_route@3 main_get_asset_balance_with_arg_route@4"
            ],
            [
              "49: main_get_asset_balance_route@3:",
              "52: txn OnCompletion",
              "53: !",
              "54: assert",
              "55: txn ApplicationID",
              "56: assert",
              "57: callsub get_asset_balance"
            ],
            [
              "79: get_asset_balance:",
              "84: bytec_1",
              "87: intc_1",
              "90: asset_holding_get AssetBalance",
              "91: bury 1",
              "92: assert",
              "97: bytec_1",
              "100: intc_1",
              "103: asset_holding_get AssetBalance",
              "104: assert",
              "105: retsub"
            ],
            [
              "58: itob",
              "59: bytec_0",
              "60: swap",
              "61: concat",
              "62: log",
              "63: intc_0",
              "64: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0xa65e7b96 0x3313495a",
              "13: txna ApplicationArgs 0",
              "14: match main_get_asset_balance_route@3 main_get_asset_balance_with_arg_route@4"
            ],
            [
              "22: main_get_asset_balance_with_arg_route@4:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "32: txna ApplicationArgs 1",
              "33: btoi",
              "34: txnas Accounts",
              "35: txna ApplicationArgs 2",
              "36: btoi",
              "37: txnas Assets",
              "40: callsub get_asset_balance_with_arg"
            ],
            [
              "109: get_asset_balance_with_arg:",
              "113: proto 2 1",
              "116: frame_dig -2",
              "117: frame_dig -1",
              "118: asset_holding_get AssetBalance",
              "119: bury 1",
              "120: assert",
              "124: frame_dig -2",
              "125: frame_dig -1",
              "126: asset_holding_get AssetBalance",
              "127: assert",
              "128: retsub"
            ],
            [
              "41: itob",
              "42: bytec_0",
              "43: swap",
              "44: concat",
              "45: log",
              "46: intc_0",
              "47: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1185",
              "7: bytecblock 0x151f7c75 0xb30e5e15696ab1a0bcaafe1f5ea07e767eba8c3a0fbd99dc8062d7a6df964e62",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "66: main_bare_routing@7:",
              "69: txn OnCompletion",
              "70: bnz main_after_if_else@11"
            ],
            [
              "71: txn ApplicationID",
              "72: !",
              "73: assert",
              "74: intc_0",
              "75: return"
            ]
          ]
        }
      ]
    }
  ]
}