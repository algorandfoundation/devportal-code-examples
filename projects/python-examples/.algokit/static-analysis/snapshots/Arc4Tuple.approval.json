{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 4,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 12 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "53: main_add_contact_info_route@5:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "63: txna ApplicationArgs 1",
              "66: callsub add_contact_info"
            ],
            [
              "88: add_contact_info:",
              "92: proto 1 1",
              "95: frame_dig -1",
              "96: intc_0",
              "97: extract_uint16",
              "98: frame_dig -1",
              "99: pushint 2",
              "100: extract_uint16",
              "101: frame_dig -1",
              "102: uncover 2",
              "103: dig 2",
              "104: substring3",
              "105: frame_dig -1",
              "106: len",
              "107: frame_dig -1",
              "108: uncover 3",
              "109: uncover 2",
              "110: substring3",
              "111: frame_dig -1",
              "112: extract 4 8",
              "115: uncover 2",
              "116: extract 2 0",
              "117: pushbytes \"Alice\"",
              "118: ==",
              "119: assert",
              "122: swap",
              "123: extract 2 0",
              "124: pushbytes \"alice@something.com\"",
              "125: ==",
              "126: assert",
              "129: pushbytes 0x00000000211d1ae3",
              "130: b==",
              "131: assert",
              "134: bytec_0",
              "135: frame_dig -1",
              "136: app_global_put",
              "139: frame_dig -1",
              "142: pushint 4",
              "145: extract_uint64",
              "146: retsub"
            ],
            [
              "67: itob",
              "68: bytec_1",
              "69: swap",
              "70: concat",
              "71: log",
              "72: intc_1",
              "73: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 13 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "37: main_return_contact_route@6:",
              "40: txn OnCompletion",
              "41: !",
              "42: assert",
              "43: txn ApplicationID",
              "44: assert",
              "45: callsub return_contact"
            ],
            [
              "150: return_contact:",
              "153: intc_0",
              "154: bytec_0",
              "155: app_global_get_ex",
              "156: assert",
              "157: retsub"
            ],
            [
              "46: bytec_1",
              "47: swap",
              "48: concat",
              "49: log",
              "50: intc_1",
              "51: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 10 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "75: main_bare_routing@7:",
              "78: txn OnCompletion",
              "79: bnz main_after_if_else@9"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 4,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 12 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "53: main_add_contact_info_route@5:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "63: txna ApplicationArgs 1",
              "66: callsub add_contact_info"
            ],
            [
              "88: add_contact_info:",
              "92: proto 1 1",
              "95: frame_dig -1",
              "96: intc_0",
              "97: extract_uint16",
              "98: frame_dig -1",
              "99: pushint 2",
              "100: extract_uint16",
              "101: frame_dig -1",
              "102: uncover 2",
              "103: dig 2",
              "104: substring3",
              "105: frame_dig -1",
              "106: len",
              "107: frame_dig -1",
              "108: uncover 3",
              "109: uncover 2",
              "110: substring3",
              "111: frame_dig -1",
              "112: extract 4 8",
              "115: uncover 2",
              "116: extract 2 0",
              "117: pushbytes \"Alice\"",
              "118: ==",
              "119: assert",
              "122: swap",
              "123: extract 2 0",
              "124: pushbytes \"alice@something.com\"",
              "125: ==",
              "126: assert",
              "129: pushbytes 0x00000000211d1ae3",
              "130: b==",
              "131: assert",
              "134: bytec_0",
              "135: frame_dig -1",
              "136: app_global_put",
              "139: frame_dig -1",
              "142: pushint 4",
              "145: extract_uint64",
              "146: retsub"
            ],
            [
              "67: itob",
              "68: bytec_1",
              "69: swap",
              "70: concat",
              "71: log",
              "72: intc_1",
              "73: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 13 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "37: main_return_contact_route@6:",
              "40: txn OnCompletion",
              "41: !",
              "42: assert",
              "43: txn ApplicationID",
              "44: assert",
              "45: callsub return_contact"
            ],
            [
              "150: return_contact:",
              "153: intc_0",
              "154: bytec_0",
              "155: app_global_get_ex",
              "156: assert",
              "157: retsub"
            ],
            [
              "46: bytec_1",
              "47: swap",
              "48: concat",
              "49: log",
              "50: intc_1",
              "51: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 10 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "75: main_bare_routing@7:",
              "78: txn OnCompletion",
              "79: bnz main_after_if_else@9"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 4,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 12 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "53: main_add_contact_info_route@5:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "63: txna ApplicationArgs 1",
              "66: callsub add_contact_info"
            ],
            [
              "88: add_contact_info:",
              "92: proto 1 1",
              "95: frame_dig -1",
              "96: intc_0",
              "97: extract_uint16",
              "98: frame_dig -1",
              "99: pushint 2",
              "100: extract_uint16",
              "101: frame_dig -1",
              "102: uncover 2",
              "103: dig 2",
              "104: substring3",
              "105: frame_dig -1",
              "106: len",
              "107: frame_dig -1",
              "108: uncover 3",
              "109: uncover 2",
              "110: substring3",
              "111: frame_dig -1",
              "112: extract 4 8",
              "115: uncover 2",
              "116: extract 2 0",
              "117: pushbytes \"Alice\"",
              "118: ==",
              "119: assert",
              "122: swap",
              "123: extract 2 0",
              "124: pushbytes \"alice@something.com\"",
              "125: ==",
              "126: assert",
              "129: pushbytes 0x00000000211d1ae3",
              "130: b==",
              "131: assert",
              "134: bytec_0",
              "135: frame_dig -1",
              "136: app_global_put",
              "139: frame_dig -1",
              "142: pushint 4",
              "145: extract_uint64",
              "146: retsub"
            ],
            [
              "67: itob",
              "68: bytec_1",
              "69: swap",
              "70: concat",
              "71: log",
              "72: intc_1",
              "73: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 13 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "37: main_return_contact_route@6:",
              "40: txn OnCompletion",
              "41: !",
              "42: assert",
              "43: txn ApplicationID",
              "44: assert",
              "45: callsub return_contact"
            ],
            [
              "150: return_contact:",
              "153: intc_0",
              "154: bytec_0",
              "155: app_global_get_ex",
              "156: assert",
              "157: retsub"
            ],
            [
              "46: bytec_1",
              "47: swap",
              "48: concat",
              "49: log",
              "50: intc_1",
              "51: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 10 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "75: main_bare_routing@7:",
              "78: txn OnCompletion",
              "79: bnz main_after_if_else@9"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 4,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 12 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "53: main_add_contact_info_route@5:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "63: txna ApplicationArgs 1",
              "66: callsub add_contact_info"
            ],
            [
              "88: add_contact_info:",
              "92: proto 1 1",
              "95: frame_dig -1",
              "96: intc_0",
              "97: extract_uint16",
              "98: frame_dig -1",
              "99: pushint 2",
              "100: extract_uint16",
              "101: frame_dig -1",
              "102: uncover 2",
              "103: dig 2",
              "104: substring3",
              "105: frame_dig -1",
              "106: len",
              "107: frame_dig -1",
              "108: uncover 3",
              "109: uncover 2",
              "110: substring3",
              "111: frame_dig -1",
              "112: extract 4 8",
              "115: uncover 2",
              "116: extract 2 0",
              "117: pushbytes \"Alice\"",
              "118: ==",
              "119: assert",
              "122: swap",
              "123: extract 2 0",
              "124: pushbytes \"alice@something.com\"",
              "125: ==",
              "126: assert",
              "129: pushbytes 0x00000000211d1ae3",
              "130: b==",
              "131: assert",
              "134: bytec_0",
              "135: frame_dig -1",
              "136: app_global_put",
              "139: frame_dig -1",
              "142: pushint 4",
              "145: extract_uint64",
              "146: retsub"
            ],
            [
              "67: itob",
              "68: bytec_1",
              "69: swap",
              "70: concat",
              "71: log",
              "72: intc_1",
              "73: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 13 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "37: main_return_contact_route@6:",
              "40: txn OnCompletion",
              "41: !",
              "42: assert",
              "43: txn ApplicationID",
              "44: assert",
              "45: callsub return_contact"
            ],
            [
              "150: return_contact:",
              "153: intc_0",
              "154: bytec_0",
              "155: app_global_get_ex",
              "156: assert",
              "157: retsub"
            ],
            [
              "46: bytec_1",
              "47: swap",
              "48: concat",
              "49: log",
              "50: intc_1",
              "51: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 10 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "75: main_bare_routing@7:",
              "78: txn OnCompletion",
              "79: bnz main_after_if_else@9"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 10,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "15: pushbytes 0x000c000e000000000000000000000000",
              "20: app_global_put"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8 -> 12 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "15: pushbytes 0x000c000e000000000000000000000000",
              "20: app_global_put"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "53: main_add_contact_info_route@5:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "63: txna ApplicationArgs 1",
              "66: callsub add_contact_info"
            ],
            [
              "88: add_contact_info:",
              "92: proto 1 1",
              "95: frame_dig -1",
              "96: intc_0",
              "97: extract_uint16",
              "98: frame_dig -1",
              "99: pushint 2",
              "100: extract_uint16",
              "101: frame_dig -1",
              "102: uncover 2",
              "103: dig 2",
              "104: substring3",
              "105: frame_dig -1",
              "106: len",
              "107: frame_dig -1",
              "108: uncover 3",
              "109: uncover 2",
              "110: substring3",
              "111: frame_dig -1",
              "112: extract 4 8",
              "115: uncover 2",
              "116: extract 2 0",
              "117: pushbytes \"Alice\"",
              "118: ==",
              "119: assert",
              "122: swap",
              "123: extract 2 0",
              "124: pushbytes \"alice@something.com\"",
              "125: ==",
              "126: assert",
              "129: pushbytes 0x00000000211d1ae3",
              "130: b==",
              "131: assert",
              "134: bytec_0",
              "135: frame_dig -1",
              "136: app_global_put",
              "139: frame_dig -1",
              "142: pushint 4",
              "145: extract_uint64",
              "146: retsub"
            ],
            [
              "67: itob",
              "68: bytec_1",
              "69: swap",
              "70: concat",
              "71: log",
              "72: intc_1",
              "73: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 6 -> 13 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "15: pushbytes 0x000c000e000000000000000000000000",
              "20: app_global_put"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "37: main_return_contact_route@6:",
              "40: txn OnCompletion",
              "41: !",
              "42: assert",
              "43: txn ApplicationID",
              "44: assert",
              "45: callsub return_contact"
            ],
            [
              "150: return_contact:",
              "153: intc_0",
              "154: bytec_0",
              "155: app_global_get_ex",
              "156: assert",
              "157: retsub"
            ],
            [
              "46: bytec_1",
              "47: swap",
              "48: concat",
              "49: log",
              "50: intc_1",
              "51: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 10 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "15: pushbytes 0x000c000e000000000000000000000000",
              "20: app_global_put"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "75: main_bare_routing@7:",
              "78: txn OnCompletion",
              "79: bnz main_after_if_else@9"
            ],
            [
              "80: txn ApplicationID",
              "81: !",
              "82: assert",
              "83: intc_1",
              "84: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 10 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "15: pushbytes 0x000c000e000000000000000000000000",
              "20: app_global_put"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "75: main_bare_routing@7:",
              "78: txn OnCompletion",
              "79: bnz main_after_if_else@9"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 12 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "53: main_add_contact_info_route@5:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "63: txna ApplicationArgs 1",
              "66: callsub add_contact_info"
            ],
            [
              "88: add_contact_info:",
              "92: proto 1 1",
              "95: frame_dig -1",
              "96: intc_0",
              "97: extract_uint16",
              "98: frame_dig -1",
              "99: pushint 2",
              "100: extract_uint16",
              "101: frame_dig -1",
              "102: uncover 2",
              "103: dig 2",
              "104: substring3",
              "105: frame_dig -1",
              "106: len",
              "107: frame_dig -1",
              "108: uncover 3",
              "109: uncover 2",
              "110: substring3",
              "111: frame_dig -1",
              "112: extract 4 8",
              "115: uncover 2",
              "116: extract 2 0",
              "117: pushbytes \"Alice\"",
              "118: ==",
              "119: assert",
              "122: swap",
              "123: extract 2 0",
              "124: pushbytes \"alice@something.com\"",
              "125: ==",
              "126: assert",
              "129: pushbytes 0x00000000211d1ae3",
              "130: b==",
              "131: assert",
              "134: bytec_0",
              "135: frame_dig -1",
              "136: app_global_put",
              "139: frame_dig -1",
              "142: pushint 4",
              "145: extract_uint64",
              "146: retsub"
            ],
            [
              "67: itob",
              "68: bytec_1",
              "69: swap",
              "70: concat",
              "71: log",
              "72: intc_1",
              "73: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 13 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "37: main_return_contact_route@6:",
              "40: txn OnCompletion",
              "41: !",
              "42: assert",
              "43: txn ApplicationID",
              "44: assert",
              "45: callsub return_contact"
            ],
            [
              "150: return_contact:",
              "153: intc_0",
              "154: bytec_0",
              "155: app_global_get_ex",
              "156: assert",
              "157: retsub"
            ],
            [
              "46: bytec_1",
              "47: swap",
              "48: concat",
              "49: log",
              "50: intc_1",
              "51: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 10 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "75: main_bare_routing@7:",
              "78: txn OnCompletion",
              "79: bnz main_after_if_else@9"
            ],
            [
              "80: txn ApplicationID",
              "81: !",
              "82: assert",
              "83: intc_1",
              "84: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 10 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "75: main_bare_routing@7:",
              "78: txn OnCompletion",
              "79: bnz main_after_if_else@9"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 10,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "15: pushbytes 0x000c000e000000000000000000000000",
              "20: app_global_put"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8 -> 12 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "15: pushbytes 0x000c000e000000000000000000000000",
              "20: app_global_put"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "53: main_add_contact_info_route@5:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "63: txna ApplicationArgs 1",
              "66: callsub add_contact_info"
            ],
            [
              "88: add_contact_info:",
              "92: proto 1 1",
              "95: frame_dig -1",
              "96: intc_0",
              "97: extract_uint16",
              "98: frame_dig -1",
              "99: pushint 2",
              "100: extract_uint16",
              "101: frame_dig -1",
              "102: uncover 2",
              "103: dig 2",
              "104: substring3",
              "105: frame_dig -1",
              "106: len",
              "107: frame_dig -1",
              "108: uncover 3",
              "109: uncover 2",
              "110: substring3",
              "111: frame_dig -1",
              "112: extract 4 8",
              "115: uncover 2",
              "116: extract 2 0",
              "117: pushbytes \"Alice\"",
              "118: ==",
              "119: assert",
              "122: swap",
              "123: extract 2 0",
              "124: pushbytes \"alice@something.com\"",
              "125: ==",
              "126: assert",
              "129: pushbytes 0x00000000211d1ae3",
              "130: b==",
              "131: assert",
              "134: bytec_0",
              "135: frame_dig -1",
              "136: app_global_put",
              "139: frame_dig -1",
              "142: pushint 4",
              "145: extract_uint64",
              "146: retsub"
            ],
            [
              "67: itob",
              "68: bytec_1",
              "69: swap",
              "70: concat",
              "71: log",
              "72: intc_1",
              "73: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 6 -> 13 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "15: pushbytes 0x000c000e000000000000000000000000",
              "20: app_global_put"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "37: main_return_contact_route@6:",
              "40: txn OnCompletion",
              "41: !",
              "42: assert",
              "43: txn ApplicationID",
              "44: assert",
              "45: callsub return_contact"
            ],
            [
              "150: return_contact:",
              "153: intc_0",
              "154: bytec_0",
              "155: app_global_get_ex",
              "156: assert",
              "157: retsub"
            ],
            [
              "46: bytec_1",
              "47: swap",
              "48: concat",
              "49: log",
              "50: intc_1",
              "51: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 10 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "15: pushbytes 0x000c000e000000000000000000000000",
              "20: app_global_put"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "75: main_bare_routing@7:",
              "78: txn OnCompletion",
              "79: bnz main_after_if_else@9"
            ],
            [
              "80: txn ApplicationID",
              "81: !",
              "82: assert",
              "83: intc_1",
              "84: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 10 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "15: pushbytes 0x000c000e000000000000000000000000",
              "20: app_global_put"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "75: main_bare_routing@7:",
              "78: txn OnCompletion",
              "79: bnz main_after_if_else@9"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 12 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "53: main_add_contact_info_route@5:",
              "56: txn OnCompletion",
              "57: !",
              "58: assert",
              "59: txn ApplicationID",
              "60: assert",
              "63: txna ApplicationArgs 1",
              "66: callsub add_contact_info"
            ],
            [
              "88: add_contact_info:",
              "92: proto 1 1",
              "95: frame_dig -1",
              "96: intc_0",
              "97: extract_uint16",
              "98: frame_dig -1",
              "99: pushint 2",
              "100: extract_uint16",
              "101: frame_dig -1",
              "102: uncover 2",
              "103: dig 2",
              "104: substring3",
              "105: frame_dig -1",
              "106: len",
              "107: frame_dig -1",
              "108: uncover 3",
              "109: uncover 2",
              "110: substring3",
              "111: frame_dig -1",
              "112: extract 4 8",
              "115: uncover 2",
              "116: extract 2 0",
              "117: pushbytes \"Alice\"",
              "118: ==",
              "119: assert",
              "122: swap",
              "123: extract 2 0",
              "124: pushbytes \"alice@something.com\"",
              "125: ==",
              "126: assert",
              "129: pushbytes 0x00000000211d1ae3",
              "130: b==",
              "131: assert",
              "134: bytec_0",
              "135: frame_dig -1",
              "136: app_global_put",
              "139: frame_dig -1",
              "142: pushint 4",
              "145: extract_uint64",
              "146: retsub"
            ],
            [
              "67: itob",
              "68: bytec_1",
              "69: swap",
              "70: concat",
              "71: log",
              "72: intc_1",
              "73: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 13 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "27: pushbytess 0x7f68c13f 0x288dc75f",
              "28: txna ApplicationArgs 0",
              "29: match main_add_contact_info_route@5 main_return_contact_route@6"
            ],
            [
              "37: main_return_contact_route@6:",
              "40: txn OnCompletion",
              "41: !",
              "42: assert",
              "43: txn ApplicationID",
              "44: assert",
              "45: callsub return_contact"
            ],
            [
              "150: return_contact:",
              "153: intc_0",
              "154: bytec_0",
              "155: app_global_get_ex",
              "156: assert",
              "157: retsub"
            ],
            [
              "46: bytec_1",
              "47: swap",
              "48: concat",
              "49: log",
              "50: intc_1",
              "51: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 10 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "75: main_bare_routing@7:",
              "78: txn OnCompletion",
              "79: bnz main_after_if_else@9"
            ],
            [
              "80: txn ApplicationID",
              "81: !",
              "82: assert",
              "83: intc_1",
              "84: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 10 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"contact_info\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "22: main_after_if_else@2:",
              "25: txn NumAppArgs",
              "26: bz main_bare_routing@7"
            ],
            [
              "75: main_bare_routing@7:",
              "78: txn OnCompletion",
              "79: bnz main_after_if_else@9"
            ],
            [
              "31: main_after_if_else@9:",
              "34: intc_0",
              "35: return"
            ]
          ]
        }
      ]
    }
  ]
}