{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 12,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 22 -> 26 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "240: main_get_global_state_route@5:",
              "244: txn OnCompletion",
              "245: !",
              "246: assert",
              "247: txn ApplicationID",
              "248: assert",
              "249: callsub get_global_state"
            ],
            [
              "271: get_global_state:",
              "274: intc_0",
              "275: bytec_1",
              "276: app_global_get_ex",
              "277: intc_0",
              "278: cover 2",
              "279: select",
              "280: retsub"
            ],
            [
              "250: itob",
              "251: bytec_3",
              "252: swap",
              "253: concat",
              "254: log",
              "255: intc_1",
              "256: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20 -> 27 -> 28 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "302: intc_0",
              "303: frame_bury 1"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20 -> 27 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 18 -> 30 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "197: main_get_global_state_example_route@7:",
              "200: txn OnCompletion",
              "201: !",
              "202: assert",
              "203: txn ApplicationID",
              "204: assert",
              "205: callsub get_global_state_example"
            ],
            [
              "316: get_global_state_example:",
              "319: intc_0",
              "320: bytec_1",
              "321: app_global_get_ex",
              "322: intc_0",
              "323: cover 2",
              "324: select",
              "325: intc_3",
              "326: ==",
              "327: assert",
              "330: intc_0",
              "331: bytec 8",
              "332: app_global_get_ex",
              "333: assert",
              "334: intc_2",
              "335: ==",
              "336: assert",
              "339: intc_0",
              "340: bytec 11",
              "341: app_global_get_ex",
              "342: intc_0",
              "343: cover 2",
              "344: select",
              "345: !",
              "346: assert",
              "349: intc_0",
              "350: bytec_2",
              "351: app_global_get_ex",
              "352: pushbytes 0x64656661756c74",
              "353: cover 2",
              "354: select",
              "355: bytec_0",
              "356: ==",
              "357: assert",
              "360: intc_1",
              "361: retsub"
            ],
            [
              "206: bytec 4",
              "207: intc_0",
              "208: uncover 2",
              "209: setbit",
              "210: bytec_3",
              "211: swap",
              "212: concat",
              "213: log",
              "214: intc_1",
              "215: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 31 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "176: main_maybe_global_state_example_route@8:",
              "180: txn OnCompletion",
              "181: !",
              "182: assert",
              "183: txn ApplicationID",
              "184: assert",
              "185: callsub maybe_global_state_example"
            ],
            [
              "365: maybe_global_state_example:",
              "368: intc_0",
              "369: bytec_1",
              "370: app_global_get_ex",
              "373: assert",
              "376: intc_3",
              "377: ==",
              "378: assert",
              "381: intc_0",
              "382: bytec_2",
              "383: app_global_get_ex",
              "386: assert",
              "389: bytec_0",
              "390: ==",
              "391: assert",
              "394: intc_0",
              "395: bytec_2",
              "396: app_global_get_ex",
              "397: bury 1",
              "400: !",
              "401: assert",
              "404: intc_0",
              "405: bytec_2",
              "406: app_global_get_ex",
              "407: assert",
              "408: bytec_0",
              "409: ==",
              "410: assert",
              "413: intc_0",
              "414: bytec 5",
              "415: app_global_get_ex",
              "418: assert",
              "421: assert",
              "424: intc_0",
              "425: bytec 6",
              "426: app_global_get_ex",
              "429: assert",
              "432: intc_2",
              "433: ==",
              "434: assert",
              "437: intc_0",
              "438: bytec 12",
              "439: app_global_get_ex",
              "442: assert",
              "445: intc_2",
              "446: ==",
              "447: assert",
              "450: intc_1",
              "451: retsub"
            ],
            [
              "186: bytec 4",
              "187: intc_0",
              "188: uncover 2",
              "189: setbit",
              "190: bytec_3",
              "191: swap",
              "192: concat",
              "193: log",
              "194: intc_1",
              "195: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 32 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "155: main_check_global_state_example_route@9:",
              "159: txn OnCompletion",
              "160: !",
              "161: assert",
              "162: txn ApplicationID",
              "163: assert",
              "164: callsub check_global_state_example"
            ],
            [
              "455: check_global_state_example:",
              "458: intc_0",
              "459: bytec_1",
              "460: app_global_get_ex",
              "461: assert",
              "462: intc_3",
              "463: ==",
              "464: assert",
              "467: intc_0",
              "468: bytec_2",
              "469: app_global_get_ex",
              "470: assert",
              "471: bytec_0",
              "472: ==",
              "473: assert",
              "476: intc_0",
              "477: bytec 8",
              "478: app_global_get_ex",
              "479: assert",
              "480: intc_2",
              "481: ==",
              "482: assert",
              "485: intc_0",
              "486: bytec 9",
              "487: app_global_get_ex",
              "488: assert",
              "489: bytec_0",
              "490: ==",
              "491: assert",
              "494: intc_0",
              "495: bytec 10",
              "496: app_global_get_ex",
              "497: assert",
              "498: assert",
              "501: intc_0",
              "502: bytec 11",
              "503: app_global_get_ex",
              "504: bury 1",
              "505: !",
              "506: assert",
              "509: intc_0",
              "510: bytec 7",
              "511: app_global_get_ex",
              "512: bury 1",
              "513: !",
              "514: assert",
              "517: intc_0",
              "518: bytec 5",
              "519: app_global_get_ex",
              "520: bury 1",
              "521: !",
              "522: assert",
              "525: intc_0",
              "526: bytec 6",
              "527: app_global_get_ex",
              "528: assert",
              "529: intc_2",
              "530: ==",
              "531: assert",
              "534: intc_0",
              "535: bytec 12",
              "536: app_global_get_ex",
              "537: assert",
              "538: intc_2",
              "539: ==",
              "540: assert",
              "543: intc_0",
              "544: pushbytes \"global_account\"",
              "545: app_global_get_ex",
              "546: assert",
              "547: intc_0",
              "548: assert",
              "549: bytec_0",
              "550: ==",
              "551: assert",
              "554: intc_1",
              "555: retsub"
            ],
            [
              "165: bytec 4",
              "166: intc_0",
              "167: uncover 2",
              "168: setbit",
              "169: bytec_3",
              "170: swap",
              "171: concat",
              "172: log",
              "173: intc_1",
              "174: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 33 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "135: main_set_global_state_route@10:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: extract 2 0",
              "151: callsub set_global_state"
            ],
            [
              "559: set_global_state:",
              "564: proto 1 0",
              "567: bytec_2",
              "568: frame_dig -1",
              "569: app_global_put",
              "570: retsub"
            ],
            [
              "152: intc_1",
              "153: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 34 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "109: main_set_global_state_example_route@11:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: btoi",
              "124: txnas Assets",
              "125: txna ApplicationArgs 3",
              "126: intc_0",
              "127: getbit",
              "131: callsub set_global_state_example"
            ],
            [
              "574: set_global_state_example:",
              "585: proto 3 0",
              "588: bytec 7",
              "589: frame_dig -3",
              "590: app_global_put",
              "593: intc_0",
              "594: bytec 7",
              "595: app_global_get_ex",
              "596: assert",
              "597: frame_dig -3",
              "598: ==",
              "599: assert",
              "602: bytec 5",
              "603: frame_dig -1",
              "604: app_global_put",
              "607: intc_0",
              "608: bytec 5",
              "609: app_global_get_ex",
              "610: assert",
              "611: assert",
              "614: bytec 6",
              "615: frame_dig -2",
              "616: app_global_put",
              "619: intc_0",
              "620: bytec 6",
              "621: app_global_get_ex",
              "622: assert",
              "623: frame_dig -2",
              "624: ==",
              "625: assert",
              "626: retsub"
            ],
            [
              "132: intc_1",
              "133: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 35 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "88: main_del_global_state_route@12:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub del_global_state"
            ],
            [
              "630: del_global_state:",
              "633: bytec_1",
              "634: app_global_del",
              "637: intc_1",
              "638: retsub"
            ],
            [
              "98: bytec 4",
              "99: intc_0",
              "100: uncover 2",
              "101: setbit",
              "102: bytec_3",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 36 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "67: main_del_global_state_example_route@13:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: callsub del_global_state_example"
            ],
            [
              "642: del_global_state_example:",
              "645: bytec 7",
              "646: app_global_del",
              "649: bytec 5",
              "650: app_global_del",
              "653: bytec 6",
              "654: app_global_del",
              "657: intc_1",
              "658: retsub"
            ],
            [
              "77: bytec 4",
              "78: intc_0",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_3",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_1",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 24 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "258: main_bare_routing@14:",
              "261: txn OnCompletion",
              "262: bnz main_after_if_else@16"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 12,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 22 -> 26 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "240: main_get_global_state_route@5:",
              "244: txn OnCompletion",
              "245: !",
              "246: assert",
              "247: txn ApplicationID",
              "248: assert",
              "249: callsub get_global_state"
            ],
            [
              "271: get_global_state:",
              "274: intc_0",
              "275: bytec_1",
              "276: app_global_get_ex",
              "277: intc_0",
              "278: cover 2",
              "279: select",
              "280: retsub"
            ],
            [
              "250: itob",
              "251: bytec_3",
              "252: swap",
              "253: concat",
              "254: log",
              "255: intc_1",
              "256: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20 -> 27 -> 28 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "302: intc_0",
              "303: frame_bury 1"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20 -> 27 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 18 -> 30 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "197: main_get_global_state_example_route@7:",
              "200: txn OnCompletion",
              "201: !",
              "202: assert",
              "203: txn ApplicationID",
              "204: assert",
              "205: callsub get_global_state_example"
            ],
            [
              "316: get_global_state_example:",
              "319: intc_0",
              "320: bytec_1",
              "321: app_global_get_ex",
              "322: intc_0",
              "323: cover 2",
              "324: select",
              "325: intc_3",
              "326: ==",
              "327: assert",
              "330: intc_0",
              "331: bytec 8",
              "332: app_global_get_ex",
              "333: assert",
              "334: intc_2",
              "335: ==",
              "336: assert",
              "339: intc_0",
              "340: bytec 11",
              "341: app_global_get_ex",
              "342: intc_0",
              "343: cover 2",
              "344: select",
              "345: !",
              "346: assert",
              "349: intc_0",
              "350: bytec_2",
              "351: app_global_get_ex",
              "352: pushbytes 0x64656661756c74",
              "353: cover 2",
              "354: select",
              "355: bytec_0",
              "356: ==",
              "357: assert",
              "360: intc_1",
              "361: retsub"
            ],
            [
              "206: bytec 4",
              "207: intc_0",
              "208: uncover 2",
              "209: setbit",
              "210: bytec_3",
              "211: swap",
              "212: concat",
              "213: log",
              "214: intc_1",
              "215: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 31 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "176: main_maybe_global_state_example_route@8:",
              "180: txn OnCompletion",
              "181: !",
              "182: assert",
              "183: txn ApplicationID",
              "184: assert",
              "185: callsub maybe_global_state_example"
            ],
            [
              "365: maybe_global_state_example:",
              "368: intc_0",
              "369: bytec_1",
              "370: app_global_get_ex",
              "373: assert",
              "376: intc_3",
              "377: ==",
              "378: assert",
              "381: intc_0",
              "382: bytec_2",
              "383: app_global_get_ex",
              "386: assert",
              "389: bytec_0",
              "390: ==",
              "391: assert",
              "394: intc_0",
              "395: bytec_2",
              "396: app_global_get_ex",
              "397: bury 1",
              "400: !",
              "401: assert",
              "404: intc_0",
              "405: bytec_2",
              "406: app_global_get_ex",
              "407: assert",
              "408: bytec_0",
              "409: ==",
              "410: assert",
              "413: intc_0",
              "414: bytec 5",
              "415: app_global_get_ex",
              "418: assert",
              "421: assert",
              "424: intc_0",
              "425: bytec 6",
              "426: app_global_get_ex",
              "429: assert",
              "432: intc_2",
              "433: ==",
              "434: assert",
              "437: intc_0",
              "438: bytec 12",
              "439: app_global_get_ex",
              "442: assert",
              "445: intc_2",
              "446: ==",
              "447: assert",
              "450: intc_1",
              "451: retsub"
            ],
            [
              "186: bytec 4",
              "187: intc_0",
              "188: uncover 2",
              "189: setbit",
              "190: bytec_3",
              "191: swap",
              "192: concat",
              "193: log",
              "194: intc_1",
              "195: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 32 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "155: main_check_global_state_example_route@9:",
              "159: txn OnCompletion",
              "160: !",
              "161: assert",
              "162: txn ApplicationID",
              "163: assert",
              "164: callsub check_global_state_example"
            ],
            [
              "455: check_global_state_example:",
              "458: intc_0",
              "459: bytec_1",
              "460: app_global_get_ex",
              "461: assert",
              "462: intc_3",
              "463: ==",
              "464: assert",
              "467: intc_0",
              "468: bytec_2",
              "469: app_global_get_ex",
              "470: assert",
              "471: bytec_0",
              "472: ==",
              "473: assert",
              "476: intc_0",
              "477: bytec 8",
              "478: app_global_get_ex",
              "479: assert",
              "480: intc_2",
              "481: ==",
              "482: assert",
              "485: intc_0",
              "486: bytec 9",
              "487: app_global_get_ex",
              "488: assert",
              "489: bytec_0",
              "490: ==",
              "491: assert",
              "494: intc_0",
              "495: bytec 10",
              "496: app_global_get_ex",
              "497: assert",
              "498: assert",
              "501: intc_0",
              "502: bytec 11",
              "503: app_global_get_ex",
              "504: bury 1",
              "505: !",
              "506: assert",
              "509: intc_0",
              "510: bytec 7",
              "511: app_global_get_ex",
              "512: bury 1",
              "513: !",
              "514: assert",
              "517: intc_0",
              "518: bytec 5",
              "519: app_global_get_ex",
              "520: bury 1",
              "521: !",
              "522: assert",
              "525: intc_0",
              "526: bytec 6",
              "527: app_global_get_ex",
              "528: assert",
              "529: intc_2",
              "530: ==",
              "531: assert",
              "534: intc_0",
              "535: bytec 12",
              "536: app_global_get_ex",
              "537: assert",
              "538: intc_2",
              "539: ==",
              "540: assert",
              "543: intc_0",
              "544: pushbytes \"global_account\"",
              "545: app_global_get_ex",
              "546: assert",
              "547: intc_0",
              "548: assert",
              "549: bytec_0",
              "550: ==",
              "551: assert",
              "554: intc_1",
              "555: retsub"
            ],
            [
              "165: bytec 4",
              "166: intc_0",
              "167: uncover 2",
              "168: setbit",
              "169: bytec_3",
              "170: swap",
              "171: concat",
              "172: log",
              "173: intc_1",
              "174: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 33 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "135: main_set_global_state_route@10:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: extract 2 0",
              "151: callsub set_global_state"
            ],
            [
              "559: set_global_state:",
              "564: proto 1 0",
              "567: bytec_2",
              "568: frame_dig -1",
              "569: app_global_put",
              "570: retsub"
            ],
            [
              "152: intc_1",
              "153: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 34 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "109: main_set_global_state_example_route@11:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: btoi",
              "124: txnas Assets",
              "125: txna ApplicationArgs 3",
              "126: intc_0",
              "127: getbit",
              "131: callsub set_global_state_example"
            ],
            [
              "574: set_global_state_example:",
              "585: proto 3 0",
              "588: bytec 7",
              "589: frame_dig -3",
              "590: app_global_put",
              "593: intc_0",
              "594: bytec 7",
              "595: app_global_get_ex",
              "596: assert",
              "597: frame_dig -3",
              "598: ==",
              "599: assert",
              "602: bytec 5",
              "603: frame_dig -1",
              "604: app_global_put",
              "607: intc_0",
              "608: bytec 5",
              "609: app_global_get_ex",
              "610: assert",
              "611: assert",
              "614: bytec 6",
              "615: frame_dig -2",
              "616: app_global_put",
              "619: intc_0",
              "620: bytec 6",
              "621: app_global_get_ex",
              "622: assert",
              "623: frame_dig -2",
              "624: ==",
              "625: assert",
              "626: retsub"
            ],
            [
              "132: intc_1",
              "133: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 35 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "88: main_del_global_state_route@12:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub del_global_state"
            ],
            [
              "630: del_global_state:",
              "633: bytec_1",
              "634: app_global_del",
              "637: intc_1",
              "638: retsub"
            ],
            [
              "98: bytec 4",
              "99: intc_0",
              "100: uncover 2",
              "101: setbit",
              "102: bytec_3",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 36 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "67: main_del_global_state_example_route@13:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: callsub del_global_state_example"
            ],
            [
              "642: del_global_state_example:",
              "645: bytec 7",
              "646: app_global_del",
              "649: bytec 5",
              "650: app_global_del",
              "653: bytec 6",
              "654: app_global_del",
              "657: intc_1",
              "658: retsub"
            ],
            [
              "77: bytec 4",
              "78: intc_0",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_3",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_1",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 24 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "258: main_bare_routing@14:",
              "261: txn OnCompletion",
              "262: bnz main_after_if_else@16"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 12,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 22 -> 26 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "240: main_get_global_state_route@5:",
              "244: txn OnCompletion",
              "245: !",
              "246: assert",
              "247: txn ApplicationID",
              "248: assert",
              "249: callsub get_global_state"
            ],
            [
              "271: get_global_state:",
              "274: intc_0",
              "275: bytec_1",
              "276: app_global_get_ex",
              "277: intc_0",
              "278: cover 2",
              "279: select",
              "280: retsub"
            ],
            [
              "250: itob",
              "251: bytec_3",
              "252: swap",
              "253: concat",
              "254: log",
              "255: intc_1",
              "256: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20 -> 27 -> 28 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "302: intc_0",
              "303: frame_bury 1"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20 -> 27 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 18 -> 30 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "197: main_get_global_state_example_route@7:",
              "200: txn OnCompletion",
              "201: !",
              "202: assert",
              "203: txn ApplicationID",
              "204: assert",
              "205: callsub get_global_state_example"
            ],
            [
              "316: get_global_state_example:",
              "319: intc_0",
              "320: bytec_1",
              "321: app_global_get_ex",
              "322: intc_0",
              "323: cover 2",
              "324: select",
              "325: intc_3",
              "326: ==",
              "327: assert",
              "330: intc_0",
              "331: bytec 8",
              "332: app_global_get_ex",
              "333: assert",
              "334: intc_2",
              "335: ==",
              "336: assert",
              "339: intc_0",
              "340: bytec 11",
              "341: app_global_get_ex",
              "342: intc_0",
              "343: cover 2",
              "344: select",
              "345: !",
              "346: assert",
              "349: intc_0",
              "350: bytec_2",
              "351: app_global_get_ex",
              "352: pushbytes 0x64656661756c74",
              "353: cover 2",
              "354: select",
              "355: bytec_0",
              "356: ==",
              "357: assert",
              "360: intc_1",
              "361: retsub"
            ],
            [
              "206: bytec 4",
              "207: intc_0",
              "208: uncover 2",
              "209: setbit",
              "210: bytec_3",
              "211: swap",
              "212: concat",
              "213: log",
              "214: intc_1",
              "215: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 31 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "176: main_maybe_global_state_example_route@8:",
              "180: txn OnCompletion",
              "181: !",
              "182: assert",
              "183: txn ApplicationID",
              "184: assert",
              "185: callsub maybe_global_state_example"
            ],
            [
              "365: maybe_global_state_example:",
              "368: intc_0",
              "369: bytec_1",
              "370: app_global_get_ex",
              "373: assert",
              "376: intc_3",
              "377: ==",
              "378: assert",
              "381: intc_0",
              "382: bytec_2",
              "383: app_global_get_ex",
              "386: assert",
              "389: bytec_0",
              "390: ==",
              "391: assert",
              "394: intc_0",
              "395: bytec_2",
              "396: app_global_get_ex",
              "397: bury 1",
              "400: !",
              "401: assert",
              "404: intc_0",
              "405: bytec_2",
              "406: app_global_get_ex",
              "407: assert",
              "408: bytec_0",
              "409: ==",
              "410: assert",
              "413: intc_0",
              "414: bytec 5",
              "415: app_global_get_ex",
              "418: assert",
              "421: assert",
              "424: intc_0",
              "425: bytec 6",
              "426: app_global_get_ex",
              "429: assert",
              "432: intc_2",
              "433: ==",
              "434: assert",
              "437: intc_0",
              "438: bytec 12",
              "439: app_global_get_ex",
              "442: assert",
              "445: intc_2",
              "446: ==",
              "447: assert",
              "450: intc_1",
              "451: retsub"
            ],
            [
              "186: bytec 4",
              "187: intc_0",
              "188: uncover 2",
              "189: setbit",
              "190: bytec_3",
              "191: swap",
              "192: concat",
              "193: log",
              "194: intc_1",
              "195: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 32 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "155: main_check_global_state_example_route@9:",
              "159: txn OnCompletion",
              "160: !",
              "161: assert",
              "162: txn ApplicationID",
              "163: assert",
              "164: callsub check_global_state_example"
            ],
            [
              "455: check_global_state_example:",
              "458: intc_0",
              "459: bytec_1",
              "460: app_global_get_ex",
              "461: assert",
              "462: intc_3",
              "463: ==",
              "464: assert",
              "467: intc_0",
              "468: bytec_2",
              "469: app_global_get_ex",
              "470: assert",
              "471: bytec_0",
              "472: ==",
              "473: assert",
              "476: intc_0",
              "477: bytec 8",
              "478: app_global_get_ex",
              "479: assert",
              "480: intc_2",
              "481: ==",
              "482: assert",
              "485: intc_0",
              "486: bytec 9",
              "487: app_global_get_ex",
              "488: assert",
              "489: bytec_0",
              "490: ==",
              "491: assert",
              "494: intc_0",
              "495: bytec 10",
              "496: app_global_get_ex",
              "497: assert",
              "498: assert",
              "501: intc_0",
              "502: bytec 11",
              "503: app_global_get_ex",
              "504: bury 1",
              "505: !",
              "506: assert",
              "509: intc_0",
              "510: bytec 7",
              "511: app_global_get_ex",
              "512: bury 1",
              "513: !",
              "514: assert",
              "517: intc_0",
              "518: bytec 5",
              "519: app_global_get_ex",
              "520: bury 1",
              "521: !",
              "522: assert",
              "525: intc_0",
              "526: bytec 6",
              "527: app_global_get_ex",
              "528: assert",
              "529: intc_2",
              "530: ==",
              "531: assert",
              "534: intc_0",
              "535: bytec 12",
              "536: app_global_get_ex",
              "537: assert",
              "538: intc_2",
              "539: ==",
              "540: assert",
              "543: intc_0",
              "544: pushbytes \"global_account\"",
              "545: app_global_get_ex",
              "546: assert",
              "547: intc_0",
              "548: assert",
              "549: bytec_0",
              "550: ==",
              "551: assert",
              "554: intc_1",
              "555: retsub"
            ],
            [
              "165: bytec 4",
              "166: intc_0",
              "167: uncover 2",
              "168: setbit",
              "169: bytec_3",
              "170: swap",
              "171: concat",
              "172: log",
              "173: intc_1",
              "174: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 33 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "135: main_set_global_state_route@10:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: extract 2 0",
              "151: callsub set_global_state"
            ],
            [
              "559: set_global_state:",
              "564: proto 1 0",
              "567: bytec_2",
              "568: frame_dig -1",
              "569: app_global_put",
              "570: retsub"
            ],
            [
              "152: intc_1",
              "153: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 34 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "109: main_set_global_state_example_route@11:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: btoi",
              "124: txnas Assets",
              "125: txna ApplicationArgs 3",
              "126: intc_0",
              "127: getbit",
              "131: callsub set_global_state_example"
            ],
            [
              "574: set_global_state_example:",
              "585: proto 3 0",
              "588: bytec 7",
              "589: frame_dig -3",
              "590: app_global_put",
              "593: intc_0",
              "594: bytec 7",
              "595: app_global_get_ex",
              "596: assert",
              "597: frame_dig -3",
              "598: ==",
              "599: assert",
              "602: bytec 5",
              "603: frame_dig -1",
              "604: app_global_put",
              "607: intc_0",
              "608: bytec 5",
              "609: app_global_get_ex",
              "610: assert",
              "611: assert",
              "614: bytec 6",
              "615: frame_dig -2",
              "616: app_global_put",
              "619: intc_0",
              "620: bytec 6",
              "621: app_global_get_ex",
              "622: assert",
              "623: frame_dig -2",
              "624: ==",
              "625: assert",
              "626: retsub"
            ],
            [
              "132: intc_1",
              "133: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 35 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "88: main_del_global_state_route@12:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub del_global_state"
            ],
            [
              "630: del_global_state:",
              "633: bytec_1",
              "634: app_global_del",
              "637: intc_1",
              "638: retsub"
            ],
            [
              "98: bytec 4",
              "99: intc_0",
              "100: uncover 2",
              "101: setbit",
              "102: bytec_3",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 36 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "67: main_del_global_state_example_route@13:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: callsub del_global_state_example"
            ],
            [
              "642: del_global_state_example:",
              "645: bytec 7",
              "646: app_global_del",
              "649: bytec 5",
              "650: app_global_del",
              "653: bytec 6",
              "654: app_global_del",
              "657: intc_1",
              "658: retsub"
            ],
            [
              "77: bytec 4",
              "78: intc_0",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_3",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_1",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 24 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "258: main_bare_routing@14:",
              "261: txn OnCompletion",
              "262: bnz main_after_if_else@16"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 12,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 22 -> 26 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "240: main_get_global_state_route@5:",
              "244: txn OnCompletion",
              "245: !",
              "246: assert",
              "247: txn ApplicationID",
              "248: assert",
              "249: callsub get_global_state"
            ],
            [
              "271: get_global_state:",
              "274: intc_0",
              "275: bytec_1",
              "276: app_global_get_ex",
              "277: intc_0",
              "278: cover 2",
              "279: select",
              "280: retsub"
            ],
            [
              "250: itob",
              "251: bytec_3",
              "252: swap",
              "253: concat",
              "254: log",
              "255: intc_1",
              "256: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20 -> 27 -> 28 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "302: intc_0",
              "303: frame_bury 1"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20 -> 27 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 18 -> 30 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "197: main_get_global_state_example_route@7:",
              "200: txn OnCompletion",
              "201: !",
              "202: assert",
              "203: txn ApplicationID",
              "204: assert",
              "205: callsub get_global_state_example"
            ],
            [
              "316: get_global_state_example:",
              "319: intc_0",
              "320: bytec_1",
              "321: app_global_get_ex",
              "322: intc_0",
              "323: cover 2",
              "324: select",
              "325: intc_3",
              "326: ==",
              "327: assert",
              "330: intc_0",
              "331: bytec 8",
              "332: app_global_get_ex",
              "333: assert",
              "334: intc_2",
              "335: ==",
              "336: assert",
              "339: intc_0",
              "340: bytec 11",
              "341: app_global_get_ex",
              "342: intc_0",
              "343: cover 2",
              "344: select",
              "345: !",
              "346: assert",
              "349: intc_0",
              "350: bytec_2",
              "351: app_global_get_ex",
              "352: pushbytes 0x64656661756c74",
              "353: cover 2",
              "354: select",
              "355: bytec_0",
              "356: ==",
              "357: assert",
              "360: intc_1",
              "361: retsub"
            ],
            [
              "206: bytec 4",
              "207: intc_0",
              "208: uncover 2",
              "209: setbit",
              "210: bytec_3",
              "211: swap",
              "212: concat",
              "213: log",
              "214: intc_1",
              "215: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 31 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "176: main_maybe_global_state_example_route@8:",
              "180: txn OnCompletion",
              "181: !",
              "182: assert",
              "183: txn ApplicationID",
              "184: assert",
              "185: callsub maybe_global_state_example"
            ],
            [
              "365: maybe_global_state_example:",
              "368: intc_0",
              "369: bytec_1",
              "370: app_global_get_ex",
              "373: assert",
              "376: intc_3",
              "377: ==",
              "378: assert",
              "381: intc_0",
              "382: bytec_2",
              "383: app_global_get_ex",
              "386: assert",
              "389: bytec_0",
              "390: ==",
              "391: assert",
              "394: intc_0",
              "395: bytec_2",
              "396: app_global_get_ex",
              "397: bury 1",
              "400: !",
              "401: assert",
              "404: intc_0",
              "405: bytec_2",
              "406: app_global_get_ex",
              "407: assert",
              "408: bytec_0",
              "409: ==",
              "410: assert",
              "413: intc_0",
              "414: bytec 5",
              "415: app_global_get_ex",
              "418: assert",
              "421: assert",
              "424: intc_0",
              "425: bytec 6",
              "426: app_global_get_ex",
              "429: assert",
              "432: intc_2",
              "433: ==",
              "434: assert",
              "437: intc_0",
              "438: bytec 12",
              "439: app_global_get_ex",
              "442: assert",
              "445: intc_2",
              "446: ==",
              "447: assert",
              "450: intc_1",
              "451: retsub"
            ],
            [
              "186: bytec 4",
              "187: intc_0",
              "188: uncover 2",
              "189: setbit",
              "190: bytec_3",
              "191: swap",
              "192: concat",
              "193: log",
              "194: intc_1",
              "195: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 32 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "155: main_check_global_state_example_route@9:",
              "159: txn OnCompletion",
              "160: !",
              "161: assert",
              "162: txn ApplicationID",
              "163: assert",
              "164: callsub check_global_state_example"
            ],
            [
              "455: check_global_state_example:",
              "458: intc_0",
              "459: bytec_1",
              "460: app_global_get_ex",
              "461: assert",
              "462: intc_3",
              "463: ==",
              "464: assert",
              "467: intc_0",
              "468: bytec_2",
              "469: app_global_get_ex",
              "470: assert",
              "471: bytec_0",
              "472: ==",
              "473: assert",
              "476: intc_0",
              "477: bytec 8",
              "478: app_global_get_ex",
              "479: assert",
              "480: intc_2",
              "481: ==",
              "482: assert",
              "485: intc_0",
              "486: bytec 9",
              "487: app_global_get_ex",
              "488: assert",
              "489: bytec_0",
              "490: ==",
              "491: assert",
              "494: intc_0",
              "495: bytec 10",
              "496: app_global_get_ex",
              "497: assert",
              "498: assert",
              "501: intc_0",
              "502: bytec 11",
              "503: app_global_get_ex",
              "504: bury 1",
              "505: !",
              "506: assert",
              "509: intc_0",
              "510: bytec 7",
              "511: app_global_get_ex",
              "512: bury 1",
              "513: !",
              "514: assert",
              "517: intc_0",
              "518: bytec 5",
              "519: app_global_get_ex",
              "520: bury 1",
              "521: !",
              "522: assert",
              "525: intc_0",
              "526: bytec 6",
              "527: app_global_get_ex",
              "528: assert",
              "529: intc_2",
              "530: ==",
              "531: assert",
              "534: intc_0",
              "535: bytec 12",
              "536: app_global_get_ex",
              "537: assert",
              "538: intc_2",
              "539: ==",
              "540: assert",
              "543: intc_0",
              "544: pushbytes \"global_account\"",
              "545: app_global_get_ex",
              "546: assert",
              "547: intc_0",
              "548: assert",
              "549: bytec_0",
              "550: ==",
              "551: assert",
              "554: intc_1",
              "555: retsub"
            ],
            [
              "165: bytec 4",
              "166: intc_0",
              "167: uncover 2",
              "168: setbit",
              "169: bytec_3",
              "170: swap",
              "171: concat",
              "172: log",
              "173: intc_1",
              "174: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 33 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "135: main_set_global_state_route@10:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: extract 2 0",
              "151: callsub set_global_state"
            ],
            [
              "559: set_global_state:",
              "564: proto 1 0",
              "567: bytec_2",
              "568: frame_dig -1",
              "569: app_global_put",
              "570: retsub"
            ],
            [
              "152: intc_1",
              "153: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 34 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "109: main_set_global_state_example_route@11:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: btoi",
              "124: txnas Assets",
              "125: txna ApplicationArgs 3",
              "126: intc_0",
              "127: getbit",
              "131: callsub set_global_state_example"
            ],
            [
              "574: set_global_state_example:",
              "585: proto 3 0",
              "588: bytec 7",
              "589: frame_dig -3",
              "590: app_global_put",
              "593: intc_0",
              "594: bytec 7",
              "595: app_global_get_ex",
              "596: assert",
              "597: frame_dig -3",
              "598: ==",
              "599: assert",
              "602: bytec 5",
              "603: frame_dig -1",
              "604: app_global_put",
              "607: intc_0",
              "608: bytec 5",
              "609: app_global_get_ex",
              "610: assert",
              "611: assert",
              "614: bytec 6",
              "615: frame_dig -2",
              "616: app_global_put",
              "619: intc_0",
              "620: bytec 6",
              "621: app_global_get_ex",
              "622: assert",
              "623: frame_dig -2",
              "624: ==",
              "625: assert",
              "626: retsub"
            ],
            [
              "132: intc_1",
              "133: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 35 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "88: main_del_global_state_route@12:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub del_global_state"
            ],
            [
              "630: del_global_state:",
              "633: bytec_1",
              "634: app_global_del",
              "637: intc_1",
              "638: retsub"
            ],
            [
              "98: bytec 4",
              "99: intc_0",
              "100: uncover 2",
              "101: setbit",
              "102: bytec_3",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 36 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "67: main_del_global_state_example_route@13:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: callsub del_global_state_example"
            ],
            [
              "642: del_global_state_example:",
              "645: bytec 7",
              "646: app_global_del",
              "649: bytec 5",
              "650: app_global_del",
              "653: bytec 6",
              "654: app_global_del",
              "657: intc_1",
              "658: retsub"
            ],
            [
              "77: bytec 4",
              "78: intc_0",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_3",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_1",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 24 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "258: main_bare_routing@14:",
              "261: txn OnCompletion",
              "262: bnz main_after_if_else@16"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 26,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 22 -> 26 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "240: main_get_global_state_route@5:",
              "244: txn OnCompletion",
              "245: !",
              "246: assert",
              "247: txn ApplicationID",
              "248: assert",
              "249: callsub get_global_state"
            ],
            [
              "271: get_global_state:",
              "274: intc_0",
              "275: bytec_1",
              "276: app_global_get_ex",
              "277: intc_0",
              "278: cover 2",
              "279: select",
              "280: retsub"
            ],
            [
              "250: itob",
              "251: bytec_3",
              "252: swap",
              "253: concat",
              "254: log",
              "255: intc_1",
              "256: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 20 -> 27 -> 28 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "302: intc_0",
              "303: frame_bury 1"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 20 -> 27 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 18 -> 30 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "197: main_get_global_state_example_route@7:",
              "200: txn OnCompletion",
              "201: !",
              "202: assert",
              "203: txn ApplicationID",
              "204: assert",
              "205: callsub get_global_state_example"
            ],
            [
              "316: get_global_state_example:",
              "319: intc_0",
              "320: bytec_1",
              "321: app_global_get_ex",
              "322: intc_0",
              "323: cover 2",
              "324: select",
              "325: intc_3",
              "326: ==",
              "327: assert",
              "330: intc_0",
              "331: bytec 8",
              "332: app_global_get_ex",
              "333: assert",
              "334: intc_2",
              "335: ==",
              "336: assert",
              "339: intc_0",
              "340: bytec 11",
              "341: app_global_get_ex",
              "342: intc_0",
              "343: cover 2",
              "344: select",
              "345: !",
              "346: assert",
              "349: intc_0",
              "350: bytec_2",
              "351: app_global_get_ex",
              "352: pushbytes 0x64656661756c74",
              "353: cover 2",
              "354: select",
              "355: bytec_0",
              "356: ==",
              "357: assert",
              "360: intc_1",
              "361: retsub"
            ],
            [
              "206: bytec 4",
              "207: intc_0",
              "208: uncover 2",
              "209: setbit",
              "210: bytec_3",
              "211: swap",
              "212: concat",
              "213: log",
              "214: intc_1",
              "215: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 16 -> 31 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "176: main_maybe_global_state_example_route@8:",
              "180: txn OnCompletion",
              "181: !",
              "182: assert",
              "183: txn ApplicationID",
              "184: assert",
              "185: callsub maybe_global_state_example"
            ],
            [
              "365: maybe_global_state_example:",
              "368: intc_0",
              "369: bytec_1",
              "370: app_global_get_ex",
              "373: assert",
              "376: intc_3",
              "377: ==",
              "378: assert",
              "381: intc_0",
              "382: bytec_2",
              "383: app_global_get_ex",
              "386: assert",
              "389: bytec_0",
              "390: ==",
              "391: assert",
              "394: intc_0",
              "395: bytec_2",
              "396: app_global_get_ex",
              "397: bury 1",
              "400: !",
              "401: assert",
              "404: intc_0",
              "405: bytec_2",
              "406: app_global_get_ex",
              "407: assert",
              "408: bytec_0",
              "409: ==",
              "410: assert",
              "413: intc_0",
              "414: bytec 5",
              "415: app_global_get_ex",
              "418: assert",
              "421: assert",
              "424: intc_0",
              "425: bytec 6",
              "426: app_global_get_ex",
              "429: assert",
              "432: intc_2",
              "433: ==",
              "434: assert",
              "437: intc_0",
              "438: bytec 12",
              "439: app_global_get_ex",
              "442: assert",
              "445: intc_2",
              "446: ==",
              "447: assert",
              "450: intc_1",
              "451: retsub"
            ],
            [
              "186: bytec 4",
              "187: intc_0",
              "188: uncover 2",
              "189: setbit",
              "190: bytec_3",
              "191: swap",
              "192: concat",
              "193: log",
              "194: intc_1",
              "195: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 14 -> 32 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "155: main_check_global_state_example_route@9:",
              "159: txn OnCompletion",
              "160: !",
              "161: assert",
              "162: txn ApplicationID",
              "163: assert",
              "164: callsub check_global_state_example"
            ],
            [
              "455: check_global_state_example:",
              "458: intc_0",
              "459: bytec_1",
              "460: app_global_get_ex",
              "461: assert",
              "462: intc_3",
              "463: ==",
              "464: assert",
              "467: intc_0",
              "468: bytec_2",
              "469: app_global_get_ex",
              "470: assert",
              "471: bytec_0",
              "472: ==",
              "473: assert",
              "476: intc_0",
              "477: bytec 8",
              "478: app_global_get_ex",
              "479: assert",
              "480: intc_2",
              "481: ==",
              "482: assert",
              "485: intc_0",
              "486: bytec 9",
              "487: app_global_get_ex",
              "488: assert",
              "489: bytec_0",
              "490: ==",
              "491: assert",
              "494: intc_0",
              "495: bytec 10",
              "496: app_global_get_ex",
              "497: assert",
              "498: assert",
              "501: intc_0",
              "502: bytec 11",
              "503: app_global_get_ex",
              "504: bury 1",
              "505: !",
              "506: assert",
              "509: intc_0",
              "510: bytec 7",
              "511: app_global_get_ex",
              "512: bury 1",
              "513: !",
              "514: assert",
              "517: intc_0",
              "518: bytec 5",
              "519: app_global_get_ex",
              "520: bury 1",
              "521: !",
              "522: assert",
              "525: intc_0",
              "526: bytec 6",
              "527: app_global_get_ex",
              "528: assert",
              "529: intc_2",
              "530: ==",
              "531: assert",
              "534: intc_0",
              "535: bytec 12",
              "536: app_global_get_ex",
              "537: assert",
              "538: intc_2",
              "539: ==",
              "540: assert",
              "543: intc_0",
              "544: pushbytes \"global_account\"",
              "545: app_global_get_ex",
              "546: assert",
              "547: intc_0",
              "548: assert",
              "549: bytec_0",
              "550: ==",
              "551: assert",
              "554: intc_1",
              "555: retsub"
            ],
            [
              "165: bytec 4",
              "166: intc_0",
              "167: uncover 2",
              "168: setbit",
              "169: bytec_3",
              "170: swap",
              "171: concat",
              "172: log",
              "173: intc_1",
              "174: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 12 -> 33 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "135: main_set_global_state_route@10:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: extract 2 0",
              "151: callsub set_global_state"
            ],
            [
              "559: set_global_state:",
              "564: proto 1 0",
              "567: bytec_2",
              "568: frame_dig -1",
              "569: app_global_put",
              "570: retsub"
            ],
            [
              "152: intc_1",
              "153: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 10 -> 34 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "109: main_set_global_state_example_route@11:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: btoi",
              "124: txnas Assets",
              "125: txna ApplicationArgs 3",
              "126: intc_0",
              "127: getbit",
              "131: callsub set_global_state_example"
            ],
            [
              "574: set_global_state_example:",
              "585: proto 3 0",
              "588: bytec 7",
              "589: frame_dig -3",
              "590: app_global_put",
              "593: intc_0",
              "594: bytec 7",
              "595: app_global_get_ex",
              "596: assert",
              "597: frame_dig -3",
              "598: ==",
              "599: assert",
              "602: bytec 5",
              "603: frame_dig -1",
              "604: app_global_put",
              "607: intc_0",
              "608: bytec 5",
              "609: app_global_get_ex",
              "610: assert",
              "611: assert",
              "614: bytec 6",
              "615: frame_dig -2",
              "616: app_global_put",
              "619: intc_0",
              "620: bytec 6",
              "621: app_global_get_ex",
              "622: assert",
              "623: frame_dig -2",
              "624: ==",
              "625: assert",
              "626: retsub"
            ],
            [
              "132: intc_1",
              "133: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8 -> 35 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "88: main_del_global_state_route@12:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub del_global_state"
            ],
            [
              "630: del_global_state:",
              "633: bytec_1",
              "634: app_global_del",
              "637: intc_1",
              "638: retsub"
            ],
            [
              "98: bytec 4",
              "99: intc_0",
              "100: uncover 2",
              "101: setbit",
              "102: bytec_3",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 6 -> 36 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "67: main_del_global_state_example_route@13:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: callsub del_global_state_example"
            ],
            [
              "642: del_global_state_example:",
              "645: bytec 7",
              "646: app_global_del",
              "649: bytec 5",
              "650: app_global_del",
              "653: bytec 6",
              "654: app_global_del",
              "657: intc_1",
              "658: retsub"
            ],
            [
              "77: bytec 4",
              "78: intc_0",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_3",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_1",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 24 -> 25",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "258: main_bare_routing@14:",
              "261: txn OnCompletion",
              "262: bnz main_after_if_else@16"
            ],
            [
              "263: txn ApplicationID",
              "264: !",
              "265: assert",
              "266: intc_1",
              "267: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 24 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "258: main_bare_routing@14:",
              "261: txn OnCompletion",
              "262: bnz main_after_if_else@16"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 22 -> 26 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "240: main_get_global_state_route@5:",
              "244: txn OnCompletion",
              "245: !",
              "246: assert",
              "247: txn ApplicationID",
              "248: assert",
              "249: callsub get_global_state"
            ],
            [
              "271: get_global_state:",
              "274: intc_0",
              "275: bytec_1",
              "276: app_global_get_ex",
              "277: intc_0",
              "278: cover 2",
              "279: select",
              "280: retsub"
            ],
            [
              "250: itob",
              "251: bytec_3",
              "252: swap",
              "253: concat",
              "254: log",
              "255: intc_1",
              "256: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20 -> 27 -> 28 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "302: intc_0",
              "303: frame_bury 1"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20 -> 27 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 18 -> 30 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "197: main_get_global_state_example_route@7:",
              "200: txn OnCompletion",
              "201: !",
              "202: assert",
              "203: txn ApplicationID",
              "204: assert",
              "205: callsub get_global_state_example"
            ],
            [
              "316: get_global_state_example:",
              "319: intc_0",
              "320: bytec_1",
              "321: app_global_get_ex",
              "322: intc_0",
              "323: cover 2",
              "324: select",
              "325: intc_3",
              "326: ==",
              "327: assert",
              "330: intc_0",
              "331: bytec 8",
              "332: app_global_get_ex",
              "333: assert",
              "334: intc_2",
              "335: ==",
              "336: assert",
              "339: intc_0",
              "340: bytec 11",
              "341: app_global_get_ex",
              "342: intc_0",
              "343: cover 2",
              "344: select",
              "345: !",
              "346: assert",
              "349: intc_0",
              "350: bytec_2",
              "351: app_global_get_ex",
              "352: pushbytes 0x64656661756c74",
              "353: cover 2",
              "354: select",
              "355: bytec_0",
              "356: ==",
              "357: assert",
              "360: intc_1",
              "361: retsub"
            ],
            [
              "206: bytec 4",
              "207: intc_0",
              "208: uncover 2",
              "209: setbit",
              "210: bytec_3",
              "211: swap",
              "212: concat",
              "213: log",
              "214: intc_1",
              "215: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 31 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "176: main_maybe_global_state_example_route@8:",
              "180: txn OnCompletion",
              "181: !",
              "182: assert",
              "183: txn ApplicationID",
              "184: assert",
              "185: callsub maybe_global_state_example"
            ],
            [
              "365: maybe_global_state_example:",
              "368: intc_0",
              "369: bytec_1",
              "370: app_global_get_ex",
              "373: assert",
              "376: intc_3",
              "377: ==",
              "378: assert",
              "381: intc_0",
              "382: bytec_2",
              "383: app_global_get_ex",
              "386: assert",
              "389: bytec_0",
              "390: ==",
              "391: assert",
              "394: intc_0",
              "395: bytec_2",
              "396: app_global_get_ex",
              "397: bury 1",
              "400: !",
              "401: assert",
              "404: intc_0",
              "405: bytec_2",
              "406: app_global_get_ex",
              "407: assert",
              "408: bytec_0",
              "409: ==",
              "410: assert",
              "413: intc_0",
              "414: bytec 5",
              "415: app_global_get_ex",
              "418: assert",
              "421: assert",
              "424: intc_0",
              "425: bytec 6",
              "426: app_global_get_ex",
              "429: assert",
              "432: intc_2",
              "433: ==",
              "434: assert",
              "437: intc_0",
              "438: bytec 12",
              "439: app_global_get_ex",
              "442: assert",
              "445: intc_2",
              "446: ==",
              "447: assert",
              "450: intc_1",
              "451: retsub"
            ],
            [
              "186: bytec 4",
              "187: intc_0",
              "188: uncover 2",
              "189: setbit",
              "190: bytec_3",
              "191: swap",
              "192: concat",
              "193: log",
              "194: intc_1",
              "195: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 32 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "155: main_check_global_state_example_route@9:",
              "159: txn OnCompletion",
              "160: !",
              "161: assert",
              "162: txn ApplicationID",
              "163: assert",
              "164: callsub check_global_state_example"
            ],
            [
              "455: check_global_state_example:",
              "458: intc_0",
              "459: bytec_1",
              "460: app_global_get_ex",
              "461: assert",
              "462: intc_3",
              "463: ==",
              "464: assert",
              "467: intc_0",
              "468: bytec_2",
              "469: app_global_get_ex",
              "470: assert",
              "471: bytec_0",
              "472: ==",
              "473: assert",
              "476: intc_0",
              "477: bytec 8",
              "478: app_global_get_ex",
              "479: assert",
              "480: intc_2",
              "481: ==",
              "482: assert",
              "485: intc_0",
              "486: bytec 9",
              "487: app_global_get_ex",
              "488: assert",
              "489: bytec_0",
              "490: ==",
              "491: assert",
              "494: intc_0",
              "495: bytec 10",
              "496: app_global_get_ex",
              "497: assert",
              "498: assert",
              "501: intc_0",
              "502: bytec 11",
              "503: app_global_get_ex",
              "504: bury 1",
              "505: !",
              "506: assert",
              "509: intc_0",
              "510: bytec 7",
              "511: app_global_get_ex",
              "512: bury 1",
              "513: !",
              "514: assert",
              "517: intc_0",
              "518: bytec 5",
              "519: app_global_get_ex",
              "520: bury 1",
              "521: !",
              "522: assert",
              "525: intc_0",
              "526: bytec 6",
              "527: app_global_get_ex",
              "528: assert",
              "529: intc_2",
              "530: ==",
              "531: assert",
              "534: intc_0",
              "535: bytec 12",
              "536: app_global_get_ex",
              "537: assert",
              "538: intc_2",
              "539: ==",
              "540: assert",
              "543: intc_0",
              "544: pushbytes \"global_account\"",
              "545: app_global_get_ex",
              "546: assert",
              "547: intc_0",
              "548: assert",
              "549: bytec_0",
              "550: ==",
              "551: assert",
              "554: intc_1",
              "555: retsub"
            ],
            [
              "165: bytec 4",
              "166: intc_0",
              "167: uncover 2",
              "168: setbit",
              "169: bytec_3",
              "170: swap",
              "171: concat",
              "172: log",
              "173: intc_1",
              "174: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 33 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "135: main_set_global_state_route@10:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: extract 2 0",
              "151: callsub set_global_state"
            ],
            [
              "559: set_global_state:",
              "564: proto 1 0",
              "567: bytec_2",
              "568: frame_dig -1",
              "569: app_global_put",
              "570: retsub"
            ],
            [
              "152: intc_1",
              "153: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 34 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "109: main_set_global_state_example_route@11:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: btoi",
              "124: txnas Assets",
              "125: txna ApplicationArgs 3",
              "126: intc_0",
              "127: getbit",
              "131: callsub set_global_state_example"
            ],
            [
              "574: set_global_state_example:",
              "585: proto 3 0",
              "588: bytec 7",
              "589: frame_dig -3",
              "590: app_global_put",
              "593: intc_0",
              "594: bytec 7",
              "595: app_global_get_ex",
              "596: assert",
              "597: frame_dig -3",
              "598: ==",
              "599: assert",
              "602: bytec 5",
              "603: frame_dig -1",
              "604: app_global_put",
              "607: intc_0",
              "608: bytec 5",
              "609: app_global_get_ex",
              "610: assert",
              "611: assert",
              "614: bytec 6",
              "615: frame_dig -2",
              "616: app_global_put",
              "619: intc_0",
              "620: bytec 6",
              "621: app_global_get_ex",
              "622: assert",
              "623: frame_dig -2",
              "624: ==",
              "625: assert",
              "626: retsub"
            ],
            [
              "132: intc_1",
              "133: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 35 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "88: main_del_global_state_route@12:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub del_global_state"
            ],
            [
              "630: del_global_state:",
              "633: bytec_1",
              "634: app_global_del",
              "637: intc_1",
              "638: retsub"
            ],
            [
              "98: bytec 4",
              "99: intc_0",
              "100: uncover 2",
              "101: setbit",
              "102: bytec_3",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 36 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "67: main_del_global_state_example_route@13:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: callsub del_global_state_example"
            ],
            [
              "642: del_global_state_example:",
              "645: bytec 7",
              "646: app_global_del",
              "649: bytec 5",
              "650: app_global_del",
              "653: bytec 6",
              "654: app_global_del",
              "657: intc_1",
              "658: retsub"
            ],
            [
              "77: bytec 4",
              "78: intc_0",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_3",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_1",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 24 -> 25",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "258: main_bare_routing@14:",
              "261: txn OnCompletion",
              "262: bnz main_after_if_else@16"
            ],
            [
              "263: txn ApplicationID",
              "264: !",
              "265: assert",
              "266: intc_1",
              "267: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 24 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "258: main_bare_routing@14:",
              "261: txn OnCompletion",
              "262: bnz main_after_if_else@16"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 26,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 22 -> 26 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "240: main_get_global_state_route@5:",
              "244: txn OnCompletion",
              "245: !",
              "246: assert",
              "247: txn ApplicationID",
              "248: assert",
              "249: callsub get_global_state"
            ],
            [
              "271: get_global_state:",
              "274: intc_0",
              "275: bytec_1",
              "276: app_global_get_ex",
              "277: intc_0",
              "278: cover 2",
              "279: select",
              "280: retsub"
            ],
            [
              "250: itob",
              "251: bytec_3",
              "252: swap",
              "253: concat",
              "254: log",
              "255: intc_1",
              "256: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 20 -> 27 -> 28 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "302: intc_0",
              "303: frame_bury 1"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 20 -> 27 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 18 -> 30 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "197: main_get_global_state_example_route@7:",
              "200: txn OnCompletion",
              "201: !",
              "202: assert",
              "203: txn ApplicationID",
              "204: assert",
              "205: callsub get_global_state_example"
            ],
            [
              "316: get_global_state_example:",
              "319: intc_0",
              "320: bytec_1",
              "321: app_global_get_ex",
              "322: intc_0",
              "323: cover 2",
              "324: select",
              "325: intc_3",
              "326: ==",
              "327: assert",
              "330: intc_0",
              "331: bytec 8",
              "332: app_global_get_ex",
              "333: assert",
              "334: intc_2",
              "335: ==",
              "336: assert",
              "339: intc_0",
              "340: bytec 11",
              "341: app_global_get_ex",
              "342: intc_0",
              "343: cover 2",
              "344: select",
              "345: !",
              "346: assert",
              "349: intc_0",
              "350: bytec_2",
              "351: app_global_get_ex",
              "352: pushbytes 0x64656661756c74",
              "353: cover 2",
              "354: select",
              "355: bytec_0",
              "356: ==",
              "357: assert",
              "360: intc_1",
              "361: retsub"
            ],
            [
              "206: bytec 4",
              "207: intc_0",
              "208: uncover 2",
              "209: setbit",
              "210: bytec_3",
              "211: swap",
              "212: concat",
              "213: log",
              "214: intc_1",
              "215: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 16 -> 31 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "176: main_maybe_global_state_example_route@8:",
              "180: txn OnCompletion",
              "181: !",
              "182: assert",
              "183: txn ApplicationID",
              "184: assert",
              "185: callsub maybe_global_state_example"
            ],
            [
              "365: maybe_global_state_example:",
              "368: intc_0",
              "369: bytec_1",
              "370: app_global_get_ex",
              "373: assert",
              "376: intc_3",
              "377: ==",
              "378: assert",
              "381: intc_0",
              "382: bytec_2",
              "383: app_global_get_ex",
              "386: assert",
              "389: bytec_0",
              "390: ==",
              "391: assert",
              "394: intc_0",
              "395: bytec_2",
              "396: app_global_get_ex",
              "397: bury 1",
              "400: !",
              "401: assert",
              "404: intc_0",
              "405: bytec_2",
              "406: app_global_get_ex",
              "407: assert",
              "408: bytec_0",
              "409: ==",
              "410: assert",
              "413: intc_0",
              "414: bytec 5",
              "415: app_global_get_ex",
              "418: assert",
              "421: assert",
              "424: intc_0",
              "425: bytec 6",
              "426: app_global_get_ex",
              "429: assert",
              "432: intc_2",
              "433: ==",
              "434: assert",
              "437: intc_0",
              "438: bytec 12",
              "439: app_global_get_ex",
              "442: assert",
              "445: intc_2",
              "446: ==",
              "447: assert",
              "450: intc_1",
              "451: retsub"
            ],
            [
              "186: bytec 4",
              "187: intc_0",
              "188: uncover 2",
              "189: setbit",
              "190: bytec_3",
              "191: swap",
              "192: concat",
              "193: log",
              "194: intc_1",
              "195: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 14 -> 32 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "155: main_check_global_state_example_route@9:",
              "159: txn OnCompletion",
              "160: !",
              "161: assert",
              "162: txn ApplicationID",
              "163: assert",
              "164: callsub check_global_state_example"
            ],
            [
              "455: check_global_state_example:",
              "458: intc_0",
              "459: bytec_1",
              "460: app_global_get_ex",
              "461: assert",
              "462: intc_3",
              "463: ==",
              "464: assert",
              "467: intc_0",
              "468: bytec_2",
              "469: app_global_get_ex",
              "470: assert",
              "471: bytec_0",
              "472: ==",
              "473: assert",
              "476: intc_0",
              "477: bytec 8",
              "478: app_global_get_ex",
              "479: assert",
              "480: intc_2",
              "481: ==",
              "482: assert",
              "485: intc_0",
              "486: bytec 9",
              "487: app_global_get_ex",
              "488: assert",
              "489: bytec_0",
              "490: ==",
              "491: assert",
              "494: intc_0",
              "495: bytec 10",
              "496: app_global_get_ex",
              "497: assert",
              "498: assert",
              "501: intc_0",
              "502: bytec 11",
              "503: app_global_get_ex",
              "504: bury 1",
              "505: !",
              "506: assert",
              "509: intc_0",
              "510: bytec 7",
              "511: app_global_get_ex",
              "512: bury 1",
              "513: !",
              "514: assert",
              "517: intc_0",
              "518: bytec 5",
              "519: app_global_get_ex",
              "520: bury 1",
              "521: !",
              "522: assert",
              "525: intc_0",
              "526: bytec 6",
              "527: app_global_get_ex",
              "528: assert",
              "529: intc_2",
              "530: ==",
              "531: assert",
              "534: intc_0",
              "535: bytec 12",
              "536: app_global_get_ex",
              "537: assert",
              "538: intc_2",
              "539: ==",
              "540: assert",
              "543: intc_0",
              "544: pushbytes \"global_account\"",
              "545: app_global_get_ex",
              "546: assert",
              "547: intc_0",
              "548: assert",
              "549: bytec_0",
              "550: ==",
              "551: assert",
              "554: intc_1",
              "555: retsub"
            ],
            [
              "165: bytec 4",
              "166: intc_0",
              "167: uncover 2",
              "168: setbit",
              "169: bytec_3",
              "170: swap",
              "171: concat",
              "172: log",
              "173: intc_1",
              "174: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 12 -> 33 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "135: main_set_global_state_route@10:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: extract 2 0",
              "151: callsub set_global_state"
            ],
            [
              "559: set_global_state:",
              "564: proto 1 0",
              "567: bytec_2",
              "568: frame_dig -1",
              "569: app_global_put",
              "570: retsub"
            ],
            [
              "152: intc_1",
              "153: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 10 -> 34 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "109: main_set_global_state_example_route@11:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: btoi",
              "124: txnas Assets",
              "125: txna ApplicationArgs 3",
              "126: intc_0",
              "127: getbit",
              "131: callsub set_global_state_example"
            ],
            [
              "574: set_global_state_example:",
              "585: proto 3 0",
              "588: bytec 7",
              "589: frame_dig -3",
              "590: app_global_put",
              "593: intc_0",
              "594: bytec 7",
              "595: app_global_get_ex",
              "596: assert",
              "597: frame_dig -3",
              "598: ==",
              "599: assert",
              "602: bytec 5",
              "603: frame_dig -1",
              "604: app_global_put",
              "607: intc_0",
              "608: bytec 5",
              "609: app_global_get_ex",
              "610: assert",
              "611: assert",
              "614: bytec 6",
              "615: frame_dig -2",
              "616: app_global_put",
              "619: intc_0",
              "620: bytec 6",
              "621: app_global_get_ex",
              "622: assert",
              "623: frame_dig -2",
              "624: ==",
              "625: assert",
              "626: retsub"
            ],
            [
              "132: intc_1",
              "133: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8 -> 35 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "88: main_del_global_state_route@12:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub del_global_state"
            ],
            [
              "630: del_global_state:",
              "633: bytec_1",
              "634: app_global_del",
              "637: intc_1",
              "638: retsub"
            ],
            [
              "98: bytec 4",
              "99: intc_0",
              "100: uncover 2",
              "101: setbit",
              "102: bytec_3",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 6 -> 36 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "67: main_del_global_state_example_route@13:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: callsub del_global_state_example"
            ],
            [
              "642: del_global_state_example:",
              "645: bytec 7",
              "646: app_global_del",
              "649: bytec 5",
              "650: app_global_del",
              "653: bytec 6",
              "654: app_global_del",
              "657: intc_1",
              "658: retsub"
            ],
            [
              "77: bytec 4",
              "78: intc_0",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_3",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_1",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 24 -> 25",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "258: main_bare_routing@14:",
              "261: txn OnCompletion",
              "262: bnz main_after_if_else@16"
            ],
            [
              "263: txn ApplicationID",
              "264: !",
              "265: assert",
              "266: intc_1",
              "267: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 24 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_1",
              "13: intc_3",
              "14: app_global_put",
              "17: bytec 8",
              "22: intc_2",
              "23: app_global_put",
              "27: bytec_2",
              "30: bytec_0",
              "36: app_global_put",
              "39: bytec 9",
              "44: bytec_0",
              "45: app_global_put",
              "48: bytec 10",
              "49: intc_1",
              "50: app_global_put"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "258: main_bare_routing@14:",
              "261: txn OnCompletion",
              "262: bnz main_after_if_else@16"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 22 -> 26 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "240: main_get_global_state_route@5:",
              "244: txn OnCompletion",
              "245: !",
              "246: assert",
              "247: txn ApplicationID",
              "248: assert",
              "249: callsub get_global_state"
            ],
            [
              "271: get_global_state:",
              "274: intc_0",
              "275: bytec_1",
              "276: app_global_get_ex",
              "277: intc_0",
              "278: cover 2",
              "279: select",
              "280: retsub"
            ],
            [
              "250: itob",
              "251: bytec_3",
              "252: swap",
              "253: concat",
              "254: log",
              "255: intc_1",
              "256: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20 -> 27 -> 28 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "302: intc_0",
              "303: frame_bury 1"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20 -> 27 -> 29 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "217: main_maybe_global_state_route@6:",
              "220: txn OnCompletion",
              "221: !",
              "222: assert",
              "223: txn ApplicationID",
              "224: assert",
              "225: callsub maybe_global_state"
            ],
            [
              "284: maybe_global_state:",
              "288: proto 0 2",
              "291: intc_0",
              "292: bytec_1",
              "293: app_global_get_ex",
              "294: dup",
              "295: uncover 2",
              "296: swap",
              "299: bnz maybe_global_state_after_if_else@2"
            ],
            [
              "305: maybe_global_state_after_if_else@2:",
              "308: frame_dig 1",
              "309: frame_dig 0",
              "310: uncover 3",
              "311: uncover 3",
              "312: retsub"
            ],
            [
              "226: swap",
              "227: itob",
              "228: bytec 4",
              "229: intc_0",
              "230: uncover 3",
              "231: setbit",
              "232: concat",
              "233: bytec_3",
              "234: swap",
              "235: concat",
              "236: log",
              "237: intc_1",
              "238: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 18 -> 30 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "197: main_get_global_state_example_route@7:",
              "200: txn OnCompletion",
              "201: !",
              "202: assert",
              "203: txn ApplicationID",
              "204: assert",
              "205: callsub get_global_state_example"
            ],
            [
              "316: get_global_state_example:",
              "319: intc_0",
              "320: bytec_1",
              "321: app_global_get_ex",
              "322: intc_0",
              "323: cover 2",
              "324: select",
              "325: intc_3",
              "326: ==",
              "327: assert",
              "330: intc_0",
              "331: bytec 8",
              "332: app_global_get_ex",
              "333: assert",
              "334: intc_2",
              "335: ==",
              "336: assert",
              "339: intc_0",
              "340: bytec 11",
              "341: app_global_get_ex",
              "342: intc_0",
              "343: cover 2",
              "344: select",
              "345: !",
              "346: assert",
              "349: intc_0",
              "350: bytec_2",
              "351: app_global_get_ex",
              "352: pushbytes 0x64656661756c74",
              "353: cover 2",
              "354: select",
              "355: bytec_0",
              "356: ==",
              "357: assert",
              "360: intc_1",
              "361: retsub"
            ],
            [
              "206: bytec 4",
              "207: intc_0",
              "208: uncover 2",
              "209: setbit",
              "210: bytec_3",
              "211: swap",
              "212: concat",
              "213: log",
              "214: intc_1",
              "215: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 31 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "176: main_maybe_global_state_example_route@8:",
              "180: txn OnCompletion",
              "181: !",
              "182: assert",
              "183: txn ApplicationID",
              "184: assert",
              "185: callsub maybe_global_state_example"
            ],
            [
              "365: maybe_global_state_example:",
              "368: intc_0",
              "369: bytec_1",
              "370: app_global_get_ex",
              "373: assert",
              "376: intc_3",
              "377: ==",
              "378: assert",
              "381: intc_0",
              "382: bytec_2",
              "383: app_global_get_ex",
              "386: assert",
              "389: bytec_0",
              "390: ==",
              "391: assert",
              "394: intc_0",
              "395: bytec_2",
              "396: app_global_get_ex",
              "397: bury 1",
              "400: !",
              "401: assert",
              "404: intc_0",
              "405: bytec_2",
              "406: app_global_get_ex",
              "407: assert",
              "408: bytec_0",
              "409: ==",
              "410: assert",
              "413: intc_0",
              "414: bytec 5",
              "415: app_global_get_ex",
              "418: assert",
              "421: assert",
              "424: intc_0",
              "425: bytec 6",
              "426: app_global_get_ex",
              "429: assert",
              "432: intc_2",
              "433: ==",
              "434: assert",
              "437: intc_0",
              "438: bytec 12",
              "439: app_global_get_ex",
              "442: assert",
              "445: intc_2",
              "446: ==",
              "447: assert",
              "450: intc_1",
              "451: retsub"
            ],
            [
              "186: bytec 4",
              "187: intc_0",
              "188: uncover 2",
              "189: setbit",
              "190: bytec_3",
              "191: swap",
              "192: concat",
              "193: log",
              "194: intc_1",
              "195: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 32 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "155: main_check_global_state_example_route@9:",
              "159: txn OnCompletion",
              "160: !",
              "161: assert",
              "162: txn ApplicationID",
              "163: assert",
              "164: callsub check_global_state_example"
            ],
            [
              "455: check_global_state_example:",
              "458: intc_0",
              "459: bytec_1",
              "460: app_global_get_ex",
              "461: assert",
              "462: intc_3",
              "463: ==",
              "464: assert",
              "467: intc_0",
              "468: bytec_2",
              "469: app_global_get_ex",
              "470: assert",
              "471: bytec_0",
              "472: ==",
              "473: assert",
              "476: intc_0",
              "477: bytec 8",
              "478: app_global_get_ex",
              "479: assert",
              "480: intc_2",
              "481: ==",
              "482: assert",
              "485: intc_0",
              "486: bytec 9",
              "487: app_global_get_ex",
              "488: assert",
              "489: bytec_0",
              "490: ==",
              "491: assert",
              "494: intc_0",
              "495: bytec 10",
              "496: app_global_get_ex",
              "497: assert",
              "498: assert",
              "501: intc_0",
              "502: bytec 11",
              "503: app_global_get_ex",
              "504: bury 1",
              "505: !",
              "506: assert",
              "509: intc_0",
              "510: bytec 7",
              "511: app_global_get_ex",
              "512: bury 1",
              "513: !",
              "514: assert",
              "517: intc_0",
              "518: bytec 5",
              "519: app_global_get_ex",
              "520: bury 1",
              "521: !",
              "522: assert",
              "525: intc_0",
              "526: bytec 6",
              "527: app_global_get_ex",
              "528: assert",
              "529: intc_2",
              "530: ==",
              "531: assert",
              "534: intc_0",
              "535: bytec 12",
              "536: app_global_get_ex",
              "537: assert",
              "538: intc_2",
              "539: ==",
              "540: assert",
              "543: intc_0",
              "544: pushbytes \"global_account\"",
              "545: app_global_get_ex",
              "546: assert",
              "547: intc_0",
              "548: assert",
              "549: bytec_0",
              "550: ==",
              "551: assert",
              "554: intc_1",
              "555: retsub"
            ],
            [
              "165: bytec 4",
              "166: intc_0",
              "167: uncover 2",
              "168: setbit",
              "169: bytec_3",
              "170: swap",
              "171: concat",
              "172: log",
              "173: intc_1",
              "174: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 33 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "135: main_set_global_state_route@10:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: extract 2 0",
              "151: callsub set_global_state"
            ],
            [
              "559: set_global_state:",
              "564: proto 1 0",
              "567: bytec_2",
              "568: frame_dig -1",
              "569: app_global_put",
              "570: retsub"
            ],
            [
              "152: intc_1",
              "153: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 34 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "109: main_set_global_state_example_route@11:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: btoi",
              "124: txnas Assets",
              "125: txna ApplicationArgs 3",
              "126: intc_0",
              "127: getbit",
              "131: callsub set_global_state_example"
            ],
            [
              "574: set_global_state_example:",
              "585: proto 3 0",
              "588: bytec 7",
              "589: frame_dig -3",
              "590: app_global_put",
              "593: intc_0",
              "594: bytec 7",
              "595: app_global_get_ex",
              "596: assert",
              "597: frame_dig -3",
              "598: ==",
              "599: assert",
              "602: bytec 5",
              "603: frame_dig -1",
              "604: app_global_put",
              "607: intc_0",
              "608: bytec 5",
              "609: app_global_get_ex",
              "610: assert",
              "611: assert",
              "614: bytec 6",
              "615: frame_dig -2",
              "616: app_global_put",
              "619: intc_0",
              "620: bytec 6",
              "621: app_global_get_ex",
              "622: assert",
              "623: frame_dig -2",
              "624: ==",
              "625: assert",
              "626: retsub"
            ],
            [
              "132: intc_1",
              "133: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 35 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "88: main_del_global_state_route@12:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub del_global_state"
            ],
            [
              "630: del_global_state:",
              "633: bytec_1",
              "634: app_global_del",
              "637: intc_1",
              "638: retsub"
            ],
            [
              "98: bytec 4",
              "99: intc_0",
              "100: uncover 2",
              "101: setbit",
              "102: bytec_3",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 36 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "57: pushbytess 0xce16d083 0x89e2e128 0xcf665878 0xd49869da 0x5ba4f469 0x866d4484 0x3868e4c7 0x3feae30e 0x8fd05d5a",
              "58: txna ApplicationArgs 0",
              "59: match main_get_global_state_route@5 main_maybe_global_state_route@6 main_get_global_state_example_route@7 main_maybe_global_state_example_route@8 main_check_global_state_example_route@9 main_set_global_state_route@10 main_set_global_state_example_route@11 main_del_global_state_route@12 main_del_global_state_example_route@13"
            ],
            [
              "67: main_del_global_state_example_route@13:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "76: callsub del_global_state_example"
            ],
            [
              "642: del_global_state_example:",
              "645: bytec 7",
              "646: app_global_del",
              "649: bytec 5",
              "650: app_global_del",
              "653: bytec 6",
              "654: app_global_del",
              "657: intc_1",
              "658: retsub"
            ],
            [
              "77: bytec 4",
              "78: intc_0",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_3",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_1",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 24 -> 25",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "258: main_bare_routing@14:",
              "261: txn OnCompletion",
              "262: bnz main_after_if_else@16"
            ],
            [
              "263: txn ApplicationID",
              "264: !",
              "265: assert",
              "266: intc_1",
              "267: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 24 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 10 50",
              "7: bytecblock 0x48656c6c6f \"global_int_full\" \"global_bytes_full\" 0x151f7c75 0x00 \"global_bool_no_default\" \"global_asset\" \"global_bytes_no_default\" \"global_int_simplified\" \"global_bytes_simplified\" \"global_bool_simplified\" \"global_int_no_default\" \"global_application\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "52: main_after_if_else@2:",
              "55: txn NumAppArgs",
              "56: bz main_bare_routing@14"
            ],
            [
              "258: main_bare_routing@14:",
              "261: txn OnCompletion",
              "262: bnz main_after_if_else@16"
            ],
            [
              "61: main_after_if_else@16:",
              "64: intc_0",
              "65: return"
            ]
          ]
        }
      ]
    }
  ]
}