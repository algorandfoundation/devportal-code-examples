{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 41,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 72 -> 76 -> 73",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "699: main_get_box_route@5:",
              "703: txn OnCompletion",
              "704: !",
              "705: assert",
              "706: txn ApplicationID",
              "707: assert",
              "708: callsub get_box"
            ],
            [
              "730: get_box:",
              "735: proto 0 1",
              "738: bytec_2",
              "739: box_get",
              "740: swap",
              "741: btoi",
              "742: swap",
              "743: assert",
              "744: retsub"
            ],
            [
              "709: itob",
              "710: bytec_1",
              "711: swap",
              "712: concat",
              "713: log",
              "714: intc_0",
              "715: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 70 -> 77 -> 71",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "671: main_get_item_box_map_route@6:",
              "674: txn OnCompletion",
              "675: !",
              "676: assert",
              "677: txn ApplicationID",
              "678: assert",
              "681: txna ApplicationArgs 1",
              "682: btoi",
              "685: callsub get_item_box_map"
            ],
            [
              "748: get_item_box_map:",
              "752: proto 1 1",
              "755: frame_dig -1",
              "756: itob",
              "757: box_get",
              "758: assert",
              "759: retsub"
            ],
            [
              "686: dup",
              "687: len",
              "688: itob",
              "689: extract 6 2",
              "690: swap",
              "691: concat",
              "692: bytec_1",
              "693: swap",
              "694: concat",
              "695: log",
              "696: intc_0",
              "697: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 68 -> 78 -> 69",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "649: main_get_box_map_route@7:",
              "652: txn OnCompletion",
              "653: !",
              "654: assert",
              "655: txn ApplicationID",
              "656: assert",
              "657: callsub get_box_map"
            ],
            [
              "763: get_box_map:",
              "767: proto 0 1",
              "770: intc_0",
              "773: itob",
              "774: box_get",
              "775: bytec 10",
              "776: cover 2",
              "777: select",
              "778: retsub"
            ],
            [
              "658: dup",
              "659: len",
              "660: itob",
              "661: extract 6 2",
              "662: swap",
              "663: concat",
              "664: bytec_1",
              "665: swap",
              "666: concat",
              "667: log",
              "668: intc_0",
              "669: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 66 -> 79 -> 67",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "637: main_get_box_ref_route@8:",
              "640: txn OnCompletion",
              "641: !",
              "642: assert",
              "643: txn ApplicationID",
              "644: assert",
              "645: callsub get_box_ref"
            ],
            [
              "782: get_box_ref:",
              "786: proto 0 0",
              "789: bytec_0",
              "792: intc_2",
              "793: box_create",
              "794: assert",
              "797: txn Sender",
              "800: bytec_0",
              "803: box_del",
              "804: assert",
              "807: bytec_0",
              "810: box_get",
              "811: dig 2",
              "812: cover 2",
              "813: select",
              "814: ==",
              "815: assert",
              "816: retsub"
            ],
            [
              "646: intc_0",
              "647: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 64 -> 80 -> 65",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "614: main_maybe_box_route@9:",
              "617: txn OnCompletion",
              "618: !",
              "619: assert",
              "620: txn ApplicationID",
              "621: assert",
              "622: callsub maybe_box"
            ],
            [
              "820: maybe_box:",
              "824: proto 0 2",
              "827: bytec_2",
              "828: box_get",
              "829: swap",
              "830: btoi",
              "833: swap",
              "834: retsub"
            ],
            [
              "623: swap",
              "624: itob",
              "625: bytec_3",
              "626: intc_1",
              "627: uncover 3",
              "628: setbit",
              "629: concat",
              "630: bytec_1",
              "631: swap",
              "632: concat",
              "633: log",
              "634: intc_0",
              "635: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 62 -> 81 -> 82 -> 83 -> 63",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "583: main_maybe_box_map_route@10:",
              "586: txn OnCompletion",
              "587: !",
              "588: assert",
              "589: txn ApplicationID",
              "590: assert",
              "591: callsub maybe_box_map"
            ],
            [
              "838: maybe_box_map:",
              "842: proto 0 2",
              "845: intc_0",
              "848: itob",
              "849: box_get",
              "850: dup",
              "851: uncover 2",
              "852: swap",
              "855: bnz maybe_box_map_after_if_else@2"
            ],
            [
              "858: pushbytes \"\"",
              "859: frame_bury 1"
            ],
            [
              "861: maybe_box_map_after_if_else@2:",
              "864: frame_dig 1",
              "865: frame_dig 0",
              "866: uncover 3",
              "867: uncover 3",
              "868: retsub"
            ],
            [
              "592: dig 1",
              "593: len",
              "594: itob",
              "595: extract 6 2",
              "596: uncover 2",
              "597: concat",
              "598: bytec_3",
              "599: intc_1",
              "600: uncover 3",
              "601: setbit",
              "602: bytec 15",
              "603: swap",
              "604: concat",
              "605: swap",
              "606: concat",
              "607: bytec_1",
              "608: swap",
              "609: concat",
              "610: log",
              "611: intc_0",
              "612: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 62 -> 81 -> 83 -> 63",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "583: main_maybe_box_map_route@10:",
              "586: txn OnCompletion",
              "587: !",
              "588: assert",
              "589: txn ApplicationID",
              "590: assert",
              "591: callsub maybe_box_map"
            ],
            [
              "838: maybe_box_map:",
              "842: proto 0 2",
              "845: intc_0",
              "848: itob",
              "849: box_get",
              "850: dup",
              "851: uncover 2",
              "852: swap",
              "855: bnz maybe_box_map_after_if_else@2"
            ],
            [
              "861: maybe_box_map_after_if_else@2:",
              "864: frame_dig 1",
              "865: frame_dig 0",
              "866: uncover 3",
              "867: uncover 3",
              "868: retsub"
            ],
            [
              "592: dig 1",
              "593: len",
              "594: itob",
              "595: extract 6 2",
              "596: uncover 2",
              "597: concat",
              "598: bytec_3",
              "599: intc_1",
              "600: uncover 3",
              "601: setbit",
              "602: bytec 15",
              "603: swap",
              "604: concat",
              "605: swap",
              "606: concat",
              "607: bytec_1",
              "608: swap",
              "609: concat",
              "610: log",
              "611: intc_0",
              "612: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 84 -> 85 -> 86 -> 61",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "552: main_maybe_box_ref_route@11:",
              "555: txn OnCompletion",
              "556: !",
              "557: assert",
              "558: txn ApplicationID",
              "559: assert",
              "560: callsub maybe_box_ref"
            ],
            [
              "872: maybe_box_ref:",
              "876: proto 0 2",
              "879: bytec_0",
              "882: intc_2",
              "883: box_create",
              "884: assert",
              "887: bytec_0",
              "890: box_get",
              "891: dup",
              "892: uncover 2",
              "893: swap",
              "896: bnz maybe_box_ref_after_if_else@2"
            ],
            [
              "899: pushbytes 0x",
              "900: frame_bury 1"
            ],
            [
              "902: maybe_box_ref_after_if_else@2:",
              "905: frame_dig 1",
              "906: frame_dig 0",
              "907: uncover 3",
              "908: uncover 3",
              "909: retsub"
            ],
            [
              "561: dig 1",
              "562: len",
              "563: itob",
              "564: extract 6 2",
              "565: uncover 2",
              "566: concat",
              "567: bytec_3",
              "568: intc_1",
              "569: uncover 3",
              "570: setbit",
              "571: bytec 15",
              "572: swap",
              "573: concat",
              "574: swap",
              "575: concat",
              "576: bytec_1",
              "577: swap",
              "578: concat",
              "579: log",
              "580: intc_0",
              "581: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 84 -> 86 -> 61",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "552: main_maybe_box_ref_route@11:",
              "555: txn OnCompletion",
              "556: !",
              "557: assert",
              "558: txn ApplicationID",
              "559: assert",
              "560: callsub maybe_box_ref"
            ],
            [
              "872: maybe_box_ref:",
              "876: proto 0 2",
              "879: bytec_0",
              "882: intc_2",
              "883: box_create",
              "884: assert",
              "887: bytec_0",
              "890: box_get",
              "891: dup",
              "892: uncover 2",
              "893: swap",
              "896: bnz maybe_box_ref_after_if_else@2"
            ],
            [
              "902: maybe_box_ref_after_if_else@2:",
              "905: frame_dig 1",
              "906: frame_dig 0",
              "907: uncover 3",
              "908: uncover 3",
              "909: retsub"
            ],
            [
              "561: dig 1",
              "562: len",
              "563: itob",
              "564: extract 6 2",
              "565: uncover 2",
              "566: concat",
              "567: bytec_3",
              "568: intc_1",
              "569: uncover 3",
              "570: setbit",
              "571: bytec 15",
              "572: swap",
              "573: concat",
              "574: swap",
              "575: concat",
              "576: bytec_1",
              "577: swap",
              "578: concat",
              "579: log",
              "580: intc_0",
              "581: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 58 -> 87 -> 59",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "513: main_get_box_example_route@12:",
              "517: txn OnCompletion",
              "518: !",
              "519: assert",
              "520: txn ApplicationID",
              "521: assert",
              "522: callsub get_box_example"
            ],
            [
              "913: get_box_example:",
              "918: proto 0 3",
              "921: bytec_2",
              "922: box_get",
              "923: swap",
              "924: btoi",
              "925: swap",
              "926: assert",
              "929: bytec 5",
              "930: box_get",
              "931: assert",
              "932: extract 2 0",
              "935: bytec 4",
              "936: box_get",
              "937: assert",
              "944: retsub"
            ],
            [
              "523: uncover 2",
              "524: itob",
              "525: dig 2",
              "526: len",
              "527: itob",
              "528: extract 6 2",
              "529: uncover 3",
              "530: concat",
              "531: swap",
              "532: pushbytes 0x000c",
              "533: concat",
              "534: dig 1",
              "535: len",
              "536: pushint 12",
              "537: +",
              "538: itob",
              "539: extract 6 2",
              "540: concat",
              "541: swap",
              "542: concat",
              "543: swap",
              "544: concat",
              "545: bytec_1",
              "546: swap",
              "547: concat",
              "548: log",
              "549: intc_0",
              "550: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 56 -> 88 -> 57",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "493: main_get_box_map_example_route@13:",
              "496: txn OnCompletion",
              "497: !",
              "498: assert",
              "499: txn ApplicationID",
              "500: assert",
              "501: callsub get_box_map_example"
            ],
            [
              "948: get_box_map_example:",
              "952: proto 0 1",
              "955: intc_0",
              "958: itob",
              "959: box_get",
              "960: bytec 10",
              "961: cover 2",
              "962: select",
              "963: bytec 10",
              "964: ==",
              "965: assert",
              "968: intc_0",
              "969: retsub"
            ],
            [
              "502: bytec_3",
              "503: intc_1",
              "504: uncover 2",
              "505: setbit",
              "506: bytec_1",
              "507: swap",
              "508: concat",
              "509: log",
              "510: intc_0",
              "511: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 54 -> 89 -> 55",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "481: main_maybe_box_example_route@14:",
              "484: txn OnCompletion",
              "485: !",
              "486: assert",
              "487: txn ApplicationID",
              "488: assert",
              "489: callsub maybe_box_example"
            ],
            [
              "973: maybe_box_example:",
              "977: proto 0 0",
              "980: bytec_2",
              "981: box_del",
              "982: pop",
              "985: bytec_2",
              "986: box_get",
              "987: swap",
              "988: btoi",
              "989: pushint 42",
              "990: swap",
              "991: uncover 2",
              "992: select",
              "993: pushint 42",
              "994: ==",
              "995: assert",
              "998: bytec_2",
              "999: box_get",
              "1000: swap",
              "1001: btoi",
              "1004: swap",
              "1005: !",
              "1006: assert",
              "1009: !",
              "1010: assert",
              "1011: retsub"
            ],
            [
              "490: intc_0",
              "491: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 52 -> 90 -> 53",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "469: main_maybe_box_map_example_route@15:",
              "472: txn OnCompletion",
              "473: !",
              "474: assert",
              "475: txn ApplicationID",
              "476: assert",
              "477: callsub maybe_box_map_example"
            ],
            [
              "1015: maybe_box_map_example:",
              "1019: proto 0 0",
              "1022: intc_0",
              "1025: itob",
              "1026: box_get",
              "1027: bury 1",
              "1030: !",
              "1031: assert",
              "1034: intc_1",
              "1037: itob",
              "1038: box_len",
              "1039: bury 1",
              "1040: assert",
              "1041: retsub"
            ],
            [
              "478: intc_0",
              "479: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 50 -> 91 -> 51",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "448: main_get_box_map_struct_route@16:",
              "451: txn OnCompletion",
              "452: !",
              "453: assert",
              "454: txn ApplicationID",
              "455: assert",
              "458: txna ApplicationArgs 1",
              "461: callsub get_box_map_struct"
            ],
            [
              "1045: get_box_map_struct:",
              "1049: proto 1 1",
              "1052: bytec 11",
              "1053: frame_dig -1",
              "1054: concat",
              "1055: box_get",
              "1056: assert",
              "1057: retsub"
            ],
            [
              "462: bytec_1",
              "463: swap",
              "464: concat",
              "465: log",
              "466: intc_0",
              "467: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 48 -> 92 -> 49",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "428: main_set_box_route@17:",
              "432: txn OnCompletion",
              "433: !",
              "434: assert",
              "435: txn ApplicationID",
              "436: assert",
              "439: txna ApplicationArgs 1",
              "440: btoi",
              "444: callsub set_box"
            ],
            [
              "1061: set_box:",
              "1066: proto 1 0",
              "1069: frame_dig -1",
              "1070: itob",
              "1071: bytec_2",
              "1072: swap",
              "1073: box_put",
              "1074: retsub"
            ],
            [
              "445: intc_0",
              "446: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 46 -> 93 -> 47",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "408: main_set_box_map_route@18:",
              "411: txn OnCompletion",
              "412: !",
              "413: assert",
              "414: txn ApplicationID",
              "415: assert",
              "418: txna ApplicationArgs 1",
              "419: btoi",
              "420: txna ApplicationArgs 2",
              "421: extract 2 0",
              "424: callsub set_box_map"
            ],
            [
              "1078: set_box_map:",
              "1082: proto 2 0",
              "1085: frame_dig -2",
              "1086: itob",
              "1087: dup",
              "1088: box_del",
              "1089: pop",
              "1090: frame_dig -1",
              "1091: box_put",
              "1092: retsub"
            ],
            [
              "425: intc_0",
              "426: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 44 -> 94 -> 45",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "382: main_set_box_map_struct_route@19:",
              "385: txn OnCompletion",
              "386: !",
              "387: assert",
              "388: txn ApplicationID",
              "389: assert",
              "392: txna ApplicationArgs 1",
              "393: txna ApplicationArgs 2",
              "396: callsub set_box_map_struct"
            ],
            [
              "1096: set_box_map_struct:",
              "1100: proto 2 1",
              "1103: bytec 11",
              "1104: frame_dig -2",
              "1105: concat",
              "1106: dup",
              "1107: box_del",
              "1108: pop",
              "1109: dup",
              "1110: frame_dig -1",
              "1111: box_put",
              "1114: box_get",
              "1115: assert",
              "1116: frame_dig -1",
              "1117: ==",
              "1118: assert",
              "1121: intc_0",
              "1122: retsub"
            ],
            [
              "397: bytec_3",
              "398: intc_1",
              "399: uncover 2",
              "400: setbit",
              "401: bytec_1",
              "402: swap",
              "403: concat",
              "404: log",
              "405: intc_0",
              "406: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 42 -> 95 -> 43",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "360: main_set_box_example_route@20:",
              "364: txn OnCompletion",
              "365: !",
              "366: assert",
              "367: txn ApplicationID",
              "368: assert",
              "371: txna ApplicationArgs 1",
              "372: btoi",
              "373: txna ApplicationArgs 2",
              "374: txna ApplicationArgs 3",
              "378: callsub set_box_example"
            ],
            [
              "1126: set_box_example:",
              "1136: proto 3 0",
              "1139: frame_dig -3",
              "1140: itob",
              "1141: bytec_2",
              "1142: swap",
              "1143: box_put",
              "1146: bytec 5",
              "1147: box_del",
              "1148: pop",
              "1149: bytec 5",
              "1150: frame_dig -2",
              "1151: box_put",
              "1154: bytec 4",
              "1155: box_del",
              "1156: pop",
              "1157: bytec 4",
              "1158: frame_dig -1",
              "1159: box_put",
              "1162: frame_dig -2",
              "1163: extract 2 0",
              "1164: bytec 12",
              "1165: box_del",
              "1166: pop",
              "1167: bytec 12",
              "1168: swap",
              "1169: box_put",
              "1172: bytec 5",
              "1173: box_get",
              "1174: assert",
              "1177: bytec 5",
              "1178: box_get",
              "1179: assert",
              "1180: intc_1",
              "1181: extract_uint16",
              "1182: swap",
              "1183: intc_1",
              "1184: extract_uint16",
              "1185: ==",
              "1190: assert",
              "1193: bytec_2",
              "1194: box_get",
              "1195: swap",
              "1196: btoi",
              "1197: swap",
              "1198: assert",
              "1199: pushint 3",
              "1200: +",
              "1201: itob",
              "1202: bytec_2",
              "1203: swap",
              "1204: box_put",
              "1205: retsub"
            ],
            [
              "379: intc_0",
              "380: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 40 -> 96 -> 41",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "347: main_delete_box_route@21:",
              "351: txn OnCompletion",
              "352: !",
              "353: assert",
              "354: txn ApplicationID",
              "355: assert",
              "356: callsub delete_box"
            ],
            [
              "1209: delete_box:",
              "1214: proto 0 0",
              "1217: bytec_2",
              "1218: box_del",
              "1219: pop",
              "1222: bytec 5",
              "1223: box_del",
              "1224: pop",
              "1227: bytec 4",
              "1228: box_del",
              "1229: pop",
              "1232: bytec_2",
              "1233: box_get",
              "1234: swap",
              "1235: btoi",
              "1236: pushint 42",
              "1237: swap",
              "1238: uncover 2",
              "1239: select",
              "1240: pushint 42",
              "1241: ==",
              "1242: assert",
              "1245: bytec 5",
              "1246: box_get",
              "1247: bytec 13",
              "1248: cover 2",
              "1249: select",
              "1250: extract 2 0",
              "1251: pushbytes 0x3432",
              "1252: ==",
              "1257: assert",
              "1260: bytec 4",
              "1261: box_get",
              "1262: bytec 13",
              "1263: cover 2",
              "1264: select",
              "1265: bytec 13",
              "1266: ==",
              "1267: assert",
              "1268: retsub"
            ],
            [
              "357: intc_0",
              "358: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 38 -> 97 -> 39",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "329: main_delete_box_map_route@22:",
              "332: txn OnCompletion",
              "333: !",
              "334: assert",
              "335: txn ApplicationID",
              "336: assert",
              "339: txna ApplicationArgs 1",
              "340: btoi",
              "343: callsub delete_box_map"
            ],
            [
              "1272: delete_box_map:",
              "1276: proto 1 0",
              "1279: frame_dig -1",
              "1280: itob",
              "1281: box_del",
              "1282: pop",
              "1283: retsub"
            ],
            [
              "344: intc_0",
              "345: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 36 -> 98 -> 37",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "317: main_delete_box_ref_route@23:",
              "320: txn OnCompletion",
              "321: !",
              "322: assert",
              "323: txn ApplicationID",
              "324: assert",
              "325: callsub delete_box_ref"
            ],
            [
              "1287: delete_box_ref:",
              "1291: proto 0 0",
              "1294: bytec 14",
              "1295: intc_2",
              "1296: box_create",
              "1297: pop",
              "1300: bytec 14",
              "1301: box_len",
              "1302: bury 1",
              "1303: assert",
              "1306: bytec 14",
              "1307: box_del",
              "1308: pop",
              "1311: bytec_0",
              "1314: box_get",
              "1317: !",
              "1318: assert",
              "1321: pushbytes 0x",
              "1322: ==",
              "1323: assert",
              "1324: retsub"
            ],
            [
              "326: intc_0",
              "327: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 34 -> 99 -> 100 -> 35",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "299: main_box_map_length_route@24:",
              "303: txn OnCompletion",
              "304: !",
              "305: assert",
              "306: txn ApplicationID",
              "307: assert",
              "308: callsub box_map_length"
            ],
            [
              "1328: box_map_length:",
              "1333: proto 0 1",
              "1336: intc_1",
              "1339: itob",
              "1340: dup",
              "1341: box_len",
              "1342: bury 1",
              "1343: bnz box_map_length_after_if_else@2"
            ],
            [
              "1346: intc_1",
              "1347: swap",
              "1348: retsub"
            ],
            [
              "309: itob",
              "310: bytec_1",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_0",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 34 -> 99 -> 101 -> 35",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "299: main_box_map_length_route@24:",
              "303: txn OnCompletion",
              "304: !",
              "305: assert",
              "306: txn ApplicationID",
              "307: assert",
              "308: callsub box_map_length"
            ],
            [
              "1328: box_map_length:",
              "1333: proto 0 1",
              "1336: intc_1",
              "1339: itob",
              "1340: dup",
              "1341: box_len",
              "1342: bury 1",
              "1343: bnz box_map_length_after_if_else@2"
            ],
            [
              "1350: box_map_length_after_if_else@2:",
              "1353: frame_dig 0",
              "1354: box_len",
              "1355: assert",
              "1356: swap",
              "1357: retsub"
            ],
            [
              "309: itob",
              "310: bytec_1",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_0",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 32 -> 102 -> 33",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "282: main_length_box_ref_route@25:",
              "285: txn OnCompletion",
              "286: !",
              "287: assert",
              "288: txn ApplicationID",
              "289: assert",
              "290: callsub length_box_ref"
            ],
            [
              "1361: length_box_ref:",
              "1365: proto 0 1",
              "1368: bytec_0",
              "1371: intc_2",
              "1372: box_create",
              "1373: assert",
              "1376: bytec_0",
              "1379: box_len",
              "1380: assert",
              "1381: retsub"
            ],
            [
              "291: itob",
              "292: bytec_1",
              "293: swap",
              "294: concat",
              "295: log",
              "296: intc_0",
              "297: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 30 -> 103 -> 31",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "262: main_box_map_struct_length_route@26:",
              "265: txn OnCompletion",
              "266: !",
              "267: assert",
              "268: txn ApplicationID",
              "269: assert",
              "270: callsub box_map_struct_length"
            ],
            [
              "1385: box_map_struct_length:",
              "1389: proto 0 1",
              "1392: bytec 7",
              "1393: box_del",
              "1394: pop",
              "1395: bytec 7",
              "1398: pushbytes 0x0012000000000000004600000000000000020008746573744e616d65",
              "1401: box_put",
              "1404: bytec 7",
              "1405: box_len",
              "1406: assert",
              "1407: pushint 28",
              "1408: ==",
              "1409: assert",
              "1412: bytec 7",
              "1413: box_len",
              "1414: assert",
              "1415: pushint 28",
              "1416: ==",
              "1417: assert",
              "1420: intc_0",
              "1421: retsub"
            ],
            [
              "271: bytec_3",
              "272: intc_1",
              "273: uncover 2",
              "274: setbit",
              "275: bytec_1",
              "276: swap",
              "277: concat",
              "278: log",
              "279: intc_0",
              "280: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 28 -> 104 -> 29",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "249: main_box_map_length_example_route@27:",
              "253: txn OnCompletion",
              "254: !",
              "255: assert",
              "256: txn ApplicationID",
              "257: assert",
              "258: callsub box_map_length_example"
            ],
            [
              "1425: box_map_length_example:",
              "1430: proto 0 0",
              "1433: intc_1",
              "1436: itob",
              "1437: dup",
              "1438: box_del",
              "1439: pop",
              "1440: dup",
              "1443: pushbytes \"Hmmmmm\"",
              "1446: box_put",
              "1449: dup",
              "1450: box_len",
              "1451: assert",
              "1452: pushint 6",
              "1453: ==",
              "1454: assert",
              "1457: box_len",
              "1458: assert",
              "1459: pushint 6",
              "1460: ==",
              "1461: assert",
              "1462: retsub"
            ],
            [
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 26 -> 105 -> 27",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "237: main_length_box_ref_example_route@28:",
              "240: txn OnCompletion",
              "241: !",
              "242: assert",
              "243: txn ApplicationID",
              "244: assert",
              "245: callsub length_box_ref_example"
            ],
            [
              "1466: length_box_ref_example:",
              "1470: proto 0 0",
              "1473: bytec_0",
              "1476: intc_2",
              "1477: box_create",
              "1478: assert",
              "1481: bytec_0",
              "1484: box_len",
              "1485: assert",
              "1486: intc_3",
              "1487: ==",
              "1488: assert",
              "1491: bytec_0",
              "1494: intc_2",
              "1495: box_create",
              "1496: assert",
              "1499: bytec_0",
              "1502: box_len",
              "1503: assert",
              "1504: intc_3",
              "1505: ==",
              "1506: assert",
              "1509: bytec_0",
              "1512: intc_2",
              "1513: box_create",
              "1514: assert",
              "1517: bytec_0",
              "1520: box_len",
              "1521: assert",
              "1522: intc_3",
              "1523: ==",
              "1524: assert",
              "1527: bytec_0",
              "1530: intc_2",
              "1531: box_create",
              "1532: assert",
              "1535: bytec_0",
              "1538: box_len",
              "1539: assert",
              "1540: intc_3",
              "1541: ==",
              "1542: assert",
              "1543: retsub"
            ],
            [
              "246: intc_0",
              "247: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 24 -> 106 -> 25",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "224: main_extract_box_ref_route@29:",
              "228: txn OnCompletion",
              "229: !",
              "230: assert",
              "231: txn ApplicationID",
              "232: assert",
              "233: callsub extract_box_ref"
            ],
            [
              "1547: extract_box_ref:",
              "1552: proto 0 0",
              "1555: bytec_0",
              "1558: intc_2",
              "1559: box_create",
              "1560: assert",
              "1563: txn Sender",
              "1566: global CurrentApplicationAddress",
              "1569: bytec_0",
              "1572: intc_1",
              "1573: dig 3",
              "1574: box_replace",
              "1577: bytec_0",
              "1580: intc_1",
              "1581: dup",
              "1582: dig 3",
              "1583: UNSUPPORTED box_splice",
              "1586: bytec_0",
              "1589: intc_3",
              "1592: bytec 8",
              "1595: box_replace",
              "1598: bytec_0",
              "1601: intc_1",
              "1602: pushint 69",
              "1603: box_extract",
              "1606: swap",
              "1607: uncover 2",
              "1608: concat",
              "1611: bytec 8",
              "1614: concat",
              "1615: ==",
              "1616: assert",
              "1617: retsub"
            ],
            [
              "234: intc_0",
              "235: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 22 -> 107 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "211: main_manipulate_box_ref_route@30:",
              "215: txn OnCompletion",
              "216: !",
              "217: assert",
              "218: txn ApplicationID",
              "219: assert",
              "220: callsub manipulate_box_ref"
            ],
            [
              "1621: manipulate_box_ref:",
              "1626: proto 0 0",
              "1629: bytec_0",
              "1632: intc_2",
              "1633: box_create",
              "1634: assert",
              "1637: bytec_0",
              "1640: box_len",
              "1641: bury 1",
              "1642: assert",
              "1646: txn Sender",
              "1649: global CurrentApplicationAddress",
              "1652: bytec_0",
              "1655: intc_1",
              "1656: dig 3",
              "1657: box_replace",
              "1660: bytec_0",
              "1663: intc_1",
              "1664: dup",
              "1665: dig 3",
              "1666: UNSUPPORTED box_splice",
              "1669: bytec_0",
              "1672: intc_3",
              "1675: bytec 8",
              "1678: box_replace",
              "1681: bytec_0",
              "1684: intc_1",
              "1685: pushint 69",
              "1686: box_extract",
              "1689: dig 1",
              "1690: dig 3",
              "1691: concat",
              "1694: bytec 8",
              "1697: concat",
              "1698: ==",
              "1699: assert",
              "1702: bytec_0",
              "1705: box_del",
              "1706: assert",
              "1709: concat",
              "1712: bytec_0",
              "1715: swap",
              "1716: box_put",
              "1719: bytec_0",
              "1722: box_len",
              "1723: bury 1",
              "1724: assert",
              "1727: bytec_0",
              "1730: box_len",
              "1731: assert",
              "1732: intc_3",
              "1733: ==",
              "1734: assert",
              "1735: retsub"
            ],
            [
              "221: intc_0",
              "222: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 20 -> 108 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "198: main_value_box_route@31:",
              "202: txn OnCompletion",
              "203: !",
              "204: assert",
              "205: txn ApplicationID",
              "206: assert",
              "207: callsub value_box"
            ],
            [
              "1739: value_box:",
              "1744: proto 0 0",
              "1747: bytec_2",
              "1748: box_get",
              "1749: swap",
              "1750: btoi",
              "1751: swap",
              "1752: assert",
              "1753: pushint 10",
              "1754: ==",
              "1755: assert",
              "1756: retsub"
            ],
            [
              "208: intc_0",
              "209: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 18 -> 109 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "178: main_exist_box_route@32:",
              "181: txn OnCompletion",
              "182: !",
              "183: assert",
              "184: txn ApplicationID",
              "185: assert",
              "186: callsub exist_box"
            ],
            [
              "1760: exist_box:",
              "1764: proto 0 1",
              "1767: bytec_2",
              "1768: box_len",
              "1769: bury 1",
              "1770: retsub"
            ],
            [
              "187: bytec_3",
              "188: intc_1",
              "189: uncover 2",
              "190: setbit",
              "191: bytec_1",
              "192: swap",
              "193: concat",
              "194: log",
              "195: intc_0",
              "196: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 16 -> 110 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "137: main_exist_box_example_route@33:",
              "140: txn OnCompletion",
              "141: !",
              "142: assert",
              "143: txn ApplicationID",
              "144: assert",
              "145: callsub exist_box_example"
            ],
            [
              "1774: exist_box_example:",
              "1778: proto 0 3",
              "1781: bytec 5",
              "1782: box_len",
              "1783: bury 1",
              "1784: bytec 4",
              "1785: box_len",
              "1786: bury 1",
              "1787: bytec 12",
              "1788: box_len",
              "1789: bury 1",
              "1790: retsub"
            ],
            [
              "146: bytec_3",
              "147: intc_1",
              "148: uncover 4",
              "149: setbit",
              "150: bytec_3",
              "151: intc_1",
              "152: uncover 4",
              "153: setbit",
              "154: bytec_3",
              "155: intc_1",
              "156: uncover 4",
              "157: setbit",
              "158: swap",
              "159: intc_1",
              "160: getbit",
              "161: uncover 2",
              "162: intc_0",
              "163: uncover 2",
              "164: setbit",
              "165: swap",
              "166: intc_1",
              "167: getbit",
              "168: pushint 2",
              "169: swap",
              "170: setbit",
              "171: bytec_1",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 111 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "125: main_slice_box_route@34:",
              "128: txn OnCompletion",
              "129: !",
              "130: assert",
              "131: txn ApplicationID",
              "132: assert",
              "133: callsub slice_box"
            ],
            [
              "1794: slice_box:",
              "1798: proto 0 0",
              "1801: bytec 9",
              "1804: box_del",
              "1805: pop",
              "1808: bytec 9",
              "1811: pushbytes 0x54657374696e672074657374696e6720313233",
              "1812: box_put",
              "1815: bytec 9",
              "1818: box_len",
              "1819: pop",
              "1820: dup",
              "1821: intc_1",
              "1822: dig 2",
              "1823: select",
              "1824: pushint 7",
              "1825: dig 2",
              "1826: <",
              "1827: uncover 2",
              "1828: pushint 7",
              "1829: uncover 2",
              "1830: select",
              "1831: dig 1",
              "1832: -",
              "1835: bytec 9",
              "1838: cover 2",
              "1839: box_extract",
              "1840: pushbytes 0x54657374696e67",
              "1841: ==",
              "1842: assert",
              "1845: bytec 4",
              "1846: box_del",
              "1847: pop",
              "1848: bytec 4",
              "1849: pushbytes 0x000548656c6c6f",
              "1850: box_put",
              "1853: bytec 4",
              "1854: box_len",
              "1855: pop",
              "1856: pushint 2",
              "1857: dig 1",
              "1858: <",
              "1859: dig 1",
              "1860: pushint 2",
              "1861: uncover 2",
              "1862: select",
              "1863: pushint 10",
              "1864: dig 2",
              "1865: <",
              "1866: uncover 2",
              "1867: pushint 10",
              "1868: uncover 2",
              "1869: select",
              "1870: dig 1",
              "1871: -",
              "1872: bytec 4",
              "1873: cover 2",
              "1874: box_extract",
              "1875: pushbytes 0x48656c6c6f",
              "1876: ==",
              "1877: assert",
              "1878: retsub"
            ],
            [
              "134: intc_0",
              "135: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 112 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "113: main_arc4_box_route@35:",
              "116: txn OnCompletion",
              "117: !",
              "118: assert",
              "119: txn ApplicationID",
              "120: assert",
              "121: callsub arc4_box"
            ],
            [
              "1882: arc4_box:",
              "1886: proto 0 0",
              "1889: bytec 6",
              "1894: pushbytes 0x00010203",
              "1895: box_put",
              "1898: bytec 6",
              "1901: box_get",
              "1902: assert",
              "1903: extract 0 1",
              "1904: bytec_3",
              "1905: b==",
              "1906: assert",
              "1909: bytec 6",
              "1912: box_get",
              "1913: assert",
              "1914: extract 1 1",
              "1915: pushbytes 0x01",
              "1916: b==",
              "1917: assert",
              "1920: bytec 6",
              "1923: box_get",
              "1924: assert",
              "1925: extract 2 1",
              "1926: pushbytes 0x02",
              "1927: b==",
              "1928: assert",
              "1931: bytec 6",
              "1934: box_get",
              "1935: assert",
              "1936: extract 3 1",
              "1937: pushbytes 0x03",
              "1938: b==",
              "1939: assert",
              "1940: retsub"
            ],
            [
              "122: intc_0",
              "123: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "100: main_key_box_route@36:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: pushbytes 0x151f7c750007626f785f696e74",
              "109: log",
              "110: intc_0",
              "111: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 9 -> 113 -> 10",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "88: main_key_box_example_route@37:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: callsub key_box_example"
            ],
            [
              "1944: key_box_example:",
              "1948: proto 0 0",
              "1951: intc_1",
              "1952: assert",
              "1953: retsub"
            ],
            [
              "97: intc_0",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 7 -> 114 -> 8",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "60: main_box_map_exists_route@38:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "76: callsub box_map_exists"
            ],
            [
              "1957: box_map_exists:",
              "1962: proto 1 1",
              "1965: frame_dig -1",
              "1966: itob",
              "1967: box_len",
              "1968: bury 1",
              "1969: retsub"
            ],
            [
              "77: bytec_3",
              "78: intc_1",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_1",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_0",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 5 -> 115 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "35: main_box_map_struct_exists_route@39:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: assert",
              "45: txna ApplicationArgs 1",
              "48: callsub box_map_struct_exists"
            ],
            [
              "1973: box_map_struct_exists:",
              "1977: proto 1 1",
              "1980: bytec 11",
              "1981: frame_dig -1",
              "1982: concat",
              "1983: box_len",
              "1984: bury 1",
              "1985: retsub"
            ],
            [
              "49: bytec_3",
              "50: intc_1",
              "51: uncover 2",
              "52: setbit",
              "53: bytec_1",
              "54: swap",
              "55: concat",
              "56: log",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "22: main_key_prefix_box_map_route@40:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: pushbytes 0x151f7c750000",
              "31: log",
              "32: intc_0",
              "33: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 74 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "717: main_bare_routing@41:",
              "720: txn OnCompletion",
              "721: bnz main_after_if_else@43"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 41,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 72 -> 76 -> 73",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "699: main_get_box_route@5:",
              "703: txn OnCompletion",
              "704: !",
              "705: assert",
              "706: txn ApplicationID",
              "707: assert",
              "708: callsub get_box"
            ],
            [
              "730: get_box:",
              "735: proto 0 1",
              "738: bytec_2",
              "739: box_get",
              "740: swap",
              "741: btoi",
              "742: swap",
              "743: assert",
              "744: retsub"
            ],
            [
              "709: itob",
              "710: bytec_1",
              "711: swap",
              "712: concat",
              "713: log",
              "714: intc_0",
              "715: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 70 -> 77 -> 71",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "671: main_get_item_box_map_route@6:",
              "674: txn OnCompletion",
              "675: !",
              "676: assert",
              "677: txn ApplicationID",
              "678: assert",
              "681: txna ApplicationArgs 1",
              "682: btoi",
              "685: callsub get_item_box_map"
            ],
            [
              "748: get_item_box_map:",
              "752: proto 1 1",
              "755: frame_dig -1",
              "756: itob",
              "757: box_get",
              "758: assert",
              "759: retsub"
            ],
            [
              "686: dup",
              "687: len",
              "688: itob",
              "689: extract 6 2",
              "690: swap",
              "691: concat",
              "692: bytec_1",
              "693: swap",
              "694: concat",
              "695: log",
              "696: intc_0",
              "697: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 68 -> 78 -> 69",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "649: main_get_box_map_route@7:",
              "652: txn OnCompletion",
              "653: !",
              "654: assert",
              "655: txn ApplicationID",
              "656: assert",
              "657: callsub get_box_map"
            ],
            [
              "763: get_box_map:",
              "767: proto 0 1",
              "770: intc_0",
              "773: itob",
              "774: box_get",
              "775: bytec 10",
              "776: cover 2",
              "777: select",
              "778: retsub"
            ],
            [
              "658: dup",
              "659: len",
              "660: itob",
              "661: extract 6 2",
              "662: swap",
              "663: concat",
              "664: bytec_1",
              "665: swap",
              "666: concat",
              "667: log",
              "668: intc_0",
              "669: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 66 -> 79 -> 67",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "637: main_get_box_ref_route@8:",
              "640: txn OnCompletion",
              "641: !",
              "642: assert",
              "643: txn ApplicationID",
              "644: assert",
              "645: callsub get_box_ref"
            ],
            [
              "782: get_box_ref:",
              "786: proto 0 0",
              "789: bytec_0",
              "792: intc_2",
              "793: box_create",
              "794: assert",
              "797: txn Sender",
              "800: bytec_0",
              "803: box_del",
              "804: assert",
              "807: bytec_0",
              "810: box_get",
              "811: dig 2",
              "812: cover 2",
              "813: select",
              "814: ==",
              "815: assert",
              "816: retsub"
            ],
            [
              "646: intc_0",
              "647: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 64 -> 80 -> 65",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "614: main_maybe_box_route@9:",
              "617: txn OnCompletion",
              "618: !",
              "619: assert",
              "620: txn ApplicationID",
              "621: assert",
              "622: callsub maybe_box"
            ],
            [
              "820: maybe_box:",
              "824: proto 0 2",
              "827: bytec_2",
              "828: box_get",
              "829: swap",
              "830: btoi",
              "833: swap",
              "834: retsub"
            ],
            [
              "623: swap",
              "624: itob",
              "625: bytec_3",
              "626: intc_1",
              "627: uncover 3",
              "628: setbit",
              "629: concat",
              "630: bytec_1",
              "631: swap",
              "632: concat",
              "633: log",
              "634: intc_0",
              "635: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 62 -> 81 -> 82 -> 83 -> 63",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "583: main_maybe_box_map_route@10:",
              "586: txn OnCompletion",
              "587: !",
              "588: assert",
              "589: txn ApplicationID",
              "590: assert",
              "591: callsub maybe_box_map"
            ],
            [
              "838: maybe_box_map:",
              "842: proto 0 2",
              "845: intc_0",
              "848: itob",
              "849: box_get",
              "850: dup",
              "851: uncover 2",
              "852: swap",
              "855: bnz maybe_box_map_after_if_else@2"
            ],
            [
              "858: pushbytes \"\"",
              "859: frame_bury 1"
            ],
            [
              "861: maybe_box_map_after_if_else@2:",
              "864: frame_dig 1",
              "865: frame_dig 0",
              "866: uncover 3",
              "867: uncover 3",
              "868: retsub"
            ],
            [
              "592: dig 1",
              "593: len",
              "594: itob",
              "595: extract 6 2",
              "596: uncover 2",
              "597: concat",
              "598: bytec_3",
              "599: intc_1",
              "600: uncover 3",
              "601: setbit",
              "602: bytec 15",
              "603: swap",
              "604: concat",
              "605: swap",
              "606: concat",
              "607: bytec_1",
              "608: swap",
              "609: concat",
              "610: log",
              "611: intc_0",
              "612: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 62 -> 81 -> 83 -> 63",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "583: main_maybe_box_map_route@10:",
              "586: txn OnCompletion",
              "587: !",
              "588: assert",
              "589: txn ApplicationID",
              "590: assert",
              "591: callsub maybe_box_map"
            ],
            [
              "838: maybe_box_map:",
              "842: proto 0 2",
              "845: intc_0",
              "848: itob",
              "849: box_get",
              "850: dup",
              "851: uncover 2",
              "852: swap",
              "855: bnz maybe_box_map_after_if_else@2"
            ],
            [
              "861: maybe_box_map_after_if_else@2:",
              "864: frame_dig 1",
              "865: frame_dig 0",
              "866: uncover 3",
              "867: uncover 3",
              "868: retsub"
            ],
            [
              "592: dig 1",
              "593: len",
              "594: itob",
              "595: extract 6 2",
              "596: uncover 2",
              "597: concat",
              "598: bytec_3",
              "599: intc_1",
              "600: uncover 3",
              "601: setbit",
              "602: bytec 15",
              "603: swap",
              "604: concat",
              "605: swap",
              "606: concat",
              "607: bytec_1",
              "608: swap",
              "609: concat",
              "610: log",
              "611: intc_0",
              "612: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 84 -> 85 -> 86 -> 61",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "552: main_maybe_box_ref_route@11:",
              "555: txn OnCompletion",
              "556: !",
              "557: assert",
              "558: txn ApplicationID",
              "559: assert",
              "560: callsub maybe_box_ref"
            ],
            [
              "872: maybe_box_ref:",
              "876: proto 0 2",
              "879: bytec_0",
              "882: intc_2",
              "883: box_create",
              "884: assert",
              "887: bytec_0",
              "890: box_get",
              "891: dup",
              "892: uncover 2",
              "893: swap",
              "896: bnz maybe_box_ref_after_if_else@2"
            ],
            [
              "899: pushbytes 0x",
              "900: frame_bury 1"
            ],
            [
              "902: maybe_box_ref_after_if_else@2:",
              "905: frame_dig 1",
              "906: frame_dig 0",
              "907: uncover 3",
              "908: uncover 3",
              "909: retsub"
            ],
            [
              "561: dig 1",
              "562: len",
              "563: itob",
              "564: extract 6 2",
              "565: uncover 2",
              "566: concat",
              "567: bytec_3",
              "568: intc_1",
              "569: uncover 3",
              "570: setbit",
              "571: bytec 15",
              "572: swap",
              "573: concat",
              "574: swap",
              "575: concat",
              "576: bytec_1",
              "577: swap",
              "578: concat",
              "579: log",
              "580: intc_0",
              "581: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 84 -> 86 -> 61",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "552: main_maybe_box_ref_route@11:",
              "555: txn OnCompletion",
              "556: !",
              "557: assert",
              "558: txn ApplicationID",
              "559: assert",
              "560: callsub maybe_box_ref"
            ],
            [
              "872: maybe_box_ref:",
              "876: proto 0 2",
              "879: bytec_0",
              "882: intc_2",
              "883: box_create",
              "884: assert",
              "887: bytec_0",
              "890: box_get",
              "891: dup",
              "892: uncover 2",
              "893: swap",
              "896: bnz maybe_box_ref_after_if_else@2"
            ],
            [
              "902: maybe_box_ref_after_if_else@2:",
              "905: frame_dig 1",
              "906: frame_dig 0",
              "907: uncover 3",
              "908: uncover 3",
              "909: retsub"
            ],
            [
              "561: dig 1",
              "562: len",
              "563: itob",
              "564: extract 6 2",
              "565: uncover 2",
              "566: concat",
              "567: bytec_3",
              "568: intc_1",
              "569: uncover 3",
              "570: setbit",
              "571: bytec 15",
              "572: swap",
              "573: concat",
              "574: swap",
              "575: concat",
              "576: bytec_1",
              "577: swap",
              "578: concat",
              "579: log",
              "580: intc_0",
              "581: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 58 -> 87 -> 59",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "513: main_get_box_example_route@12:",
              "517: txn OnCompletion",
              "518: !",
              "519: assert",
              "520: txn ApplicationID",
              "521: assert",
              "522: callsub get_box_example"
            ],
            [
              "913: get_box_example:",
              "918: proto 0 3",
              "921: bytec_2",
              "922: box_get",
              "923: swap",
              "924: btoi",
              "925: swap",
              "926: assert",
              "929: bytec 5",
              "930: box_get",
              "931: assert",
              "932: extract 2 0",
              "935: bytec 4",
              "936: box_get",
              "937: assert",
              "944: retsub"
            ],
            [
              "523: uncover 2",
              "524: itob",
              "525: dig 2",
              "526: len",
              "527: itob",
              "528: extract 6 2",
              "529: uncover 3",
              "530: concat",
              "531: swap",
              "532: pushbytes 0x000c",
              "533: concat",
              "534: dig 1",
              "535: len",
              "536: pushint 12",
              "537: +",
              "538: itob",
              "539: extract 6 2",
              "540: concat",
              "541: swap",
              "542: concat",
              "543: swap",
              "544: concat",
              "545: bytec_1",
              "546: swap",
              "547: concat",
              "548: log",
              "549: intc_0",
              "550: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 56 -> 88 -> 57",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "493: main_get_box_map_example_route@13:",
              "496: txn OnCompletion",
              "497: !",
              "498: assert",
              "499: txn ApplicationID",
              "500: assert",
              "501: callsub get_box_map_example"
            ],
            [
              "948: get_box_map_example:",
              "952: proto 0 1",
              "955: intc_0",
              "958: itob",
              "959: box_get",
              "960: bytec 10",
              "961: cover 2",
              "962: select",
              "963: bytec 10",
              "964: ==",
              "965: assert",
              "968: intc_0",
              "969: retsub"
            ],
            [
              "502: bytec_3",
              "503: intc_1",
              "504: uncover 2",
              "505: setbit",
              "506: bytec_1",
              "507: swap",
              "508: concat",
              "509: log",
              "510: intc_0",
              "511: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 54 -> 89 -> 55",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "481: main_maybe_box_example_route@14:",
              "484: txn OnCompletion",
              "485: !",
              "486: assert",
              "487: txn ApplicationID",
              "488: assert",
              "489: callsub maybe_box_example"
            ],
            [
              "973: maybe_box_example:",
              "977: proto 0 0",
              "980: bytec_2",
              "981: box_del",
              "982: pop",
              "985: bytec_2",
              "986: box_get",
              "987: swap",
              "988: btoi",
              "989: pushint 42",
              "990: swap",
              "991: uncover 2",
              "992: select",
              "993: pushint 42",
              "994: ==",
              "995: assert",
              "998: bytec_2",
              "999: box_get",
              "1000: swap",
              "1001: btoi",
              "1004: swap",
              "1005: !",
              "1006: assert",
              "1009: !",
              "1010: assert",
              "1011: retsub"
            ],
            [
              "490: intc_0",
              "491: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 52 -> 90 -> 53",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "469: main_maybe_box_map_example_route@15:",
              "472: txn OnCompletion",
              "473: !",
              "474: assert",
              "475: txn ApplicationID",
              "476: assert",
              "477: callsub maybe_box_map_example"
            ],
            [
              "1015: maybe_box_map_example:",
              "1019: proto 0 0",
              "1022: intc_0",
              "1025: itob",
              "1026: box_get",
              "1027: bury 1",
              "1030: !",
              "1031: assert",
              "1034: intc_1",
              "1037: itob",
              "1038: box_len",
              "1039: bury 1",
              "1040: assert",
              "1041: retsub"
            ],
            [
              "478: intc_0",
              "479: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 50 -> 91 -> 51",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "448: main_get_box_map_struct_route@16:",
              "451: txn OnCompletion",
              "452: !",
              "453: assert",
              "454: txn ApplicationID",
              "455: assert",
              "458: txna ApplicationArgs 1",
              "461: callsub get_box_map_struct"
            ],
            [
              "1045: get_box_map_struct:",
              "1049: proto 1 1",
              "1052: bytec 11",
              "1053: frame_dig -1",
              "1054: concat",
              "1055: box_get",
              "1056: assert",
              "1057: retsub"
            ],
            [
              "462: bytec_1",
              "463: swap",
              "464: concat",
              "465: log",
              "466: intc_0",
              "467: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 48 -> 92 -> 49",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "428: main_set_box_route@17:",
              "432: txn OnCompletion",
              "433: !",
              "434: assert",
              "435: txn ApplicationID",
              "436: assert",
              "439: txna ApplicationArgs 1",
              "440: btoi",
              "444: callsub set_box"
            ],
            [
              "1061: set_box:",
              "1066: proto 1 0",
              "1069: frame_dig -1",
              "1070: itob",
              "1071: bytec_2",
              "1072: swap",
              "1073: box_put",
              "1074: retsub"
            ],
            [
              "445: intc_0",
              "446: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 46 -> 93 -> 47",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "408: main_set_box_map_route@18:",
              "411: txn OnCompletion",
              "412: !",
              "413: assert",
              "414: txn ApplicationID",
              "415: assert",
              "418: txna ApplicationArgs 1",
              "419: btoi",
              "420: txna ApplicationArgs 2",
              "421: extract 2 0",
              "424: callsub set_box_map"
            ],
            [
              "1078: set_box_map:",
              "1082: proto 2 0",
              "1085: frame_dig -2",
              "1086: itob",
              "1087: dup",
              "1088: box_del",
              "1089: pop",
              "1090: frame_dig -1",
              "1091: box_put",
              "1092: retsub"
            ],
            [
              "425: intc_0",
              "426: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 44 -> 94 -> 45",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "382: main_set_box_map_struct_route@19:",
              "385: txn OnCompletion",
              "386: !",
              "387: assert",
              "388: txn ApplicationID",
              "389: assert",
              "392: txna ApplicationArgs 1",
              "393: txna ApplicationArgs 2",
              "396: callsub set_box_map_struct"
            ],
            [
              "1096: set_box_map_struct:",
              "1100: proto 2 1",
              "1103: bytec 11",
              "1104: frame_dig -2",
              "1105: concat",
              "1106: dup",
              "1107: box_del",
              "1108: pop",
              "1109: dup",
              "1110: frame_dig -1",
              "1111: box_put",
              "1114: box_get",
              "1115: assert",
              "1116: frame_dig -1",
              "1117: ==",
              "1118: assert",
              "1121: intc_0",
              "1122: retsub"
            ],
            [
              "397: bytec_3",
              "398: intc_1",
              "399: uncover 2",
              "400: setbit",
              "401: bytec_1",
              "402: swap",
              "403: concat",
              "404: log",
              "405: intc_0",
              "406: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 42 -> 95 -> 43",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "360: main_set_box_example_route@20:",
              "364: txn OnCompletion",
              "365: !",
              "366: assert",
              "367: txn ApplicationID",
              "368: assert",
              "371: txna ApplicationArgs 1",
              "372: btoi",
              "373: txna ApplicationArgs 2",
              "374: txna ApplicationArgs 3",
              "378: callsub set_box_example"
            ],
            [
              "1126: set_box_example:",
              "1136: proto 3 0",
              "1139: frame_dig -3",
              "1140: itob",
              "1141: bytec_2",
              "1142: swap",
              "1143: box_put",
              "1146: bytec 5",
              "1147: box_del",
              "1148: pop",
              "1149: bytec 5",
              "1150: frame_dig -2",
              "1151: box_put",
              "1154: bytec 4",
              "1155: box_del",
              "1156: pop",
              "1157: bytec 4",
              "1158: frame_dig -1",
              "1159: box_put",
              "1162: frame_dig -2",
              "1163: extract 2 0",
              "1164: bytec 12",
              "1165: box_del",
              "1166: pop",
              "1167: bytec 12",
              "1168: swap",
              "1169: box_put",
              "1172: bytec 5",
              "1173: box_get",
              "1174: assert",
              "1177: bytec 5",
              "1178: box_get",
              "1179: assert",
              "1180: intc_1",
              "1181: extract_uint16",
              "1182: swap",
              "1183: intc_1",
              "1184: extract_uint16",
              "1185: ==",
              "1190: assert",
              "1193: bytec_2",
              "1194: box_get",
              "1195: swap",
              "1196: btoi",
              "1197: swap",
              "1198: assert",
              "1199: pushint 3",
              "1200: +",
              "1201: itob",
              "1202: bytec_2",
              "1203: swap",
              "1204: box_put",
              "1205: retsub"
            ],
            [
              "379: intc_0",
              "380: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 40 -> 96 -> 41",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "347: main_delete_box_route@21:",
              "351: txn OnCompletion",
              "352: !",
              "353: assert",
              "354: txn ApplicationID",
              "355: assert",
              "356: callsub delete_box"
            ],
            [
              "1209: delete_box:",
              "1214: proto 0 0",
              "1217: bytec_2",
              "1218: box_del",
              "1219: pop",
              "1222: bytec 5",
              "1223: box_del",
              "1224: pop",
              "1227: bytec 4",
              "1228: box_del",
              "1229: pop",
              "1232: bytec_2",
              "1233: box_get",
              "1234: swap",
              "1235: btoi",
              "1236: pushint 42",
              "1237: swap",
              "1238: uncover 2",
              "1239: select",
              "1240: pushint 42",
              "1241: ==",
              "1242: assert",
              "1245: bytec 5",
              "1246: box_get",
              "1247: bytec 13",
              "1248: cover 2",
              "1249: select",
              "1250: extract 2 0",
              "1251: pushbytes 0x3432",
              "1252: ==",
              "1257: assert",
              "1260: bytec 4",
              "1261: box_get",
              "1262: bytec 13",
              "1263: cover 2",
              "1264: select",
              "1265: bytec 13",
              "1266: ==",
              "1267: assert",
              "1268: retsub"
            ],
            [
              "357: intc_0",
              "358: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 38 -> 97 -> 39",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "329: main_delete_box_map_route@22:",
              "332: txn OnCompletion",
              "333: !",
              "334: assert",
              "335: txn ApplicationID",
              "336: assert",
              "339: txna ApplicationArgs 1",
              "340: btoi",
              "343: callsub delete_box_map"
            ],
            [
              "1272: delete_box_map:",
              "1276: proto 1 0",
              "1279: frame_dig -1",
              "1280: itob",
              "1281: box_del",
              "1282: pop",
              "1283: retsub"
            ],
            [
              "344: intc_0",
              "345: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 36 -> 98 -> 37",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "317: main_delete_box_ref_route@23:",
              "320: txn OnCompletion",
              "321: !",
              "322: assert",
              "323: txn ApplicationID",
              "324: assert",
              "325: callsub delete_box_ref"
            ],
            [
              "1287: delete_box_ref:",
              "1291: proto 0 0",
              "1294: bytec 14",
              "1295: intc_2",
              "1296: box_create",
              "1297: pop",
              "1300: bytec 14",
              "1301: box_len",
              "1302: bury 1",
              "1303: assert",
              "1306: bytec 14",
              "1307: box_del",
              "1308: pop",
              "1311: bytec_0",
              "1314: box_get",
              "1317: !",
              "1318: assert",
              "1321: pushbytes 0x",
              "1322: ==",
              "1323: assert",
              "1324: retsub"
            ],
            [
              "326: intc_0",
              "327: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 34 -> 99 -> 100 -> 35",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "299: main_box_map_length_route@24:",
              "303: txn OnCompletion",
              "304: !",
              "305: assert",
              "306: txn ApplicationID",
              "307: assert",
              "308: callsub box_map_length"
            ],
            [
              "1328: box_map_length:",
              "1333: proto 0 1",
              "1336: intc_1",
              "1339: itob",
              "1340: dup",
              "1341: box_len",
              "1342: bury 1",
              "1343: bnz box_map_length_after_if_else@2"
            ],
            [
              "1346: intc_1",
              "1347: swap",
              "1348: retsub"
            ],
            [
              "309: itob",
              "310: bytec_1",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_0",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 34 -> 99 -> 101 -> 35",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "299: main_box_map_length_route@24:",
              "303: txn OnCompletion",
              "304: !",
              "305: assert",
              "306: txn ApplicationID",
              "307: assert",
              "308: callsub box_map_length"
            ],
            [
              "1328: box_map_length:",
              "1333: proto 0 1",
              "1336: intc_1",
              "1339: itob",
              "1340: dup",
              "1341: box_len",
              "1342: bury 1",
              "1343: bnz box_map_length_after_if_else@2"
            ],
            [
              "1350: box_map_length_after_if_else@2:",
              "1353: frame_dig 0",
              "1354: box_len",
              "1355: assert",
              "1356: swap",
              "1357: retsub"
            ],
            [
              "309: itob",
              "310: bytec_1",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_0",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 32 -> 102 -> 33",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "282: main_length_box_ref_route@25:",
              "285: txn OnCompletion",
              "286: !",
              "287: assert",
              "288: txn ApplicationID",
              "289: assert",
              "290: callsub length_box_ref"
            ],
            [
              "1361: length_box_ref:",
              "1365: proto 0 1",
              "1368: bytec_0",
              "1371: intc_2",
              "1372: box_create",
              "1373: assert",
              "1376: bytec_0",
              "1379: box_len",
              "1380: assert",
              "1381: retsub"
            ],
            [
              "291: itob",
              "292: bytec_1",
              "293: swap",
              "294: concat",
              "295: log",
              "296: intc_0",
              "297: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 30 -> 103 -> 31",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "262: main_box_map_struct_length_route@26:",
              "265: txn OnCompletion",
              "266: !",
              "267: assert",
              "268: txn ApplicationID",
              "269: assert",
              "270: callsub box_map_struct_length"
            ],
            [
              "1385: box_map_struct_length:",
              "1389: proto 0 1",
              "1392: bytec 7",
              "1393: box_del",
              "1394: pop",
              "1395: bytec 7",
              "1398: pushbytes 0x0012000000000000004600000000000000020008746573744e616d65",
              "1401: box_put",
              "1404: bytec 7",
              "1405: box_len",
              "1406: assert",
              "1407: pushint 28",
              "1408: ==",
              "1409: assert",
              "1412: bytec 7",
              "1413: box_len",
              "1414: assert",
              "1415: pushint 28",
              "1416: ==",
              "1417: assert",
              "1420: intc_0",
              "1421: retsub"
            ],
            [
              "271: bytec_3",
              "272: intc_1",
              "273: uncover 2",
              "274: setbit",
              "275: bytec_1",
              "276: swap",
              "277: concat",
              "278: log",
              "279: intc_0",
              "280: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 28 -> 104 -> 29",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "249: main_box_map_length_example_route@27:",
              "253: txn OnCompletion",
              "254: !",
              "255: assert",
              "256: txn ApplicationID",
              "257: assert",
              "258: callsub box_map_length_example"
            ],
            [
              "1425: box_map_length_example:",
              "1430: proto 0 0",
              "1433: intc_1",
              "1436: itob",
              "1437: dup",
              "1438: box_del",
              "1439: pop",
              "1440: dup",
              "1443: pushbytes \"Hmmmmm\"",
              "1446: box_put",
              "1449: dup",
              "1450: box_len",
              "1451: assert",
              "1452: pushint 6",
              "1453: ==",
              "1454: assert",
              "1457: box_len",
              "1458: assert",
              "1459: pushint 6",
              "1460: ==",
              "1461: assert",
              "1462: retsub"
            ],
            [
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 26 -> 105 -> 27",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "237: main_length_box_ref_example_route@28:",
              "240: txn OnCompletion",
              "241: !",
              "242: assert",
              "243: txn ApplicationID",
              "244: assert",
              "245: callsub length_box_ref_example"
            ],
            [
              "1466: length_box_ref_example:",
              "1470: proto 0 0",
              "1473: bytec_0",
              "1476: intc_2",
              "1477: box_create",
              "1478: assert",
              "1481: bytec_0",
              "1484: box_len",
              "1485: assert",
              "1486: intc_3",
              "1487: ==",
              "1488: assert",
              "1491: bytec_0",
              "1494: intc_2",
              "1495: box_create",
              "1496: assert",
              "1499: bytec_0",
              "1502: box_len",
              "1503: assert",
              "1504: intc_3",
              "1505: ==",
              "1506: assert",
              "1509: bytec_0",
              "1512: intc_2",
              "1513: box_create",
              "1514: assert",
              "1517: bytec_0",
              "1520: box_len",
              "1521: assert",
              "1522: intc_3",
              "1523: ==",
              "1524: assert",
              "1527: bytec_0",
              "1530: intc_2",
              "1531: box_create",
              "1532: assert",
              "1535: bytec_0",
              "1538: box_len",
              "1539: assert",
              "1540: intc_3",
              "1541: ==",
              "1542: assert",
              "1543: retsub"
            ],
            [
              "246: intc_0",
              "247: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 24 -> 106 -> 25",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "224: main_extract_box_ref_route@29:",
              "228: txn OnCompletion",
              "229: !",
              "230: assert",
              "231: txn ApplicationID",
              "232: assert",
              "233: callsub extract_box_ref"
            ],
            [
              "1547: extract_box_ref:",
              "1552: proto 0 0",
              "1555: bytec_0",
              "1558: intc_2",
              "1559: box_create",
              "1560: assert",
              "1563: txn Sender",
              "1566: global CurrentApplicationAddress",
              "1569: bytec_0",
              "1572: intc_1",
              "1573: dig 3",
              "1574: box_replace",
              "1577: bytec_0",
              "1580: intc_1",
              "1581: dup",
              "1582: dig 3",
              "1583: UNSUPPORTED box_splice",
              "1586: bytec_0",
              "1589: intc_3",
              "1592: bytec 8",
              "1595: box_replace",
              "1598: bytec_0",
              "1601: intc_1",
              "1602: pushint 69",
              "1603: box_extract",
              "1606: swap",
              "1607: uncover 2",
              "1608: concat",
              "1611: bytec 8",
              "1614: concat",
              "1615: ==",
              "1616: assert",
              "1617: retsub"
            ],
            [
              "234: intc_0",
              "235: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 22 -> 107 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "211: main_manipulate_box_ref_route@30:",
              "215: txn OnCompletion",
              "216: !",
              "217: assert",
              "218: txn ApplicationID",
              "219: assert",
              "220: callsub manipulate_box_ref"
            ],
            [
              "1621: manipulate_box_ref:",
              "1626: proto 0 0",
              "1629: bytec_0",
              "1632: intc_2",
              "1633: box_create",
              "1634: assert",
              "1637: bytec_0",
              "1640: box_len",
              "1641: bury 1",
              "1642: assert",
              "1646: txn Sender",
              "1649: global CurrentApplicationAddress",
              "1652: bytec_0",
              "1655: intc_1",
              "1656: dig 3",
              "1657: box_replace",
              "1660: bytec_0",
              "1663: intc_1",
              "1664: dup",
              "1665: dig 3",
              "1666: UNSUPPORTED box_splice",
              "1669: bytec_0",
              "1672: intc_3",
              "1675: bytec 8",
              "1678: box_replace",
              "1681: bytec_0",
              "1684: intc_1",
              "1685: pushint 69",
              "1686: box_extract",
              "1689: dig 1",
              "1690: dig 3",
              "1691: concat",
              "1694: bytec 8",
              "1697: concat",
              "1698: ==",
              "1699: assert",
              "1702: bytec_0",
              "1705: box_del",
              "1706: assert",
              "1709: concat",
              "1712: bytec_0",
              "1715: swap",
              "1716: box_put",
              "1719: bytec_0",
              "1722: box_len",
              "1723: bury 1",
              "1724: assert",
              "1727: bytec_0",
              "1730: box_len",
              "1731: assert",
              "1732: intc_3",
              "1733: ==",
              "1734: assert",
              "1735: retsub"
            ],
            [
              "221: intc_0",
              "222: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 20 -> 108 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "198: main_value_box_route@31:",
              "202: txn OnCompletion",
              "203: !",
              "204: assert",
              "205: txn ApplicationID",
              "206: assert",
              "207: callsub value_box"
            ],
            [
              "1739: value_box:",
              "1744: proto 0 0",
              "1747: bytec_2",
              "1748: box_get",
              "1749: swap",
              "1750: btoi",
              "1751: swap",
              "1752: assert",
              "1753: pushint 10",
              "1754: ==",
              "1755: assert",
              "1756: retsub"
            ],
            [
              "208: intc_0",
              "209: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 18 -> 109 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "178: main_exist_box_route@32:",
              "181: txn OnCompletion",
              "182: !",
              "183: assert",
              "184: txn ApplicationID",
              "185: assert",
              "186: callsub exist_box"
            ],
            [
              "1760: exist_box:",
              "1764: proto 0 1",
              "1767: bytec_2",
              "1768: box_len",
              "1769: bury 1",
              "1770: retsub"
            ],
            [
              "187: bytec_3",
              "188: intc_1",
              "189: uncover 2",
              "190: setbit",
              "191: bytec_1",
              "192: swap",
              "193: concat",
              "194: log",
              "195: intc_0",
              "196: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 16 -> 110 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "137: main_exist_box_example_route@33:",
              "140: txn OnCompletion",
              "141: !",
              "142: assert",
              "143: txn ApplicationID",
              "144: assert",
              "145: callsub exist_box_example"
            ],
            [
              "1774: exist_box_example:",
              "1778: proto 0 3",
              "1781: bytec 5",
              "1782: box_len",
              "1783: bury 1",
              "1784: bytec 4",
              "1785: box_len",
              "1786: bury 1",
              "1787: bytec 12",
              "1788: box_len",
              "1789: bury 1",
              "1790: retsub"
            ],
            [
              "146: bytec_3",
              "147: intc_1",
              "148: uncover 4",
              "149: setbit",
              "150: bytec_3",
              "151: intc_1",
              "152: uncover 4",
              "153: setbit",
              "154: bytec_3",
              "155: intc_1",
              "156: uncover 4",
              "157: setbit",
              "158: swap",
              "159: intc_1",
              "160: getbit",
              "161: uncover 2",
              "162: intc_0",
              "163: uncover 2",
              "164: setbit",
              "165: swap",
              "166: intc_1",
              "167: getbit",
              "168: pushint 2",
              "169: swap",
              "170: setbit",
              "171: bytec_1",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 111 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "125: main_slice_box_route@34:",
              "128: txn OnCompletion",
              "129: !",
              "130: assert",
              "131: txn ApplicationID",
              "132: assert",
              "133: callsub slice_box"
            ],
            [
              "1794: slice_box:",
              "1798: proto 0 0",
              "1801: bytec 9",
              "1804: box_del",
              "1805: pop",
              "1808: bytec 9",
              "1811: pushbytes 0x54657374696e672074657374696e6720313233",
              "1812: box_put",
              "1815: bytec 9",
              "1818: box_len",
              "1819: pop",
              "1820: dup",
              "1821: intc_1",
              "1822: dig 2",
              "1823: select",
              "1824: pushint 7",
              "1825: dig 2",
              "1826: <",
              "1827: uncover 2",
              "1828: pushint 7",
              "1829: uncover 2",
              "1830: select",
              "1831: dig 1",
              "1832: -",
              "1835: bytec 9",
              "1838: cover 2",
              "1839: box_extract",
              "1840: pushbytes 0x54657374696e67",
              "1841: ==",
              "1842: assert",
              "1845: bytec 4",
              "1846: box_del",
              "1847: pop",
              "1848: bytec 4",
              "1849: pushbytes 0x000548656c6c6f",
              "1850: box_put",
              "1853: bytec 4",
              "1854: box_len",
              "1855: pop",
              "1856: pushint 2",
              "1857: dig 1",
              "1858: <",
              "1859: dig 1",
              "1860: pushint 2",
              "1861: uncover 2",
              "1862: select",
              "1863: pushint 10",
              "1864: dig 2",
              "1865: <",
              "1866: uncover 2",
              "1867: pushint 10",
              "1868: uncover 2",
              "1869: select",
              "1870: dig 1",
              "1871: -",
              "1872: bytec 4",
              "1873: cover 2",
              "1874: box_extract",
              "1875: pushbytes 0x48656c6c6f",
              "1876: ==",
              "1877: assert",
              "1878: retsub"
            ],
            [
              "134: intc_0",
              "135: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 112 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "113: main_arc4_box_route@35:",
              "116: txn OnCompletion",
              "117: !",
              "118: assert",
              "119: txn ApplicationID",
              "120: assert",
              "121: callsub arc4_box"
            ],
            [
              "1882: arc4_box:",
              "1886: proto 0 0",
              "1889: bytec 6",
              "1894: pushbytes 0x00010203",
              "1895: box_put",
              "1898: bytec 6",
              "1901: box_get",
              "1902: assert",
              "1903: extract 0 1",
              "1904: bytec_3",
              "1905: b==",
              "1906: assert",
              "1909: bytec 6",
              "1912: box_get",
              "1913: assert",
              "1914: extract 1 1",
              "1915: pushbytes 0x01",
              "1916: b==",
              "1917: assert",
              "1920: bytec 6",
              "1923: box_get",
              "1924: assert",
              "1925: extract 2 1",
              "1926: pushbytes 0x02",
              "1927: b==",
              "1928: assert",
              "1931: bytec 6",
              "1934: box_get",
              "1935: assert",
              "1936: extract 3 1",
              "1937: pushbytes 0x03",
              "1938: b==",
              "1939: assert",
              "1940: retsub"
            ],
            [
              "122: intc_0",
              "123: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "100: main_key_box_route@36:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: pushbytes 0x151f7c750007626f785f696e74",
              "109: log",
              "110: intc_0",
              "111: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 9 -> 113 -> 10",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "88: main_key_box_example_route@37:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: callsub key_box_example"
            ],
            [
              "1944: key_box_example:",
              "1948: proto 0 0",
              "1951: intc_1",
              "1952: assert",
              "1953: retsub"
            ],
            [
              "97: intc_0",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 7 -> 114 -> 8",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "60: main_box_map_exists_route@38:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "76: callsub box_map_exists"
            ],
            [
              "1957: box_map_exists:",
              "1962: proto 1 1",
              "1965: frame_dig -1",
              "1966: itob",
              "1967: box_len",
              "1968: bury 1",
              "1969: retsub"
            ],
            [
              "77: bytec_3",
              "78: intc_1",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_1",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_0",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 5 -> 115 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "35: main_box_map_struct_exists_route@39:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: assert",
              "45: txna ApplicationArgs 1",
              "48: callsub box_map_struct_exists"
            ],
            [
              "1973: box_map_struct_exists:",
              "1977: proto 1 1",
              "1980: bytec 11",
              "1981: frame_dig -1",
              "1982: concat",
              "1983: box_len",
              "1984: bury 1",
              "1985: retsub"
            ],
            [
              "49: bytec_3",
              "50: intc_1",
              "51: uncover 2",
              "52: setbit",
              "53: bytec_1",
              "54: swap",
              "55: concat",
              "56: log",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "22: main_key_prefix_box_map_route@40:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: pushbytes 0x151f7c750000",
              "31: log",
              "32: intc_0",
              "33: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 74 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "717: main_bare_routing@41:",
              "720: txn OnCompletion",
              "721: bnz main_after_if_else@43"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 74 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "717: main_bare_routing@41:",
              "720: txn OnCompletion",
              "721: bnz main_after_if_else@43"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 74 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "717: main_bare_routing@41:",
              "720: txn OnCompletion",
              "721: bnz main_after_if_else@43"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 41,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 72 -> 76 -> 73",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "699: main_get_box_route@5:",
              "703: txn OnCompletion",
              "704: !",
              "705: assert",
              "706: txn ApplicationID",
              "707: assert",
              "708: callsub get_box"
            ],
            [
              "730: get_box:",
              "735: proto 0 1",
              "738: bytec_2",
              "739: box_get",
              "740: swap",
              "741: btoi",
              "742: swap",
              "743: assert",
              "744: retsub"
            ],
            [
              "709: itob",
              "710: bytec_1",
              "711: swap",
              "712: concat",
              "713: log",
              "714: intc_0",
              "715: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 70 -> 77 -> 71",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "671: main_get_item_box_map_route@6:",
              "674: txn OnCompletion",
              "675: !",
              "676: assert",
              "677: txn ApplicationID",
              "678: assert",
              "681: txna ApplicationArgs 1",
              "682: btoi",
              "685: callsub get_item_box_map"
            ],
            [
              "748: get_item_box_map:",
              "752: proto 1 1",
              "755: frame_dig -1",
              "756: itob",
              "757: box_get",
              "758: assert",
              "759: retsub"
            ],
            [
              "686: dup",
              "687: len",
              "688: itob",
              "689: extract 6 2",
              "690: swap",
              "691: concat",
              "692: bytec_1",
              "693: swap",
              "694: concat",
              "695: log",
              "696: intc_0",
              "697: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 68 -> 78 -> 69",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "649: main_get_box_map_route@7:",
              "652: txn OnCompletion",
              "653: !",
              "654: assert",
              "655: txn ApplicationID",
              "656: assert",
              "657: callsub get_box_map"
            ],
            [
              "763: get_box_map:",
              "767: proto 0 1",
              "770: intc_0",
              "773: itob",
              "774: box_get",
              "775: bytec 10",
              "776: cover 2",
              "777: select",
              "778: retsub"
            ],
            [
              "658: dup",
              "659: len",
              "660: itob",
              "661: extract 6 2",
              "662: swap",
              "663: concat",
              "664: bytec_1",
              "665: swap",
              "666: concat",
              "667: log",
              "668: intc_0",
              "669: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 66 -> 79 -> 67",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "637: main_get_box_ref_route@8:",
              "640: txn OnCompletion",
              "641: !",
              "642: assert",
              "643: txn ApplicationID",
              "644: assert",
              "645: callsub get_box_ref"
            ],
            [
              "782: get_box_ref:",
              "786: proto 0 0",
              "789: bytec_0",
              "792: intc_2",
              "793: box_create",
              "794: assert",
              "797: txn Sender",
              "800: bytec_0",
              "803: box_del",
              "804: assert",
              "807: bytec_0",
              "810: box_get",
              "811: dig 2",
              "812: cover 2",
              "813: select",
              "814: ==",
              "815: assert",
              "816: retsub"
            ],
            [
              "646: intc_0",
              "647: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 64 -> 80 -> 65",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "614: main_maybe_box_route@9:",
              "617: txn OnCompletion",
              "618: !",
              "619: assert",
              "620: txn ApplicationID",
              "621: assert",
              "622: callsub maybe_box"
            ],
            [
              "820: maybe_box:",
              "824: proto 0 2",
              "827: bytec_2",
              "828: box_get",
              "829: swap",
              "830: btoi",
              "833: swap",
              "834: retsub"
            ],
            [
              "623: swap",
              "624: itob",
              "625: bytec_3",
              "626: intc_1",
              "627: uncover 3",
              "628: setbit",
              "629: concat",
              "630: bytec_1",
              "631: swap",
              "632: concat",
              "633: log",
              "634: intc_0",
              "635: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 62 -> 81 -> 82 -> 83 -> 63",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "583: main_maybe_box_map_route@10:",
              "586: txn OnCompletion",
              "587: !",
              "588: assert",
              "589: txn ApplicationID",
              "590: assert",
              "591: callsub maybe_box_map"
            ],
            [
              "838: maybe_box_map:",
              "842: proto 0 2",
              "845: intc_0",
              "848: itob",
              "849: box_get",
              "850: dup",
              "851: uncover 2",
              "852: swap",
              "855: bnz maybe_box_map_after_if_else@2"
            ],
            [
              "858: pushbytes \"\"",
              "859: frame_bury 1"
            ],
            [
              "861: maybe_box_map_after_if_else@2:",
              "864: frame_dig 1",
              "865: frame_dig 0",
              "866: uncover 3",
              "867: uncover 3",
              "868: retsub"
            ],
            [
              "592: dig 1",
              "593: len",
              "594: itob",
              "595: extract 6 2",
              "596: uncover 2",
              "597: concat",
              "598: bytec_3",
              "599: intc_1",
              "600: uncover 3",
              "601: setbit",
              "602: bytec 15",
              "603: swap",
              "604: concat",
              "605: swap",
              "606: concat",
              "607: bytec_1",
              "608: swap",
              "609: concat",
              "610: log",
              "611: intc_0",
              "612: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 62 -> 81 -> 83 -> 63",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "583: main_maybe_box_map_route@10:",
              "586: txn OnCompletion",
              "587: !",
              "588: assert",
              "589: txn ApplicationID",
              "590: assert",
              "591: callsub maybe_box_map"
            ],
            [
              "838: maybe_box_map:",
              "842: proto 0 2",
              "845: intc_0",
              "848: itob",
              "849: box_get",
              "850: dup",
              "851: uncover 2",
              "852: swap",
              "855: bnz maybe_box_map_after_if_else@2"
            ],
            [
              "861: maybe_box_map_after_if_else@2:",
              "864: frame_dig 1",
              "865: frame_dig 0",
              "866: uncover 3",
              "867: uncover 3",
              "868: retsub"
            ],
            [
              "592: dig 1",
              "593: len",
              "594: itob",
              "595: extract 6 2",
              "596: uncover 2",
              "597: concat",
              "598: bytec_3",
              "599: intc_1",
              "600: uncover 3",
              "601: setbit",
              "602: bytec 15",
              "603: swap",
              "604: concat",
              "605: swap",
              "606: concat",
              "607: bytec_1",
              "608: swap",
              "609: concat",
              "610: log",
              "611: intc_0",
              "612: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 84 -> 85 -> 86 -> 61",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "552: main_maybe_box_ref_route@11:",
              "555: txn OnCompletion",
              "556: !",
              "557: assert",
              "558: txn ApplicationID",
              "559: assert",
              "560: callsub maybe_box_ref"
            ],
            [
              "872: maybe_box_ref:",
              "876: proto 0 2",
              "879: bytec_0",
              "882: intc_2",
              "883: box_create",
              "884: assert",
              "887: bytec_0",
              "890: box_get",
              "891: dup",
              "892: uncover 2",
              "893: swap",
              "896: bnz maybe_box_ref_after_if_else@2"
            ],
            [
              "899: pushbytes 0x",
              "900: frame_bury 1"
            ],
            [
              "902: maybe_box_ref_after_if_else@2:",
              "905: frame_dig 1",
              "906: frame_dig 0",
              "907: uncover 3",
              "908: uncover 3",
              "909: retsub"
            ],
            [
              "561: dig 1",
              "562: len",
              "563: itob",
              "564: extract 6 2",
              "565: uncover 2",
              "566: concat",
              "567: bytec_3",
              "568: intc_1",
              "569: uncover 3",
              "570: setbit",
              "571: bytec 15",
              "572: swap",
              "573: concat",
              "574: swap",
              "575: concat",
              "576: bytec_1",
              "577: swap",
              "578: concat",
              "579: log",
              "580: intc_0",
              "581: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 84 -> 86 -> 61",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "552: main_maybe_box_ref_route@11:",
              "555: txn OnCompletion",
              "556: !",
              "557: assert",
              "558: txn ApplicationID",
              "559: assert",
              "560: callsub maybe_box_ref"
            ],
            [
              "872: maybe_box_ref:",
              "876: proto 0 2",
              "879: bytec_0",
              "882: intc_2",
              "883: box_create",
              "884: assert",
              "887: bytec_0",
              "890: box_get",
              "891: dup",
              "892: uncover 2",
              "893: swap",
              "896: bnz maybe_box_ref_after_if_else@2"
            ],
            [
              "902: maybe_box_ref_after_if_else@2:",
              "905: frame_dig 1",
              "906: frame_dig 0",
              "907: uncover 3",
              "908: uncover 3",
              "909: retsub"
            ],
            [
              "561: dig 1",
              "562: len",
              "563: itob",
              "564: extract 6 2",
              "565: uncover 2",
              "566: concat",
              "567: bytec_3",
              "568: intc_1",
              "569: uncover 3",
              "570: setbit",
              "571: bytec 15",
              "572: swap",
              "573: concat",
              "574: swap",
              "575: concat",
              "576: bytec_1",
              "577: swap",
              "578: concat",
              "579: log",
              "580: intc_0",
              "581: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 58 -> 87 -> 59",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "513: main_get_box_example_route@12:",
              "517: txn OnCompletion",
              "518: !",
              "519: assert",
              "520: txn ApplicationID",
              "521: assert",
              "522: callsub get_box_example"
            ],
            [
              "913: get_box_example:",
              "918: proto 0 3",
              "921: bytec_2",
              "922: box_get",
              "923: swap",
              "924: btoi",
              "925: swap",
              "926: assert",
              "929: bytec 5",
              "930: box_get",
              "931: assert",
              "932: extract 2 0",
              "935: bytec 4",
              "936: box_get",
              "937: assert",
              "944: retsub"
            ],
            [
              "523: uncover 2",
              "524: itob",
              "525: dig 2",
              "526: len",
              "527: itob",
              "528: extract 6 2",
              "529: uncover 3",
              "530: concat",
              "531: swap",
              "532: pushbytes 0x000c",
              "533: concat",
              "534: dig 1",
              "535: len",
              "536: pushint 12",
              "537: +",
              "538: itob",
              "539: extract 6 2",
              "540: concat",
              "541: swap",
              "542: concat",
              "543: swap",
              "544: concat",
              "545: bytec_1",
              "546: swap",
              "547: concat",
              "548: log",
              "549: intc_0",
              "550: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 56 -> 88 -> 57",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "493: main_get_box_map_example_route@13:",
              "496: txn OnCompletion",
              "497: !",
              "498: assert",
              "499: txn ApplicationID",
              "500: assert",
              "501: callsub get_box_map_example"
            ],
            [
              "948: get_box_map_example:",
              "952: proto 0 1",
              "955: intc_0",
              "958: itob",
              "959: box_get",
              "960: bytec 10",
              "961: cover 2",
              "962: select",
              "963: bytec 10",
              "964: ==",
              "965: assert",
              "968: intc_0",
              "969: retsub"
            ],
            [
              "502: bytec_3",
              "503: intc_1",
              "504: uncover 2",
              "505: setbit",
              "506: bytec_1",
              "507: swap",
              "508: concat",
              "509: log",
              "510: intc_0",
              "511: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 54 -> 89 -> 55",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "481: main_maybe_box_example_route@14:",
              "484: txn OnCompletion",
              "485: !",
              "486: assert",
              "487: txn ApplicationID",
              "488: assert",
              "489: callsub maybe_box_example"
            ],
            [
              "973: maybe_box_example:",
              "977: proto 0 0",
              "980: bytec_2",
              "981: box_del",
              "982: pop",
              "985: bytec_2",
              "986: box_get",
              "987: swap",
              "988: btoi",
              "989: pushint 42",
              "990: swap",
              "991: uncover 2",
              "992: select",
              "993: pushint 42",
              "994: ==",
              "995: assert",
              "998: bytec_2",
              "999: box_get",
              "1000: swap",
              "1001: btoi",
              "1004: swap",
              "1005: !",
              "1006: assert",
              "1009: !",
              "1010: assert",
              "1011: retsub"
            ],
            [
              "490: intc_0",
              "491: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 52 -> 90 -> 53",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "469: main_maybe_box_map_example_route@15:",
              "472: txn OnCompletion",
              "473: !",
              "474: assert",
              "475: txn ApplicationID",
              "476: assert",
              "477: callsub maybe_box_map_example"
            ],
            [
              "1015: maybe_box_map_example:",
              "1019: proto 0 0",
              "1022: intc_0",
              "1025: itob",
              "1026: box_get",
              "1027: bury 1",
              "1030: !",
              "1031: assert",
              "1034: intc_1",
              "1037: itob",
              "1038: box_len",
              "1039: bury 1",
              "1040: assert",
              "1041: retsub"
            ],
            [
              "478: intc_0",
              "479: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 50 -> 91 -> 51",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "448: main_get_box_map_struct_route@16:",
              "451: txn OnCompletion",
              "452: !",
              "453: assert",
              "454: txn ApplicationID",
              "455: assert",
              "458: txna ApplicationArgs 1",
              "461: callsub get_box_map_struct"
            ],
            [
              "1045: get_box_map_struct:",
              "1049: proto 1 1",
              "1052: bytec 11",
              "1053: frame_dig -1",
              "1054: concat",
              "1055: box_get",
              "1056: assert",
              "1057: retsub"
            ],
            [
              "462: bytec_1",
              "463: swap",
              "464: concat",
              "465: log",
              "466: intc_0",
              "467: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 48 -> 92 -> 49",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "428: main_set_box_route@17:",
              "432: txn OnCompletion",
              "433: !",
              "434: assert",
              "435: txn ApplicationID",
              "436: assert",
              "439: txna ApplicationArgs 1",
              "440: btoi",
              "444: callsub set_box"
            ],
            [
              "1061: set_box:",
              "1066: proto 1 0",
              "1069: frame_dig -1",
              "1070: itob",
              "1071: bytec_2",
              "1072: swap",
              "1073: box_put",
              "1074: retsub"
            ],
            [
              "445: intc_0",
              "446: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 46 -> 93 -> 47",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "408: main_set_box_map_route@18:",
              "411: txn OnCompletion",
              "412: !",
              "413: assert",
              "414: txn ApplicationID",
              "415: assert",
              "418: txna ApplicationArgs 1",
              "419: btoi",
              "420: txna ApplicationArgs 2",
              "421: extract 2 0",
              "424: callsub set_box_map"
            ],
            [
              "1078: set_box_map:",
              "1082: proto 2 0",
              "1085: frame_dig -2",
              "1086: itob",
              "1087: dup",
              "1088: box_del",
              "1089: pop",
              "1090: frame_dig -1",
              "1091: box_put",
              "1092: retsub"
            ],
            [
              "425: intc_0",
              "426: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 44 -> 94 -> 45",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "382: main_set_box_map_struct_route@19:",
              "385: txn OnCompletion",
              "386: !",
              "387: assert",
              "388: txn ApplicationID",
              "389: assert",
              "392: txna ApplicationArgs 1",
              "393: txna ApplicationArgs 2",
              "396: callsub set_box_map_struct"
            ],
            [
              "1096: set_box_map_struct:",
              "1100: proto 2 1",
              "1103: bytec 11",
              "1104: frame_dig -2",
              "1105: concat",
              "1106: dup",
              "1107: box_del",
              "1108: pop",
              "1109: dup",
              "1110: frame_dig -1",
              "1111: box_put",
              "1114: box_get",
              "1115: assert",
              "1116: frame_dig -1",
              "1117: ==",
              "1118: assert",
              "1121: intc_0",
              "1122: retsub"
            ],
            [
              "397: bytec_3",
              "398: intc_1",
              "399: uncover 2",
              "400: setbit",
              "401: bytec_1",
              "402: swap",
              "403: concat",
              "404: log",
              "405: intc_0",
              "406: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 42 -> 95 -> 43",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "360: main_set_box_example_route@20:",
              "364: txn OnCompletion",
              "365: !",
              "366: assert",
              "367: txn ApplicationID",
              "368: assert",
              "371: txna ApplicationArgs 1",
              "372: btoi",
              "373: txna ApplicationArgs 2",
              "374: txna ApplicationArgs 3",
              "378: callsub set_box_example"
            ],
            [
              "1126: set_box_example:",
              "1136: proto 3 0",
              "1139: frame_dig -3",
              "1140: itob",
              "1141: bytec_2",
              "1142: swap",
              "1143: box_put",
              "1146: bytec 5",
              "1147: box_del",
              "1148: pop",
              "1149: bytec 5",
              "1150: frame_dig -2",
              "1151: box_put",
              "1154: bytec 4",
              "1155: box_del",
              "1156: pop",
              "1157: bytec 4",
              "1158: frame_dig -1",
              "1159: box_put",
              "1162: frame_dig -2",
              "1163: extract 2 0",
              "1164: bytec 12",
              "1165: box_del",
              "1166: pop",
              "1167: bytec 12",
              "1168: swap",
              "1169: box_put",
              "1172: bytec 5",
              "1173: box_get",
              "1174: assert",
              "1177: bytec 5",
              "1178: box_get",
              "1179: assert",
              "1180: intc_1",
              "1181: extract_uint16",
              "1182: swap",
              "1183: intc_1",
              "1184: extract_uint16",
              "1185: ==",
              "1190: assert",
              "1193: bytec_2",
              "1194: box_get",
              "1195: swap",
              "1196: btoi",
              "1197: swap",
              "1198: assert",
              "1199: pushint 3",
              "1200: +",
              "1201: itob",
              "1202: bytec_2",
              "1203: swap",
              "1204: box_put",
              "1205: retsub"
            ],
            [
              "379: intc_0",
              "380: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 40 -> 96 -> 41",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "347: main_delete_box_route@21:",
              "351: txn OnCompletion",
              "352: !",
              "353: assert",
              "354: txn ApplicationID",
              "355: assert",
              "356: callsub delete_box"
            ],
            [
              "1209: delete_box:",
              "1214: proto 0 0",
              "1217: bytec_2",
              "1218: box_del",
              "1219: pop",
              "1222: bytec 5",
              "1223: box_del",
              "1224: pop",
              "1227: bytec 4",
              "1228: box_del",
              "1229: pop",
              "1232: bytec_2",
              "1233: box_get",
              "1234: swap",
              "1235: btoi",
              "1236: pushint 42",
              "1237: swap",
              "1238: uncover 2",
              "1239: select",
              "1240: pushint 42",
              "1241: ==",
              "1242: assert",
              "1245: bytec 5",
              "1246: box_get",
              "1247: bytec 13",
              "1248: cover 2",
              "1249: select",
              "1250: extract 2 0",
              "1251: pushbytes 0x3432",
              "1252: ==",
              "1257: assert",
              "1260: bytec 4",
              "1261: box_get",
              "1262: bytec 13",
              "1263: cover 2",
              "1264: select",
              "1265: bytec 13",
              "1266: ==",
              "1267: assert",
              "1268: retsub"
            ],
            [
              "357: intc_0",
              "358: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 38 -> 97 -> 39",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "329: main_delete_box_map_route@22:",
              "332: txn OnCompletion",
              "333: !",
              "334: assert",
              "335: txn ApplicationID",
              "336: assert",
              "339: txna ApplicationArgs 1",
              "340: btoi",
              "343: callsub delete_box_map"
            ],
            [
              "1272: delete_box_map:",
              "1276: proto 1 0",
              "1279: frame_dig -1",
              "1280: itob",
              "1281: box_del",
              "1282: pop",
              "1283: retsub"
            ],
            [
              "344: intc_0",
              "345: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 36 -> 98 -> 37",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "317: main_delete_box_ref_route@23:",
              "320: txn OnCompletion",
              "321: !",
              "322: assert",
              "323: txn ApplicationID",
              "324: assert",
              "325: callsub delete_box_ref"
            ],
            [
              "1287: delete_box_ref:",
              "1291: proto 0 0",
              "1294: bytec 14",
              "1295: intc_2",
              "1296: box_create",
              "1297: pop",
              "1300: bytec 14",
              "1301: box_len",
              "1302: bury 1",
              "1303: assert",
              "1306: bytec 14",
              "1307: box_del",
              "1308: pop",
              "1311: bytec_0",
              "1314: box_get",
              "1317: !",
              "1318: assert",
              "1321: pushbytes 0x",
              "1322: ==",
              "1323: assert",
              "1324: retsub"
            ],
            [
              "326: intc_0",
              "327: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 34 -> 99 -> 100 -> 35",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "299: main_box_map_length_route@24:",
              "303: txn OnCompletion",
              "304: !",
              "305: assert",
              "306: txn ApplicationID",
              "307: assert",
              "308: callsub box_map_length"
            ],
            [
              "1328: box_map_length:",
              "1333: proto 0 1",
              "1336: intc_1",
              "1339: itob",
              "1340: dup",
              "1341: box_len",
              "1342: bury 1",
              "1343: bnz box_map_length_after_if_else@2"
            ],
            [
              "1346: intc_1",
              "1347: swap",
              "1348: retsub"
            ],
            [
              "309: itob",
              "310: bytec_1",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_0",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 34 -> 99 -> 101 -> 35",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "299: main_box_map_length_route@24:",
              "303: txn OnCompletion",
              "304: !",
              "305: assert",
              "306: txn ApplicationID",
              "307: assert",
              "308: callsub box_map_length"
            ],
            [
              "1328: box_map_length:",
              "1333: proto 0 1",
              "1336: intc_1",
              "1339: itob",
              "1340: dup",
              "1341: box_len",
              "1342: bury 1",
              "1343: bnz box_map_length_after_if_else@2"
            ],
            [
              "1350: box_map_length_after_if_else@2:",
              "1353: frame_dig 0",
              "1354: box_len",
              "1355: assert",
              "1356: swap",
              "1357: retsub"
            ],
            [
              "309: itob",
              "310: bytec_1",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_0",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 32 -> 102 -> 33",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "282: main_length_box_ref_route@25:",
              "285: txn OnCompletion",
              "286: !",
              "287: assert",
              "288: txn ApplicationID",
              "289: assert",
              "290: callsub length_box_ref"
            ],
            [
              "1361: length_box_ref:",
              "1365: proto 0 1",
              "1368: bytec_0",
              "1371: intc_2",
              "1372: box_create",
              "1373: assert",
              "1376: bytec_0",
              "1379: box_len",
              "1380: assert",
              "1381: retsub"
            ],
            [
              "291: itob",
              "292: bytec_1",
              "293: swap",
              "294: concat",
              "295: log",
              "296: intc_0",
              "297: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 30 -> 103 -> 31",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "262: main_box_map_struct_length_route@26:",
              "265: txn OnCompletion",
              "266: !",
              "267: assert",
              "268: txn ApplicationID",
              "269: assert",
              "270: callsub box_map_struct_length"
            ],
            [
              "1385: box_map_struct_length:",
              "1389: proto 0 1",
              "1392: bytec 7",
              "1393: box_del",
              "1394: pop",
              "1395: bytec 7",
              "1398: pushbytes 0x0012000000000000004600000000000000020008746573744e616d65",
              "1401: box_put",
              "1404: bytec 7",
              "1405: box_len",
              "1406: assert",
              "1407: pushint 28",
              "1408: ==",
              "1409: assert",
              "1412: bytec 7",
              "1413: box_len",
              "1414: assert",
              "1415: pushint 28",
              "1416: ==",
              "1417: assert",
              "1420: intc_0",
              "1421: retsub"
            ],
            [
              "271: bytec_3",
              "272: intc_1",
              "273: uncover 2",
              "274: setbit",
              "275: bytec_1",
              "276: swap",
              "277: concat",
              "278: log",
              "279: intc_0",
              "280: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 28 -> 104 -> 29",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "249: main_box_map_length_example_route@27:",
              "253: txn OnCompletion",
              "254: !",
              "255: assert",
              "256: txn ApplicationID",
              "257: assert",
              "258: callsub box_map_length_example"
            ],
            [
              "1425: box_map_length_example:",
              "1430: proto 0 0",
              "1433: intc_1",
              "1436: itob",
              "1437: dup",
              "1438: box_del",
              "1439: pop",
              "1440: dup",
              "1443: pushbytes \"Hmmmmm\"",
              "1446: box_put",
              "1449: dup",
              "1450: box_len",
              "1451: assert",
              "1452: pushint 6",
              "1453: ==",
              "1454: assert",
              "1457: box_len",
              "1458: assert",
              "1459: pushint 6",
              "1460: ==",
              "1461: assert",
              "1462: retsub"
            ],
            [
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 26 -> 105 -> 27",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "237: main_length_box_ref_example_route@28:",
              "240: txn OnCompletion",
              "241: !",
              "242: assert",
              "243: txn ApplicationID",
              "244: assert",
              "245: callsub length_box_ref_example"
            ],
            [
              "1466: length_box_ref_example:",
              "1470: proto 0 0",
              "1473: bytec_0",
              "1476: intc_2",
              "1477: box_create",
              "1478: assert",
              "1481: bytec_0",
              "1484: box_len",
              "1485: assert",
              "1486: intc_3",
              "1487: ==",
              "1488: assert",
              "1491: bytec_0",
              "1494: intc_2",
              "1495: box_create",
              "1496: assert",
              "1499: bytec_0",
              "1502: box_len",
              "1503: assert",
              "1504: intc_3",
              "1505: ==",
              "1506: assert",
              "1509: bytec_0",
              "1512: intc_2",
              "1513: box_create",
              "1514: assert",
              "1517: bytec_0",
              "1520: box_len",
              "1521: assert",
              "1522: intc_3",
              "1523: ==",
              "1524: assert",
              "1527: bytec_0",
              "1530: intc_2",
              "1531: box_create",
              "1532: assert",
              "1535: bytec_0",
              "1538: box_len",
              "1539: assert",
              "1540: intc_3",
              "1541: ==",
              "1542: assert",
              "1543: retsub"
            ],
            [
              "246: intc_0",
              "247: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 24 -> 106 -> 25",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "224: main_extract_box_ref_route@29:",
              "228: txn OnCompletion",
              "229: !",
              "230: assert",
              "231: txn ApplicationID",
              "232: assert",
              "233: callsub extract_box_ref"
            ],
            [
              "1547: extract_box_ref:",
              "1552: proto 0 0",
              "1555: bytec_0",
              "1558: intc_2",
              "1559: box_create",
              "1560: assert",
              "1563: txn Sender",
              "1566: global CurrentApplicationAddress",
              "1569: bytec_0",
              "1572: intc_1",
              "1573: dig 3",
              "1574: box_replace",
              "1577: bytec_0",
              "1580: intc_1",
              "1581: dup",
              "1582: dig 3",
              "1583: UNSUPPORTED box_splice",
              "1586: bytec_0",
              "1589: intc_3",
              "1592: bytec 8",
              "1595: box_replace",
              "1598: bytec_0",
              "1601: intc_1",
              "1602: pushint 69",
              "1603: box_extract",
              "1606: swap",
              "1607: uncover 2",
              "1608: concat",
              "1611: bytec 8",
              "1614: concat",
              "1615: ==",
              "1616: assert",
              "1617: retsub"
            ],
            [
              "234: intc_0",
              "235: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 22 -> 107 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "211: main_manipulate_box_ref_route@30:",
              "215: txn OnCompletion",
              "216: !",
              "217: assert",
              "218: txn ApplicationID",
              "219: assert",
              "220: callsub manipulate_box_ref"
            ],
            [
              "1621: manipulate_box_ref:",
              "1626: proto 0 0",
              "1629: bytec_0",
              "1632: intc_2",
              "1633: box_create",
              "1634: assert",
              "1637: bytec_0",
              "1640: box_len",
              "1641: bury 1",
              "1642: assert",
              "1646: txn Sender",
              "1649: global CurrentApplicationAddress",
              "1652: bytec_0",
              "1655: intc_1",
              "1656: dig 3",
              "1657: box_replace",
              "1660: bytec_0",
              "1663: intc_1",
              "1664: dup",
              "1665: dig 3",
              "1666: UNSUPPORTED box_splice",
              "1669: bytec_0",
              "1672: intc_3",
              "1675: bytec 8",
              "1678: box_replace",
              "1681: bytec_0",
              "1684: intc_1",
              "1685: pushint 69",
              "1686: box_extract",
              "1689: dig 1",
              "1690: dig 3",
              "1691: concat",
              "1694: bytec 8",
              "1697: concat",
              "1698: ==",
              "1699: assert",
              "1702: bytec_0",
              "1705: box_del",
              "1706: assert",
              "1709: concat",
              "1712: bytec_0",
              "1715: swap",
              "1716: box_put",
              "1719: bytec_0",
              "1722: box_len",
              "1723: bury 1",
              "1724: assert",
              "1727: bytec_0",
              "1730: box_len",
              "1731: assert",
              "1732: intc_3",
              "1733: ==",
              "1734: assert",
              "1735: retsub"
            ],
            [
              "221: intc_0",
              "222: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 20 -> 108 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "198: main_value_box_route@31:",
              "202: txn OnCompletion",
              "203: !",
              "204: assert",
              "205: txn ApplicationID",
              "206: assert",
              "207: callsub value_box"
            ],
            [
              "1739: value_box:",
              "1744: proto 0 0",
              "1747: bytec_2",
              "1748: box_get",
              "1749: swap",
              "1750: btoi",
              "1751: swap",
              "1752: assert",
              "1753: pushint 10",
              "1754: ==",
              "1755: assert",
              "1756: retsub"
            ],
            [
              "208: intc_0",
              "209: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 18 -> 109 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "178: main_exist_box_route@32:",
              "181: txn OnCompletion",
              "182: !",
              "183: assert",
              "184: txn ApplicationID",
              "185: assert",
              "186: callsub exist_box"
            ],
            [
              "1760: exist_box:",
              "1764: proto 0 1",
              "1767: bytec_2",
              "1768: box_len",
              "1769: bury 1",
              "1770: retsub"
            ],
            [
              "187: bytec_3",
              "188: intc_1",
              "189: uncover 2",
              "190: setbit",
              "191: bytec_1",
              "192: swap",
              "193: concat",
              "194: log",
              "195: intc_0",
              "196: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 16 -> 110 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "137: main_exist_box_example_route@33:",
              "140: txn OnCompletion",
              "141: !",
              "142: assert",
              "143: txn ApplicationID",
              "144: assert",
              "145: callsub exist_box_example"
            ],
            [
              "1774: exist_box_example:",
              "1778: proto 0 3",
              "1781: bytec 5",
              "1782: box_len",
              "1783: bury 1",
              "1784: bytec 4",
              "1785: box_len",
              "1786: bury 1",
              "1787: bytec 12",
              "1788: box_len",
              "1789: bury 1",
              "1790: retsub"
            ],
            [
              "146: bytec_3",
              "147: intc_1",
              "148: uncover 4",
              "149: setbit",
              "150: bytec_3",
              "151: intc_1",
              "152: uncover 4",
              "153: setbit",
              "154: bytec_3",
              "155: intc_1",
              "156: uncover 4",
              "157: setbit",
              "158: swap",
              "159: intc_1",
              "160: getbit",
              "161: uncover 2",
              "162: intc_0",
              "163: uncover 2",
              "164: setbit",
              "165: swap",
              "166: intc_1",
              "167: getbit",
              "168: pushint 2",
              "169: swap",
              "170: setbit",
              "171: bytec_1",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 111 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "125: main_slice_box_route@34:",
              "128: txn OnCompletion",
              "129: !",
              "130: assert",
              "131: txn ApplicationID",
              "132: assert",
              "133: callsub slice_box"
            ],
            [
              "1794: slice_box:",
              "1798: proto 0 0",
              "1801: bytec 9",
              "1804: box_del",
              "1805: pop",
              "1808: bytec 9",
              "1811: pushbytes 0x54657374696e672074657374696e6720313233",
              "1812: box_put",
              "1815: bytec 9",
              "1818: box_len",
              "1819: pop",
              "1820: dup",
              "1821: intc_1",
              "1822: dig 2",
              "1823: select",
              "1824: pushint 7",
              "1825: dig 2",
              "1826: <",
              "1827: uncover 2",
              "1828: pushint 7",
              "1829: uncover 2",
              "1830: select",
              "1831: dig 1",
              "1832: -",
              "1835: bytec 9",
              "1838: cover 2",
              "1839: box_extract",
              "1840: pushbytes 0x54657374696e67",
              "1841: ==",
              "1842: assert",
              "1845: bytec 4",
              "1846: box_del",
              "1847: pop",
              "1848: bytec 4",
              "1849: pushbytes 0x000548656c6c6f",
              "1850: box_put",
              "1853: bytec 4",
              "1854: box_len",
              "1855: pop",
              "1856: pushint 2",
              "1857: dig 1",
              "1858: <",
              "1859: dig 1",
              "1860: pushint 2",
              "1861: uncover 2",
              "1862: select",
              "1863: pushint 10",
              "1864: dig 2",
              "1865: <",
              "1866: uncover 2",
              "1867: pushint 10",
              "1868: uncover 2",
              "1869: select",
              "1870: dig 1",
              "1871: -",
              "1872: bytec 4",
              "1873: cover 2",
              "1874: box_extract",
              "1875: pushbytes 0x48656c6c6f",
              "1876: ==",
              "1877: assert",
              "1878: retsub"
            ],
            [
              "134: intc_0",
              "135: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 112 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "113: main_arc4_box_route@35:",
              "116: txn OnCompletion",
              "117: !",
              "118: assert",
              "119: txn ApplicationID",
              "120: assert",
              "121: callsub arc4_box"
            ],
            [
              "1882: arc4_box:",
              "1886: proto 0 0",
              "1889: bytec 6",
              "1894: pushbytes 0x00010203",
              "1895: box_put",
              "1898: bytec 6",
              "1901: box_get",
              "1902: assert",
              "1903: extract 0 1",
              "1904: bytec_3",
              "1905: b==",
              "1906: assert",
              "1909: bytec 6",
              "1912: box_get",
              "1913: assert",
              "1914: extract 1 1",
              "1915: pushbytes 0x01",
              "1916: b==",
              "1917: assert",
              "1920: bytec 6",
              "1923: box_get",
              "1924: assert",
              "1925: extract 2 1",
              "1926: pushbytes 0x02",
              "1927: b==",
              "1928: assert",
              "1931: bytec 6",
              "1934: box_get",
              "1935: assert",
              "1936: extract 3 1",
              "1937: pushbytes 0x03",
              "1938: b==",
              "1939: assert",
              "1940: retsub"
            ],
            [
              "122: intc_0",
              "123: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "100: main_key_box_route@36:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: pushbytes 0x151f7c750007626f785f696e74",
              "109: log",
              "110: intc_0",
              "111: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 9 -> 113 -> 10",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "88: main_key_box_example_route@37:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: callsub key_box_example"
            ],
            [
              "1944: key_box_example:",
              "1948: proto 0 0",
              "1951: intc_1",
              "1952: assert",
              "1953: retsub"
            ],
            [
              "97: intc_0",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 7 -> 114 -> 8",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "60: main_box_map_exists_route@38:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "76: callsub box_map_exists"
            ],
            [
              "1957: box_map_exists:",
              "1962: proto 1 1",
              "1965: frame_dig -1",
              "1966: itob",
              "1967: box_len",
              "1968: bury 1",
              "1969: retsub"
            ],
            [
              "77: bytec_3",
              "78: intc_1",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_1",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_0",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 5 -> 115 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "35: main_box_map_struct_exists_route@39:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: assert",
              "45: txna ApplicationArgs 1",
              "48: callsub box_map_struct_exists"
            ],
            [
              "1973: box_map_struct_exists:",
              "1977: proto 1 1",
              "1980: bytec 11",
              "1981: frame_dig -1",
              "1982: concat",
              "1983: box_len",
              "1984: bury 1",
              "1985: retsub"
            ],
            [
              "49: bytec_3",
              "50: intc_1",
              "51: uncover 2",
              "52: setbit",
              "53: bytec_1",
              "54: swap",
              "55: concat",
              "56: log",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "22: main_key_prefix_box_map_route@40:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: pushbytes 0x151f7c750000",
              "31: log",
              "32: intc_0",
              "33: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 74 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "717: main_bare_routing@41:",
              "720: txn OnCompletion",
              "721: bnz main_after_if_else@43"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 41,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 72 -> 76 -> 73",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "699: main_get_box_route@5:",
              "703: txn OnCompletion",
              "704: !",
              "705: assert",
              "706: txn ApplicationID",
              "707: assert",
              "708: callsub get_box"
            ],
            [
              "730: get_box:",
              "735: proto 0 1",
              "738: bytec_2",
              "739: box_get",
              "740: swap",
              "741: btoi",
              "742: swap",
              "743: assert",
              "744: retsub"
            ],
            [
              "709: itob",
              "710: bytec_1",
              "711: swap",
              "712: concat",
              "713: log",
              "714: intc_0",
              "715: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 70 -> 77 -> 71",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "671: main_get_item_box_map_route@6:",
              "674: txn OnCompletion",
              "675: !",
              "676: assert",
              "677: txn ApplicationID",
              "678: assert",
              "681: txna ApplicationArgs 1",
              "682: btoi",
              "685: callsub get_item_box_map"
            ],
            [
              "748: get_item_box_map:",
              "752: proto 1 1",
              "755: frame_dig -1",
              "756: itob",
              "757: box_get",
              "758: assert",
              "759: retsub"
            ],
            [
              "686: dup",
              "687: len",
              "688: itob",
              "689: extract 6 2",
              "690: swap",
              "691: concat",
              "692: bytec_1",
              "693: swap",
              "694: concat",
              "695: log",
              "696: intc_0",
              "697: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 68 -> 78 -> 69",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "649: main_get_box_map_route@7:",
              "652: txn OnCompletion",
              "653: !",
              "654: assert",
              "655: txn ApplicationID",
              "656: assert",
              "657: callsub get_box_map"
            ],
            [
              "763: get_box_map:",
              "767: proto 0 1",
              "770: intc_0",
              "773: itob",
              "774: box_get",
              "775: bytec 10",
              "776: cover 2",
              "777: select",
              "778: retsub"
            ],
            [
              "658: dup",
              "659: len",
              "660: itob",
              "661: extract 6 2",
              "662: swap",
              "663: concat",
              "664: bytec_1",
              "665: swap",
              "666: concat",
              "667: log",
              "668: intc_0",
              "669: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 66 -> 79 -> 67",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "637: main_get_box_ref_route@8:",
              "640: txn OnCompletion",
              "641: !",
              "642: assert",
              "643: txn ApplicationID",
              "644: assert",
              "645: callsub get_box_ref"
            ],
            [
              "782: get_box_ref:",
              "786: proto 0 0",
              "789: bytec_0",
              "792: intc_2",
              "793: box_create",
              "794: assert",
              "797: txn Sender",
              "800: bytec_0",
              "803: box_del",
              "804: assert",
              "807: bytec_0",
              "810: box_get",
              "811: dig 2",
              "812: cover 2",
              "813: select",
              "814: ==",
              "815: assert",
              "816: retsub"
            ],
            [
              "646: intc_0",
              "647: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 64 -> 80 -> 65",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "614: main_maybe_box_route@9:",
              "617: txn OnCompletion",
              "618: !",
              "619: assert",
              "620: txn ApplicationID",
              "621: assert",
              "622: callsub maybe_box"
            ],
            [
              "820: maybe_box:",
              "824: proto 0 2",
              "827: bytec_2",
              "828: box_get",
              "829: swap",
              "830: btoi",
              "833: swap",
              "834: retsub"
            ],
            [
              "623: swap",
              "624: itob",
              "625: bytec_3",
              "626: intc_1",
              "627: uncover 3",
              "628: setbit",
              "629: concat",
              "630: bytec_1",
              "631: swap",
              "632: concat",
              "633: log",
              "634: intc_0",
              "635: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 62 -> 81 -> 82 -> 83 -> 63",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "583: main_maybe_box_map_route@10:",
              "586: txn OnCompletion",
              "587: !",
              "588: assert",
              "589: txn ApplicationID",
              "590: assert",
              "591: callsub maybe_box_map"
            ],
            [
              "838: maybe_box_map:",
              "842: proto 0 2",
              "845: intc_0",
              "848: itob",
              "849: box_get",
              "850: dup",
              "851: uncover 2",
              "852: swap",
              "855: bnz maybe_box_map_after_if_else@2"
            ],
            [
              "858: pushbytes \"\"",
              "859: frame_bury 1"
            ],
            [
              "861: maybe_box_map_after_if_else@2:",
              "864: frame_dig 1",
              "865: frame_dig 0",
              "866: uncover 3",
              "867: uncover 3",
              "868: retsub"
            ],
            [
              "592: dig 1",
              "593: len",
              "594: itob",
              "595: extract 6 2",
              "596: uncover 2",
              "597: concat",
              "598: bytec_3",
              "599: intc_1",
              "600: uncover 3",
              "601: setbit",
              "602: bytec 15",
              "603: swap",
              "604: concat",
              "605: swap",
              "606: concat",
              "607: bytec_1",
              "608: swap",
              "609: concat",
              "610: log",
              "611: intc_0",
              "612: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 62 -> 81 -> 83 -> 63",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "583: main_maybe_box_map_route@10:",
              "586: txn OnCompletion",
              "587: !",
              "588: assert",
              "589: txn ApplicationID",
              "590: assert",
              "591: callsub maybe_box_map"
            ],
            [
              "838: maybe_box_map:",
              "842: proto 0 2",
              "845: intc_0",
              "848: itob",
              "849: box_get",
              "850: dup",
              "851: uncover 2",
              "852: swap",
              "855: bnz maybe_box_map_after_if_else@2"
            ],
            [
              "861: maybe_box_map_after_if_else@2:",
              "864: frame_dig 1",
              "865: frame_dig 0",
              "866: uncover 3",
              "867: uncover 3",
              "868: retsub"
            ],
            [
              "592: dig 1",
              "593: len",
              "594: itob",
              "595: extract 6 2",
              "596: uncover 2",
              "597: concat",
              "598: bytec_3",
              "599: intc_1",
              "600: uncover 3",
              "601: setbit",
              "602: bytec 15",
              "603: swap",
              "604: concat",
              "605: swap",
              "606: concat",
              "607: bytec_1",
              "608: swap",
              "609: concat",
              "610: log",
              "611: intc_0",
              "612: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 84 -> 85 -> 86 -> 61",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "552: main_maybe_box_ref_route@11:",
              "555: txn OnCompletion",
              "556: !",
              "557: assert",
              "558: txn ApplicationID",
              "559: assert",
              "560: callsub maybe_box_ref"
            ],
            [
              "872: maybe_box_ref:",
              "876: proto 0 2",
              "879: bytec_0",
              "882: intc_2",
              "883: box_create",
              "884: assert",
              "887: bytec_0",
              "890: box_get",
              "891: dup",
              "892: uncover 2",
              "893: swap",
              "896: bnz maybe_box_ref_after_if_else@2"
            ],
            [
              "899: pushbytes 0x",
              "900: frame_bury 1"
            ],
            [
              "902: maybe_box_ref_after_if_else@2:",
              "905: frame_dig 1",
              "906: frame_dig 0",
              "907: uncover 3",
              "908: uncover 3",
              "909: retsub"
            ],
            [
              "561: dig 1",
              "562: len",
              "563: itob",
              "564: extract 6 2",
              "565: uncover 2",
              "566: concat",
              "567: bytec_3",
              "568: intc_1",
              "569: uncover 3",
              "570: setbit",
              "571: bytec 15",
              "572: swap",
              "573: concat",
              "574: swap",
              "575: concat",
              "576: bytec_1",
              "577: swap",
              "578: concat",
              "579: log",
              "580: intc_0",
              "581: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 84 -> 86 -> 61",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "552: main_maybe_box_ref_route@11:",
              "555: txn OnCompletion",
              "556: !",
              "557: assert",
              "558: txn ApplicationID",
              "559: assert",
              "560: callsub maybe_box_ref"
            ],
            [
              "872: maybe_box_ref:",
              "876: proto 0 2",
              "879: bytec_0",
              "882: intc_2",
              "883: box_create",
              "884: assert",
              "887: bytec_0",
              "890: box_get",
              "891: dup",
              "892: uncover 2",
              "893: swap",
              "896: bnz maybe_box_ref_after_if_else@2"
            ],
            [
              "902: maybe_box_ref_after_if_else@2:",
              "905: frame_dig 1",
              "906: frame_dig 0",
              "907: uncover 3",
              "908: uncover 3",
              "909: retsub"
            ],
            [
              "561: dig 1",
              "562: len",
              "563: itob",
              "564: extract 6 2",
              "565: uncover 2",
              "566: concat",
              "567: bytec_3",
              "568: intc_1",
              "569: uncover 3",
              "570: setbit",
              "571: bytec 15",
              "572: swap",
              "573: concat",
              "574: swap",
              "575: concat",
              "576: bytec_1",
              "577: swap",
              "578: concat",
              "579: log",
              "580: intc_0",
              "581: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 58 -> 87 -> 59",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "513: main_get_box_example_route@12:",
              "517: txn OnCompletion",
              "518: !",
              "519: assert",
              "520: txn ApplicationID",
              "521: assert",
              "522: callsub get_box_example"
            ],
            [
              "913: get_box_example:",
              "918: proto 0 3",
              "921: bytec_2",
              "922: box_get",
              "923: swap",
              "924: btoi",
              "925: swap",
              "926: assert",
              "929: bytec 5",
              "930: box_get",
              "931: assert",
              "932: extract 2 0",
              "935: bytec 4",
              "936: box_get",
              "937: assert",
              "944: retsub"
            ],
            [
              "523: uncover 2",
              "524: itob",
              "525: dig 2",
              "526: len",
              "527: itob",
              "528: extract 6 2",
              "529: uncover 3",
              "530: concat",
              "531: swap",
              "532: pushbytes 0x000c",
              "533: concat",
              "534: dig 1",
              "535: len",
              "536: pushint 12",
              "537: +",
              "538: itob",
              "539: extract 6 2",
              "540: concat",
              "541: swap",
              "542: concat",
              "543: swap",
              "544: concat",
              "545: bytec_1",
              "546: swap",
              "547: concat",
              "548: log",
              "549: intc_0",
              "550: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 56 -> 88 -> 57",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "493: main_get_box_map_example_route@13:",
              "496: txn OnCompletion",
              "497: !",
              "498: assert",
              "499: txn ApplicationID",
              "500: assert",
              "501: callsub get_box_map_example"
            ],
            [
              "948: get_box_map_example:",
              "952: proto 0 1",
              "955: intc_0",
              "958: itob",
              "959: box_get",
              "960: bytec 10",
              "961: cover 2",
              "962: select",
              "963: bytec 10",
              "964: ==",
              "965: assert",
              "968: intc_0",
              "969: retsub"
            ],
            [
              "502: bytec_3",
              "503: intc_1",
              "504: uncover 2",
              "505: setbit",
              "506: bytec_1",
              "507: swap",
              "508: concat",
              "509: log",
              "510: intc_0",
              "511: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 54 -> 89 -> 55",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "481: main_maybe_box_example_route@14:",
              "484: txn OnCompletion",
              "485: !",
              "486: assert",
              "487: txn ApplicationID",
              "488: assert",
              "489: callsub maybe_box_example"
            ],
            [
              "973: maybe_box_example:",
              "977: proto 0 0",
              "980: bytec_2",
              "981: box_del",
              "982: pop",
              "985: bytec_2",
              "986: box_get",
              "987: swap",
              "988: btoi",
              "989: pushint 42",
              "990: swap",
              "991: uncover 2",
              "992: select",
              "993: pushint 42",
              "994: ==",
              "995: assert",
              "998: bytec_2",
              "999: box_get",
              "1000: swap",
              "1001: btoi",
              "1004: swap",
              "1005: !",
              "1006: assert",
              "1009: !",
              "1010: assert",
              "1011: retsub"
            ],
            [
              "490: intc_0",
              "491: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 52 -> 90 -> 53",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "469: main_maybe_box_map_example_route@15:",
              "472: txn OnCompletion",
              "473: !",
              "474: assert",
              "475: txn ApplicationID",
              "476: assert",
              "477: callsub maybe_box_map_example"
            ],
            [
              "1015: maybe_box_map_example:",
              "1019: proto 0 0",
              "1022: intc_0",
              "1025: itob",
              "1026: box_get",
              "1027: bury 1",
              "1030: !",
              "1031: assert",
              "1034: intc_1",
              "1037: itob",
              "1038: box_len",
              "1039: bury 1",
              "1040: assert",
              "1041: retsub"
            ],
            [
              "478: intc_0",
              "479: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 50 -> 91 -> 51",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "448: main_get_box_map_struct_route@16:",
              "451: txn OnCompletion",
              "452: !",
              "453: assert",
              "454: txn ApplicationID",
              "455: assert",
              "458: txna ApplicationArgs 1",
              "461: callsub get_box_map_struct"
            ],
            [
              "1045: get_box_map_struct:",
              "1049: proto 1 1",
              "1052: bytec 11",
              "1053: frame_dig -1",
              "1054: concat",
              "1055: box_get",
              "1056: assert",
              "1057: retsub"
            ],
            [
              "462: bytec_1",
              "463: swap",
              "464: concat",
              "465: log",
              "466: intc_0",
              "467: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 48 -> 92 -> 49",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "428: main_set_box_route@17:",
              "432: txn OnCompletion",
              "433: !",
              "434: assert",
              "435: txn ApplicationID",
              "436: assert",
              "439: txna ApplicationArgs 1",
              "440: btoi",
              "444: callsub set_box"
            ],
            [
              "1061: set_box:",
              "1066: proto 1 0",
              "1069: frame_dig -1",
              "1070: itob",
              "1071: bytec_2",
              "1072: swap",
              "1073: box_put",
              "1074: retsub"
            ],
            [
              "445: intc_0",
              "446: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 46 -> 93 -> 47",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "408: main_set_box_map_route@18:",
              "411: txn OnCompletion",
              "412: !",
              "413: assert",
              "414: txn ApplicationID",
              "415: assert",
              "418: txna ApplicationArgs 1",
              "419: btoi",
              "420: txna ApplicationArgs 2",
              "421: extract 2 0",
              "424: callsub set_box_map"
            ],
            [
              "1078: set_box_map:",
              "1082: proto 2 0",
              "1085: frame_dig -2",
              "1086: itob",
              "1087: dup",
              "1088: box_del",
              "1089: pop",
              "1090: frame_dig -1",
              "1091: box_put",
              "1092: retsub"
            ],
            [
              "425: intc_0",
              "426: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 44 -> 94 -> 45",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "382: main_set_box_map_struct_route@19:",
              "385: txn OnCompletion",
              "386: !",
              "387: assert",
              "388: txn ApplicationID",
              "389: assert",
              "392: txna ApplicationArgs 1",
              "393: txna ApplicationArgs 2",
              "396: callsub set_box_map_struct"
            ],
            [
              "1096: set_box_map_struct:",
              "1100: proto 2 1",
              "1103: bytec 11",
              "1104: frame_dig -2",
              "1105: concat",
              "1106: dup",
              "1107: box_del",
              "1108: pop",
              "1109: dup",
              "1110: frame_dig -1",
              "1111: box_put",
              "1114: box_get",
              "1115: assert",
              "1116: frame_dig -1",
              "1117: ==",
              "1118: assert",
              "1121: intc_0",
              "1122: retsub"
            ],
            [
              "397: bytec_3",
              "398: intc_1",
              "399: uncover 2",
              "400: setbit",
              "401: bytec_1",
              "402: swap",
              "403: concat",
              "404: log",
              "405: intc_0",
              "406: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 42 -> 95 -> 43",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "360: main_set_box_example_route@20:",
              "364: txn OnCompletion",
              "365: !",
              "366: assert",
              "367: txn ApplicationID",
              "368: assert",
              "371: txna ApplicationArgs 1",
              "372: btoi",
              "373: txna ApplicationArgs 2",
              "374: txna ApplicationArgs 3",
              "378: callsub set_box_example"
            ],
            [
              "1126: set_box_example:",
              "1136: proto 3 0",
              "1139: frame_dig -3",
              "1140: itob",
              "1141: bytec_2",
              "1142: swap",
              "1143: box_put",
              "1146: bytec 5",
              "1147: box_del",
              "1148: pop",
              "1149: bytec 5",
              "1150: frame_dig -2",
              "1151: box_put",
              "1154: bytec 4",
              "1155: box_del",
              "1156: pop",
              "1157: bytec 4",
              "1158: frame_dig -1",
              "1159: box_put",
              "1162: frame_dig -2",
              "1163: extract 2 0",
              "1164: bytec 12",
              "1165: box_del",
              "1166: pop",
              "1167: bytec 12",
              "1168: swap",
              "1169: box_put",
              "1172: bytec 5",
              "1173: box_get",
              "1174: assert",
              "1177: bytec 5",
              "1178: box_get",
              "1179: assert",
              "1180: intc_1",
              "1181: extract_uint16",
              "1182: swap",
              "1183: intc_1",
              "1184: extract_uint16",
              "1185: ==",
              "1190: assert",
              "1193: bytec_2",
              "1194: box_get",
              "1195: swap",
              "1196: btoi",
              "1197: swap",
              "1198: assert",
              "1199: pushint 3",
              "1200: +",
              "1201: itob",
              "1202: bytec_2",
              "1203: swap",
              "1204: box_put",
              "1205: retsub"
            ],
            [
              "379: intc_0",
              "380: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 40 -> 96 -> 41",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "347: main_delete_box_route@21:",
              "351: txn OnCompletion",
              "352: !",
              "353: assert",
              "354: txn ApplicationID",
              "355: assert",
              "356: callsub delete_box"
            ],
            [
              "1209: delete_box:",
              "1214: proto 0 0",
              "1217: bytec_2",
              "1218: box_del",
              "1219: pop",
              "1222: bytec 5",
              "1223: box_del",
              "1224: pop",
              "1227: bytec 4",
              "1228: box_del",
              "1229: pop",
              "1232: bytec_2",
              "1233: box_get",
              "1234: swap",
              "1235: btoi",
              "1236: pushint 42",
              "1237: swap",
              "1238: uncover 2",
              "1239: select",
              "1240: pushint 42",
              "1241: ==",
              "1242: assert",
              "1245: bytec 5",
              "1246: box_get",
              "1247: bytec 13",
              "1248: cover 2",
              "1249: select",
              "1250: extract 2 0",
              "1251: pushbytes 0x3432",
              "1252: ==",
              "1257: assert",
              "1260: bytec 4",
              "1261: box_get",
              "1262: bytec 13",
              "1263: cover 2",
              "1264: select",
              "1265: bytec 13",
              "1266: ==",
              "1267: assert",
              "1268: retsub"
            ],
            [
              "357: intc_0",
              "358: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 38 -> 97 -> 39",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "329: main_delete_box_map_route@22:",
              "332: txn OnCompletion",
              "333: !",
              "334: assert",
              "335: txn ApplicationID",
              "336: assert",
              "339: txna ApplicationArgs 1",
              "340: btoi",
              "343: callsub delete_box_map"
            ],
            [
              "1272: delete_box_map:",
              "1276: proto 1 0",
              "1279: frame_dig -1",
              "1280: itob",
              "1281: box_del",
              "1282: pop",
              "1283: retsub"
            ],
            [
              "344: intc_0",
              "345: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 36 -> 98 -> 37",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "317: main_delete_box_ref_route@23:",
              "320: txn OnCompletion",
              "321: !",
              "322: assert",
              "323: txn ApplicationID",
              "324: assert",
              "325: callsub delete_box_ref"
            ],
            [
              "1287: delete_box_ref:",
              "1291: proto 0 0",
              "1294: bytec 14",
              "1295: intc_2",
              "1296: box_create",
              "1297: pop",
              "1300: bytec 14",
              "1301: box_len",
              "1302: bury 1",
              "1303: assert",
              "1306: bytec 14",
              "1307: box_del",
              "1308: pop",
              "1311: bytec_0",
              "1314: box_get",
              "1317: !",
              "1318: assert",
              "1321: pushbytes 0x",
              "1322: ==",
              "1323: assert",
              "1324: retsub"
            ],
            [
              "326: intc_0",
              "327: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 34 -> 99 -> 100 -> 35",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "299: main_box_map_length_route@24:",
              "303: txn OnCompletion",
              "304: !",
              "305: assert",
              "306: txn ApplicationID",
              "307: assert",
              "308: callsub box_map_length"
            ],
            [
              "1328: box_map_length:",
              "1333: proto 0 1",
              "1336: intc_1",
              "1339: itob",
              "1340: dup",
              "1341: box_len",
              "1342: bury 1",
              "1343: bnz box_map_length_after_if_else@2"
            ],
            [
              "1346: intc_1",
              "1347: swap",
              "1348: retsub"
            ],
            [
              "309: itob",
              "310: bytec_1",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_0",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 34 -> 99 -> 101 -> 35",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "299: main_box_map_length_route@24:",
              "303: txn OnCompletion",
              "304: !",
              "305: assert",
              "306: txn ApplicationID",
              "307: assert",
              "308: callsub box_map_length"
            ],
            [
              "1328: box_map_length:",
              "1333: proto 0 1",
              "1336: intc_1",
              "1339: itob",
              "1340: dup",
              "1341: box_len",
              "1342: bury 1",
              "1343: bnz box_map_length_after_if_else@2"
            ],
            [
              "1350: box_map_length_after_if_else@2:",
              "1353: frame_dig 0",
              "1354: box_len",
              "1355: assert",
              "1356: swap",
              "1357: retsub"
            ],
            [
              "309: itob",
              "310: bytec_1",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_0",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 32 -> 102 -> 33",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "282: main_length_box_ref_route@25:",
              "285: txn OnCompletion",
              "286: !",
              "287: assert",
              "288: txn ApplicationID",
              "289: assert",
              "290: callsub length_box_ref"
            ],
            [
              "1361: length_box_ref:",
              "1365: proto 0 1",
              "1368: bytec_0",
              "1371: intc_2",
              "1372: box_create",
              "1373: assert",
              "1376: bytec_0",
              "1379: box_len",
              "1380: assert",
              "1381: retsub"
            ],
            [
              "291: itob",
              "292: bytec_1",
              "293: swap",
              "294: concat",
              "295: log",
              "296: intc_0",
              "297: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 30 -> 103 -> 31",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "262: main_box_map_struct_length_route@26:",
              "265: txn OnCompletion",
              "266: !",
              "267: assert",
              "268: txn ApplicationID",
              "269: assert",
              "270: callsub box_map_struct_length"
            ],
            [
              "1385: box_map_struct_length:",
              "1389: proto 0 1",
              "1392: bytec 7",
              "1393: box_del",
              "1394: pop",
              "1395: bytec 7",
              "1398: pushbytes 0x0012000000000000004600000000000000020008746573744e616d65",
              "1401: box_put",
              "1404: bytec 7",
              "1405: box_len",
              "1406: assert",
              "1407: pushint 28",
              "1408: ==",
              "1409: assert",
              "1412: bytec 7",
              "1413: box_len",
              "1414: assert",
              "1415: pushint 28",
              "1416: ==",
              "1417: assert",
              "1420: intc_0",
              "1421: retsub"
            ],
            [
              "271: bytec_3",
              "272: intc_1",
              "273: uncover 2",
              "274: setbit",
              "275: bytec_1",
              "276: swap",
              "277: concat",
              "278: log",
              "279: intc_0",
              "280: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 28 -> 104 -> 29",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "249: main_box_map_length_example_route@27:",
              "253: txn OnCompletion",
              "254: !",
              "255: assert",
              "256: txn ApplicationID",
              "257: assert",
              "258: callsub box_map_length_example"
            ],
            [
              "1425: box_map_length_example:",
              "1430: proto 0 0",
              "1433: intc_1",
              "1436: itob",
              "1437: dup",
              "1438: box_del",
              "1439: pop",
              "1440: dup",
              "1443: pushbytes \"Hmmmmm\"",
              "1446: box_put",
              "1449: dup",
              "1450: box_len",
              "1451: assert",
              "1452: pushint 6",
              "1453: ==",
              "1454: assert",
              "1457: box_len",
              "1458: assert",
              "1459: pushint 6",
              "1460: ==",
              "1461: assert",
              "1462: retsub"
            ],
            [
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 26 -> 105 -> 27",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "237: main_length_box_ref_example_route@28:",
              "240: txn OnCompletion",
              "241: !",
              "242: assert",
              "243: txn ApplicationID",
              "244: assert",
              "245: callsub length_box_ref_example"
            ],
            [
              "1466: length_box_ref_example:",
              "1470: proto 0 0",
              "1473: bytec_0",
              "1476: intc_2",
              "1477: box_create",
              "1478: assert",
              "1481: bytec_0",
              "1484: box_len",
              "1485: assert",
              "1486: intc_3",
              "1487: ==",
              "1488: assert",
              "1491: bytec_0",
              "1494: intc_2",
              "1495: box_create",
              "1496: assert",
              "1499: bytec_0",
              "1502: box_len",
              "1503: assert",
              "1504: intc_3",
              "1505: ==",
              "1506: assert",
              "1509: bytec_0",
              "1512: intc_2",
              "1513: box_create",
              "1514: assert",
              "1517: bytec_0",
              "1520: box_len",
              "1521: assert",
              "1522: intc_3",
              "1523: ==",
              "1524: assert",
              "1527: bytec_0",
              "1530: intc_2",
              "1531: box_create",
              "1532: assert",
              "1535: bytec_0",
              "1538: box_len",
              "1539: assert",
              "1540: intc_3",
              "1541: ==",
              "1542: assert",
              "1543: retsub"
            ],
            [
              "246: intc_0",
              "247: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 24 -> 106 -> 25",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "224: main_extract_box_ref_route@29:",
              "228: txn OnCompletion",
              "229: !",
              "230: assert",
              "231: txn ApplicationID",
              "232: assert",
              "233: callsub extract_box_ref"
            ],
            [
              "1547: extract_box_ref:",
              "1552: proto 0 0",
              "1555: bytec_0",
              "1558: intc_2",
              "1559: box_create",
              "1560: assert",
              "1563: txn Sender",
              "1566: global CurrentApplicationAddress",
              "1569: bytec_0",
              "1572: intc_1",
              "1573: dig 3",
              "1574: box_replace",
              "1577: bytec_0",
              "1580: intc_1",
              "1581: dup",
              "1582: dig 3",
              "1583: UNSUPPORTED box_splice",
              "1586: bytec_0",
              "1589: intc_3",
              "1592: bytec 8",
              "1595: box_replace",
              "1598: bytec_0",
              "1601: intc_1",
              "1602: pushint 69",
              "1603: box_extract",
              "1606: swap",
              "1607: uncover 2",
              "1608: concat",
              "1611: bytec 8",
              "1614: concat",
              "1615: ==",
              "1616: assert",
              "1617: retsub"
            ],
            [
              "234: intc_0",
              "235: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 22 -> 107 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "211: main_manipulate_box_ref_route@30:",
              "215: txn OnCompletion",
              "216: !",
              "217: assert",
              "218: txn ApplicationID",
              "219: assert",
              "220: callsub manipulate_box_ref"
            ],
            [
              "1621: manipulate_box_ref:",
              "1626: proto 0 0",
              "1629: bytec_0",
              "1632: intc_2",
              "1633: box_create",
              "1634: assert",
              "1637: bytec_0",
              "1640: box_len",
              "1641: bury 1",
              "1642: assert",
              "1646: txn Sender",
              "1649: global CurrentApplicationAddress",
              "1652: bytec_0",
              "1655: intc_1",
              "1656: dig 3",
              "1657: box_replace",
              "1660: bytec_0",
              "1663: intc_1",
              "1664: dup",
              "1665: dig 3",
              "1666: UNSUPPORTED box_splice",
              "1669: bytec_0",
              "1672: intc_3",
              "1675: bytec 8",
              "1678: box_replace",
              "1681: bytec_0",
              "1684: intc_1",
              "1685: pushint 69",
              "1686: box_extract",
              "1689: dig 1",
              "1690: dig 3",
              "1691: concat",
              "1694: bytec 8",
              "1697: concat",
              "1698: ==",
              "1699: assert",
              "1702: bytec_0",
              "1705: box_del",
              "1706: assert",
              "1709: concat",
              "1712: bytec_0",
              "1715: swap",
              "1716: box_put",
              "1719: bytec_0",
              "1722: box_len",
              "1723: bury 1",
              "1724: assert",
              "1727: bytec_0",
              "1730: box_len",
              "1731: assert",
              "1732: intc_3",
              "1733: ==",
              "1734: assert",
              "1735: retsub"
            ],
            [
              "221: intc_0",
              "222: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 20 -> 108 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "198: main_value_box_route@31:",
              "202: txn OnCompletion",
              "203: !",
              "204: assert",
              "205: txn ApplicationID",
              "206: assert",
              "207: callsub value_box"
            ],
            [
              "1739: value_box:",
              "1744: proto 0 0",
              "1747: bytec_2",
              "1748: box_get",
              "1749: swap",
              "1750: btoi",
              "1751: swap",
              "1752: assert",
              "1753: pushint 10",
              "1754: ==",
              "1755: assert",
              "1756: retsub"
            ],
            [
              "208: intc_0",
              "209: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 18 -> 109 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "178: main_exist_box_route@32:",
              "181: txn OnCompletion",
              "182: !",
              "183: assert",
              "184: txn ApplicationID",
              "185: assert",
              "186: callsub exist_box"
            ],
            [
              "1760: exist_box:",
              "1764: proto 0 1",
              "1767: bytec_2",
              "1768: box_len",
              "1769: bury 1",
              "1770: retsub"
            ],
            [
              "187: bytec_3",
              "188: intc_1",
              "189: uncover 2",
              "190: setbit",
              "191: bytec_1",
              "192: swap",
              "193: concat",
              "194: log",
              "195: intc_0",
              "196: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 16 -> 110 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "137: main_exist_box_example_route@33:",
              "140: txn OnCompletion",
              "141: !",
              "142: assert",
              "143: txn ApplicationID",
              "144: assert",
              "145: callsub exist_box_example"
            ],
            [
              "1774: exist_box_example:",
              "1778: proto 0 3",
              "1781: bytec 5",
              "1782: box_len",
              "1783: bury 1",
              "1784: bytec 4",
              "1785: box_len",
              "1786: bury 1",
              "1787: bytec 12",
              "1788: box_len",
              "1789: bury 1",
              "1790: retsub"
            ],
            [
              "146: bytec_3",
              "147: intc_1",
              "148: uncover 4",
              "149: setbit",
              "150: bytec_3",
              "151: intc_1",
              "152: uncover 4",
              "153: setbit",
              "154: bytec_3",
              "155: intc_1",
              "156: uncover 4",
              "157: setbit",
              "158: swap",
              "159: intc_1",
              "160: getbit",
              "161: uncover 2",
              "162: intc_0",
              "163: uncover 2",
              "164: setbit",
              "165: swap",
              "166: intc_1",
              "167: getbit",
              "168: pushint 2",
              "169: swap",
              "170: setbit",
              "171: bytec_1",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 111 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "125: main_slice_box_route@34:",
              "128: txn OnCompletion",
              "129: !",
              "130: assert",
              "131: txn ApplicationID",
              "132: assert",
              "133: callsub slice_box"
            ],
            [
              "1794: slice_box:",
              "1798: proto 0 0",
              "1801: bytec 9",
              "1804: box_del",
              "1805: pop",
              "1808: bytec 9",
              "1811: pushbytes 0x54657374696e672074657374696e6720313233",
              "1812: box_put",
              "1815: bytec 9",
              "1818: box_len",
              "1819: pop",
              "1820: dup",
              "1821: intc_1",
              "1822: dig 2",
              "1823: select",
              "1824: pushint 7",
              "1825: dig 2",
              "1826: <",
              "1827: uncover 2",
              "1828: pushint 7",
              "1829: uncover 2",
              "1830: select",
              "1831: dig 1",
              "1832: -",
              "1835: bytec 9",
              "1838: cover 2",
              "1839: box_extract",
              "1840: pushbytes 0x54657374696e67",
              "1841: ==",
              "1842: assert",
              "1845: bytec 4",
              "1846: box_del",
              "1847: pop",
              "1848: bytec 4",
              "1849: pushbytes 0x000548656c6c6f",
              "1850: box_put",
              "1853: bytec 4",
              "1854: box_len",
              "1855: pop",
              "1856: pushint 2",
              "1857: dig 1",
              "1858: <",
              "1859: dig 1",
              "1860: pushint 2",
              "1861: uncover 2",
              "1862: select",
              "1863: pushint 10",
              "1864: dig 2",
              "1865: <",
              "1866: uncover 2",
              "1867: pushint 10",
              "1868: uncover 2",
              "1869: select",
              "1870: dig 1",
              "1871: -",
              "1872: bytec 4",
              "1873: cover 2",
              "1874: box_extract",
              "1875: pushbytes 0x48656c6c6f",
              "1876: ==",
              "1877: assert",
              "1878: retsub"
            ],
            [
              "134: intc_0",
              "135: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 112 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "113: main_arc4_box_route@35:",
              "116: txn OnCompletion",
              "117: !",
              "118: assert",
              "119: txn ApplicationID",
              "120: assert",
              "121: callsub arc4_box"
            ],
            [
              "1882: arc4_box:",
              "1886: proto 0 0",
              "1889: bytec 6",
              "1894: pushbytes 0x00010203",
              "1895: box_put",
              "1898: bytec 6",
              "1901: box_get",
              "1902: assert",
              "1903: extract 0 1",
              "1904: bytec_3",
              "1905: b==",
              "1906: assert",
              "1909: bytec 6",
              "1912: box_get",
              "1913: assert",
              "1914: extract 1 1",
              "1915: pushbytes 0x01",
              "1916: b==",
              "1917: assert",
              "1920: bytec 6",
              "1923: box_get",
              "1924: assert",
              "1925: extract 2 1",
              "1926: pushbytes 0x02",
              "1927: b==",
              "1928: assert",
              "1931: bytec 6",
              "1934: box_get",
              "1935: assert",
              "1936: extract 3 1",
              "1937: pushbytes 0x03",
              "1938: b==",
              "1939: assert",
              "1940: retsub"
            ],
            [
              "122: intc_0",
              "123: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "100: main_key_box_route@36:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: pushbytes 0x151f7c750007626f785f696e74",
              "109: log",
              "110: intc_0",
              "111: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 9 -> 113 -> 10",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "88: main_key_box_example_route@37:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: callsub key_box_example"
            ],
            [
              "1944: key_box_example:",
              "1948: proto 0 0",
              "1951: intc_1",
              "1952: assert",
              "1953: retsub"
            ],
            [
              "97: intc_0",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 7 -> 114 -> 8",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "60: main_box_map_exists_route@38:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "76: callsub box_map_exists"
            ],
            [
              "1957: box_map_exists:",
              "1962: proto 1 1",
              "1965: frame_dig -1",
              "1966: itob",
              "1967: box_len",
              "1968: bury 1",
              "1969: retsub"
            ],
            [
              "77: bytec_3",
              "78: intc_1",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_1",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_0",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 5 -> 115 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "35: main_box_map_struct_exists_route@39:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: assert",
              "45: txna ApplicationArgs 1",
              "48: callsub box_map_struct_exists"
            ],
            [
              "1973: box_map_struct_exists:",
              "1977: proto 1 1",
              "1980: bytec 11",
              "1981: frame_dig -1",
              "1982: concat",
              "1983: box_len",
              "1984: bury 1",
              "1985: retsub"
            ],
            [
              "49: bytec_3",
              "50: intc_1",
              "51: uncover 2",
              "52: setbit",
              "53: bytec_1",
              "54: swap",
              "55: concat",
              "56: log",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "22: main_key_prefix_box_map_route@40:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: pushbytes 0x151f7c750000",
              "31: log",
              "32: intc_0",
              "33: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 74 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "717: main_bare_routing@41:",
              "720: txn OnCompletion",
              "721: bnz main_after_if_else@43"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 42,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 72 -> 76 -> 73",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "699: main_get_box_route@5:",
              "703: txn OnCompletion",
              "704: !",
              "705: assert",
              "706: txn ApplicationID",
              "707: assert",
              "708: callsub get_box"
            ],
            [
              "730: get_box:",
              "735: proto 0 1",
              "738: bytec_2",
              "739: box_get",
              "740: swap",
              "741: btoi",
              "742: swap",
              "743: assert",
              "744: retsub"
            ],
            [
              "709: itob",
              "710: bytec_1",
              "711: swap",
              "712: concat",
              "713: log",
              "714: intc_0",
              "715: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 70 -> 77 -> 71",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "671: main_get_item_box_map_route@6:",
              "674: txn OnCompletion",
              "675: !",
              "676: assert",
              "677: txn ApplicationID",
              "678: assert",
              "681: txna ApplicationArgs 1",
              "682: btoi",
              "685: callsub get_item_box_map"
            ],
            [
              "748: get_item_box_map:",
              "752: proto 1 1",
              "755: frame_dig -1",
              "756: itob",
              "757: box_get",
              "758: assert",
              "759: retsub"
            ],
            [
              "686: dup",
              "687: len",
              "688: itob",
              "689: extract 6 2",
              "690: swap",
              "691: concat",
              "692: bytec_1",
              "693: swap",
              "694: concat",
              "695: log",
              "696: intc_0",
              "697: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 68 -> 78 -> 69",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "649: main_get_box_map_route@7:",
              "652: txn OnCompletion",
              "653: !",
              "654: assert",
              "655: txn ApplicationID",
              "656: assert",
              "657: callsub get_box_map"
            ],
            [
              "763: get_box_map:",
              "767: proto 0 1",
              "770: intc_0",
              "773: itob",
              "774: box_get",
              "775: bytec 10",
              "776: cover 2",
              "777: select",
              "778: retsub"
            ],
            [
              "658: dup",
              "659: len",
              "660: itob",
              "661: extract 6 2",
              "662: swap",
              "663: concat",
              "664: bytec_1",
              "665: swap",
              "666: concat",
              "667: log",
              "668: intc_0",
              "669: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 66 -> 79 -> 67",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "637: main_get_box_ref_route@8:",
              "640: txn OnCompletion",
              "641: !",
              "642: assert",
              "643: txn ApplicationID",
              "644: assert",
              "645: callsub get_box_ref"
            ],
            [
              "782: get_box_ref:",
              "786: proto 0 0",
              "789: bytec_0",
              "792: intc_2",
              "793: box_create",
              "794: assert",
              "797: txn Sender",
              "800: bytec_0",
              "803: box_del",
              "804: assert",
              "807: bytec_0",
              "810: box_get",
              "811: dig 2",
              "812: cover 2",
              "813: select",
              "814: ==",
              "815: assert",
              "816: retsub"
            ],
            [
              "646: intc_0",
              "647: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 64 -> 80 -> 65",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "614: main_maybe_box_route@9:",
              "617: txn OnCompletion",
              "618: !",
              "619: assert",
              "620: txn ApplicationID",
              "621: assert",
              "622: callsub maybe_box"
            ],
            [
              "820: maybe_box:",
              "824: proto 0 2",
              "827: bytec_2",
              "828: box_get",
              "829: swap",
              "830: btoi",
              "833: swap",
              "834: retsub"
            ],
            [
              "623: swap",
              "624: itob",
              "625: bytec_3",
              "626: intc_1",
              "627: uncover 3",
              "628: setbit",
              "629: concat",
              "630: bytec_1",
              "631: swap",
              "632: concat",
              "633: log",
              "634: intc_0",
              "635: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 62 -> 81 -> 82 -> 83 -> 63",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "583: main_maybe_box_map_route@10:",
              "586: txn OnCompletion",
              "587: !",
              "588: assert",
              "589: txn ApplicationID",
              "590: assert",
              "591: callsub maybe_box_map"
            ],
            [
              "838: maybe_box_map:",
              "842: proto 0 2",
              "845: intc_0",
              "848: itob",
              "849: box_get",
              "850: dup",
              "851: uncover 2",
              "852: swap",
              "855: bnz maybe_box_map_after_if_else@2"
            ],
            [
              "858: pushbytes \"\"",
              "859: frame_bury 1"
            ],
            [
              "861: maybe_box_map_after_if_else@2:",
              "864: frame_dig 1",
              "865: frame_dig 0",
              "866: uncover 3",
              "867: uncover 3",
              "868: retsub"
            ],
            [
              "592: dig 1",
              "593: len",
              "594: itob",
              "595: extract 6 2",
              "596: uncover 2",
              "597: concat",
              "598: bytec_3",
              "599: intc_1",
              "600: uncover 3",
              "601: setbit",
              "602: bytec 15",
              "603: swap",
              "604: concat",
              "605: swap",
              "606: concat",
              "607: bytec_1",
              "608: swap",
              "609: concat",
              "610: log",
              "611: intc_0",
              "612: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 62 -> 81 -> 83 -> 63",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "583: main_maybe_box_map_route@10:",
              "586: txn OnCompletion",
              "587: !",
              "588: assert",
              "589: txn ApplicationID",
              "590: assert",
              "591: callsub maybe_box_map"
            ],
            [
              "838: maybe_box_map:",
              "842: proto 0 2",
              "845: intc_0",
              "848: itob",
              "849: box_get",
              "850: dup",
              "851: uncover 2",
              "852: swap",
              "855: bnz maybe_box_map_after_if_else@2"
            ],
            [
              "861: maybe_box_map_after_if_else@2:",
              "864: frame_dig 1",
              "865: frame_dig 0",
              "866: uncover 3",
              "867: uncover 3",
              "868: retsub"
            ],
            [
              "592: dig 1",
              "593: len",
              "594: itob",
              "595: extract 6 2",
              "596: uncover 2",
              "597: concat",
              "598: bytec_3",
              "599: intc_1",
              "600: uncover 3",
              "601: setbit",
              "602: bytec 15",
              "603: swap",
              "604: concat",
              "605: swap",
              "606: concat",
              "607: bytec_1",
              "608: swap",
              "609: concat",
              "610: log",
              "611: intc_0",
              "612: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 84 -> 85 -> 86 -> 61",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "552: main_maybe_box_ref_route@11:",
              "555: txn OnCompletion",
              "556: !",
              "557: assert",
              "558: txn ApplicationID",
              "559: assert",
              "560: callsub maybe_box_ref"
            ],
            [
              "872: maybe_box_ref:",
              "876: proto 0 2",
              "879: bytec_0",
              "882: intc_2",
              "883: box_create",
              "884: assert",
              "887: bytec_0",
              "890: box_get",
              "891: dup",
              "892: uncover 2",
              "893: swap",
              "896: bnz maybe_box_ref_after_if_else@2"
            ],
            [
              "899: pushbytes 0x",
              "900: frame_bury 1"
            ],
            [
              "902: maybe_box_ref_after_if_else@2:",
              "905: frame_dig 1",
              "906: frame_dig 0",
              "907: uncover 3",
              "908: uncover 3",
              "909: retsub"
            ],
            [
              "561: dig 1",
              "562: len",
              "563: itob",
              "564: extract 6 2",
              "565: uncover 2",
              "566: concat",
              "567: bytec_3",
              "568: intc_1",
              "569: uncover 3",
              "570: setbit",
              "571: bytec 15",
              "572: swap",
              "573: concat",
              "574: swap",
              "575: concat",
              "576: bytec_1",
              "577: swap",
              "578: concat",
              "579: log",
              "580: intc_0",
              "581: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 84 -> 86 -> 61",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "552: main_maybe_box_ref_route@11:",
              "555: txn OnCompletion",
              "556: !",
              "557: assert",
              "558: txn ApplicationID",
              "559: assert",
              "560: callsub maybe_box_ref"
            ],
            [
              "872: maybe_box_ref:",
              "876: proto 0 2",
              "879: bytec_0",
              "882: intc_2",
              "883: box_create",
              "884: assert",
              "887: bytec_0",
              "890: box_get",
              "891: dup",
              "892: uncover 2",
              "893: swap",
              "896: bnz maybe_box_ref_after_if_else@2"
            ],
            [
              "902: maybe_box_ref_after_if_else@2:",
              "905: frame_dig 1",
              "906: frame_dig 0",
              "907: uncover 3",
              "908: uncover 3",
              "909: retsub"
            ],
            [
              "561: dig 1",
              "562: len",
              "563: itob",
              "564: extract 6 2",
              "565: uncover 2",
              "566: concat",
              "567: bytec_3",
              "568: intc_1",
              "569: uncover 3",
              "570: setbit",
              "571: bytec 15",
              "572: swap",
              "573: concat",
              "574: swap",
              "575: concat",
              "576: bytec_1",
              "577: swap",
              "578: concat",
              "579: log",
              "580: intc_0",
              "581: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 58 -> 87 -> 59",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "513: main_get_box_example_route@12:",
              "517: txn OnCompletion",
              "518: !",
              "519: assert",
              "520: txn ApplicationID",
              "521: assert",
              "522: callsub get_box_example"
            ],
            [
              "913: get_box_example:",
              "918: proto 0 3",
              "921: bytec_2",
              "922: box_get",
              "923: swap",
              "924: btoi",
              "925: swap",
              "926: assert",
              "929: bytec 5",
              "930: box_get",
              "931: assert",
              "932: extract 2 0",
              "935: bytec 4",
              "936: box_get",
              "937: assert",
              "944: retsub"
            ],
            [
              "523: uncover 2",
              "524: itob",
              "525: dig 2",
              "526: len",
              "527: itob",
              "528: extract 6 2",
              "529: uncover 3",
              "530: concat",
              "531: swap",
              "532: pushbytes 0x000c",
              "533: concat",
              "534: dig 1",
              "535: len",
              "536: pushint 12",
              "537: +",
              "538: itob",
              "539: extract 6 2",
              "540: concat",
              "541: swap",
              "542: concat",
              "543: swap",
              "544: concat",
              "545: bytec_1",
              "546: swap",
              "547: concat",
              "548: log",
              "549: intc_0",
              "550: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 56 -> 88 -> 57",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "493: main_get_box_map_example_route@13:",
              "496: txn OnCompletion",
              "497: !",
              "498: assert",
              "499: txn ApplicationID",
              "500: assert",
              "501: callsub get_box_map_example"
            ],
            [
              "948: get_box_map_example:",
              "952: proto 0 1",
              "955: intc_0",
              "958: itob",
              "959: box_get",
              "960: bytec 10",
              "961: cover 2",
              "962: select",
              "963: bytec 10",
              "964: ==",
              "965: assert",
              "968: intc_0",
              "969: retsub"
            ],
            [
              "502: bytec_3",
              "503: intc_1",
              "504: uncover 2",
              "505: setbit",
              "506: bytec_1",
              "507: swap",
              "508: concat",
              "509: log",
              "510: intc_0",
              "511: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 54 -> 89 -> 55",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "481: main_maybe_box_example_route@14:",
              "484: txn OnCompletion",
              "485: !",
              "486: assert",
              "487: txn ApplicationID",
              "488: assert",
              "489: callsub maybe_box_example"
            ],
            [
              "973: maybe_box_example:",
              "977: proto 0 0",
              "980: bytec_2",
              "981: box_del",
              "982: pop",
              "985: bytec_2",
              "986: box_get",
              "987: swap",
              "988: btoi",
              "989: pushint 42",
              "990: swap",
              "991: uncover 2",
              "992: select",
              "993: pushint 42",
              "994: ==",
              "995: assert",
              "998: bytec_2",
              "999: box_get",
              "1000: swap",
              "1001: btoi",
              "1004: swap",
              "1005: !",
              "1006: assert",
              "1009: !",
              "1010: assert",
              "1011: retsub"
            ],
            [
              "490: intc_0",
              "491: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 52 -> 90 -> 53",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "469: main_maybe_box_map_example_route@15:",
              "472: txn OnCompletion",
              "473: !",
              "474: assert",
              "475: txn ApplicationID",
              "476: assert",
              "477: callsub maybe_box_map_example"
            ],
            [
              "1015: maybe_box_map_example:",
              "1019: proto 0 0",
              "1022: intc_0",
              "1025: itob",
              "1026: box_get",
              "1027: bury 1",
              "1030: !",
              "1031: assert",
              "1034: intc_1",
              "1037: itob",
              "1038: box_len",
              "1039: bury 1",
              "1040: assert",
              "1041: retsub"
            ],
            [
              "478: intc_0",
              "479: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 50 -> 91 -> 51",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "448: main_get_box_map_struct_route@16:",
              "451: txn OnCompletion",
              "452: !",
              "453: assert",
              "454: txn ApplicationID",
              "455: assert",
              "458: txna ApplicationArgs 1",
              "461: callsub get_box_map_struct"
            ],
            [
              "1045: get_box_map_struct:",
              "1049: proto 1 1",
              "1052: bytec 11",
              "1053: frame_dig -1",
              "1054: concat",
              "1055: box_get",
              "1056: assert",
              "1057: retsub"
            ],
            [
              "462: bytec_1",
              "463: swap",
              "464: concat",
              "465: log",
              "466: intc_0",
              "467: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 48 -> 92 -> 49",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "428: main_set_box_route@17:",
              "432: txn OnCompletion",
              "433: !",
              "434: assert",
              "435: txn ApplicationID",
              "436: assert",
              "439: txna ApplicationArgs 1",
              "440: btoi",
              "444: callsub set_box"
            ],
            [
              "1061: set_box:",
              "1066: proto 1 0",
              "1069: frame_dig -1",
              "1070: itob",
              "1071: bytec_2",
              "1072: swap",
              "1073: box_put",
              "1074: retsub"
            ],
            [
              "445: intc_0",
              "446: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 46 -> 93 -> 47",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "408: main_set_box_map_route@18:",
              "411: txn OnCompletion",
              "412: !",
              "413: assert",
              "414: txn ApplicationID",
              "415: assert",
              "418: txna ApplicationArgs 1",
              "419: btoi",
              "420: txna ApplicationArgs 2",
              "421: extract 2 0",
              "424: callsub set_box_map"
            ],
            [
              "1078: set_box_map:",
              "1082: proto 2 0",
              "1085: frame_dig -2",
              "1086: itob",
              "1087: dup",
              "1088: box_del",
              "1089: pop",
              "1090: frame_dig -1",
              "1091: box_put",
              "1092: retsub"
            ],
            [
              "425: intc_0",
              "426: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 44 -> 94 -> 45",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "382: main_set_box_map_struct_route@19:",
              "385: txn OnCompletion",
              "386: !",
              "387: assert",
              "388: txn ApplicationID",
              "389: assert",
              "392: txna ApplicationArgs 1",
              "393: txna ApplicationArgs 2",
              "396: callsub set_box_map_struct"
            ],
            [
              "1096: set_box_map_struct:",
              "1100: proto 2 1",
              "1103: bytec 11",
              "1104: frame_dig -2",
              "1105: concat",
              "1106: dup",
              "1107: box_del",
              "1108: pop",
              "1109: dup",
              "1110: frame_dig -1",
              "1111: box_put",
              "1114: box_get",
              "1115: assert",
              "1116: frame_dig -1",
              "1117: ==",
              "1118: assert",
              "1121: intc_0",
              "1122: retsub"
            ],
            [
              "397: bytec_3",
              "398: intc_1",
              "399: uncover 2",
              "400: setbit",
              "401: bytec_1",
              "402: swap",
              "403: concat",
              "404: log",
              "405: intc_0",
              "406: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 42 -> 95 -> 43",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "360: main_set_box_example_route@20:",
              "364: txn OnCompletion",
              "365: !",
              "366: assert",
              "367: txn ApplicationID",
              "368: assert",
              "371: txna ApplicationArgs 1",
              "372: btoi",
              "373: txna ApplicationArgs 2",
              "374: txna ApplicationArgs 3",
              "378: callsub set_box_example"
            ],
            [
              "1126: set_box_example:",
              "1136: proto 3 0",
              "1139: frame_dig -3",
              "1140: itob",
              "1141: bytec_2",
              "1142: swap",
              "1143: box_put",
              "1146: bytec 5",
              "1147: box_del",
              "1148: pop",
              "1149: bytec 5",
              "1150: frame_dig -2",
              "1151: box_put",
              "1154: bytec 4",
              "1155: box_del",
              "1156: pop",
              "1157: bytec 4",
              "1158: frame_dig -1",
              "1159: box_put",
              "1162: frame_dig -2",
              "1163: extract 2 0",
              "1164: bytec 12",
              "1165: box_del",
              "1166: pop",
              "1167: bytec 12",
              "1168: swap",
              "1169: box_put",
              "1172: bytec 5",
              "1173: box_get",
              "1174: assert",
              "1177: bytec 5",
              "1178: box_get",
              "1179: assert",
              "1180: intc_1",
              "1181: extract_uint16",
              "1182: swap",
              "1183: intc_1",
              "1184: extract_uint16",
              "1185: ==",
              "1190: assert",
              "1193: bytec_2",
              "1194: box_get",
              "1195: swap",
              "1196: btoi",
              "1197: swap",
              "1198: assert",
              "1199: pushint 3",
              "1200: +",
              "1201: itob",
              "1202: bytec_2",
              "1203: swap",
              "1204: box_put",
              "1205: retsub"
            ],
            [
              "379: intc_0",
              "380: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 40 -> 96 -> 41",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "347: main_delete_box_route@21:",
              "351: txn OnCompletion",
              "352: !",
              "353: assert",
              "354: txn ApplicationID",
              "355: assert",
              "356: callsub delete_box"
            ],
            [
              "1209: delete_box:",
              "1214: proto 0 0",
              "1217: bytec_2",
              "1218: box_del",
              "1219: pop",
              "1222: bytec 5",
              "1223: box_del",
              "1224: pop",
              "1227: bytec 4",
              "1228: box_del",
              "1229: pop",
              "1232: bytec_2",
              "1233: box_get",
              "1234: swap",
              "1235: btoi",
              "1236: pushint 42",
              "1237: swap",
              "1238: uncover 2",
              "1239: select",
              "1240: pushint 42",
              "1241: ==",
              "1242: assert",
              "1245: bytec 5",
              "1246: box_get",
              "1247: bytec 13",
              "1248: cover 2",
              "1249: select",
              "1250: extract 2 0",
              "1251: pushbytes 0x3432",
              "1252: ==",
              "1257: assert",
              "1260: bytec 4",
              "1261: box_get",
              "1262: bytec 13",
              "1263: cover 2",
              "1264: select",
              "1265: bytec 13",
              "1266: ==",
              "1267: assert",
              "1268: retsub"
            ],
            [
              "357: intc_0",
              "358: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 38 -> 97 -> 39",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "329: main_delete_box_map_route@22:",
              "332: txn OnCompletion",
              "333: !",
              "334: assert",
              "335: txn ApplicationID",
              "336: assert",
              "339: txna ApplicationArgs 1",
              "340: btoi",
              "343: callsub delete_box_map"
            ],
            [
              "1272: delete_box_map:",
              "1276: proto 1 0",
              "1279: frame_dig -1",
              "1280: itob",
              "1281: box_del",
              "1282: pop",
              "1283: retsub"
            ],
            [
              "344: intc_0",
              "345: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 36 -> 98 -> 37",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "317: main_delete_box_ref_route@23:",
              "320: txn OnCompletion",
              "321: !",
              "322: assert",
              "323: txn ApplicationID",
              "324: assert",
              "325: callsub delete_box_ref"
            ],
            [
              "1287: delete_box_ref:",
              "1291: proto 0 0",
              "1294: bytec 14",
              "1295: intc_2",
              "1296: box_create",
              "1297: pop",
              "1300: bytec 14",
              "1301: box_len",
              "1302: bury 1",
              "1303: assert",
              "1306: bytec 14",
              "1307: box_del",
              "1308: pop",
              "1311: bytec_0",
              "1314: box_get",
              "1317: !",
              "1318: assert",
              "1321: pushbytes 0x",
              "1322: ==",
              "1323: assert",
              "1324: retsub"
            ],
            [
              "326: intc_0",
              "327: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 34 -> 99 -> 100 -> 35",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "299: main_box_map_length_route@24:",
              "303: txn OnCompletion",
              "304: !",
              "305: assert",
              "306: txn ApplicationID",
              "307: assert",
              "308: callsub box_map_length"
            ],
            [
              "1328: box_map_length:",
              "1333: proto 0 1",
              "1336: intc_1",
              "1339: itob",
              "1340: dup",
              "1341: box_len",
              "1342: bury 1",
              "1343: bnz box_map_length_after_if_else@2"
            ],
            [
              "1346: intc_1",
              "1347: swap",
              "1348: retsub"
            ],
            [
              "309: itob",
              "310: bytec_1",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_0",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 34 -> 99 -> 101 -> 35",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "299: main_box_map_length_route@24:",
              "303: txn OnCompletion",
              "304: !",
              "305: assert",
              "306: txn ApplicationID",
              "307: assert",
              "308: callsub box_map_length"
            ],
            [
              "1328: box_map_length:",
              "1333: proto 0 1",
              "1336: intc_1",
              "1339: itob",
              "1340: dup",
              "1341: box_len",
              "1342: bury 1",
              "1343: bnz box_map_length_after_if_else@2"
            ],
            [
              "1350: box_map_length_after_if_else@2:",
              "1353: frame_dig 0",
              "1354: box_len",
              "1355: assert",
              "1356: swap",
              "1357: retsub"
            ],
            [
              "309: itob",
              "310: bytec_1",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_0",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 32 -> 102 -> 33",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "282: main_length_box_ref_route@25:",
              "285: txn OnCompletion",
              "286: !",
              "287: assert",
              "288: txn ApplicationID",
              "289: assert",
              "290: callsub length_box_ref"
            ],
            [
              "1361: length_box_ref:",
              "1365: proto 0 1",
              "1368: bytec_0",
              "1371: intc_2",
              "1372: box_create",
              "1373: assert",
              "1376: bytec_0",
              "1379: box_len",
              "1380: assert",
              "1381: retsub"
            ],
            [
              "291: itob",
              "292: bytec_1",
              "293: swap",
              "294: concat",
              "295: log",
              "296: intc_0",
              "297: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 30 -> 103 -> 31",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "262: main_box_map_struct_length_route@26:",
              "265: txn OnCompletion",
              "266: !",
              "267: assert",
              "268: txn ApplicationID",
              "269: assert",
              "270: callsub box_map_struct_length"
            ],
            [
              "1385: box_map_struct_length:",
              "1389: proto 0 1",
              "1392: bytec 7",
              "1393: box_del",
              "1394: pop",
              "1395: bytec 7",
              "1398: pushbytes 0x0012000000000000004600000000000000020008746573744e616d65",
              "1401: box_put",
              "1404: bytec 7",
              "1405: box_len",
              "1406: assert",
              "1407: pushint 28",
              "1408: ==",
              "1409: assert",
              "1412: bytec 7",
              "1413: box_len",
              "1414: assert",
              "1415: pushint 28",
              "1416: ==",
              "1417: assert",
              "1420: intc_0",
              "1421: retsub"
            ],
            [
              "271: bytec_3",
              "272: intc_1",
              "273: uncover 2",
              "274: setbit",
              "275: bytec_1",
              "276: swap",
              "277: concat",
              "278: log",
              "279: intc_0",
              "280: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 28 -> 104 -> 29",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "249: main_box_map_length_example_route@27:",
              "253: txn OnCompletion",
              "254: !",
              "255: assert",
              "256: txn ApplicationID",
              "257: assert",
              "258: callsub box_map_length_example"
            ],
            [
              "1425: box_map_length_example:",
              "1430: proto 0 0",
              "1433: intc_1",
              "1436: itob",
              "1437: dup",
              "1438: box_del",
              "1439: pop",
              "1440: dup",
              "1443: pushbytes \"Hmmmmm\"",
              "1446: box_put",
              "1449: dup",
              "1450: box_len",
              "1451: assert",
              "1452: pushint 6",
              "1453: ==",
              "1454: assert",
              "1457: box_len",
              "1458: assert",
              "1459: pushint 6",
              "1460: ==",
              "1461: assert",
              "1462: retsub"
            ],
            [
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 26 -> 105 -> 27",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "237: main_length_box_ref_example_route@28:",
              "240: txn OnCompletion",
              "241: !",
              "242: assert",
              "243: txn ApplicationID",
              "244: assert",
              "245: callsub length_box_ref_example"
            ],
            [
              "1466: length_box_ref_example:",
              "1470: proto 0 0",
              "1473: bytec_0",
              "1476: intc_2",
              "1477: box_create",
              "1478: assert",
              "1481: bytec_0",
              "1484: box_len",
              "1485: assert",
              "1486: intc_3",
              "1487: ==",
              "1488: assert",
              "1491: bytec_0",
              "1494: intc_2",
              "1495: box_create",
              "1496: assert",
              "1499: bytec_0",
              "1502: box_len",
              "1503: assert",
              "1504: intc_3",
              "1505: ==",
              "1506: assert",
              "1509: bytec_0",
              "1512: intc_2",
              "1513: box_create",
              "1514: assert",
              "1517: bytec_0",
              "1520: box_len",
              "1521: assert",
              "1522: intc_3",
              "1523: ==",
              "1524: assert",
              "1527: bytec_0",
              "1530: intc_2",
              "1531: box_create",
              "1532: assert",
              "1535: bytec_0",
              "1538: box_len",
              "1539: assert",
              "1540: intc_3",
              "1541: ==",
              "1542: assert",
              "1543: retsub"
            ],
            [
              "246: intc_0",
              "247: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 24 -> 106 -> 25",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "224: main_extract_box_ref_route@29:",
              "228: txn OnCompletion",
              "229: !",
              "230: assert",
              "231: txn ApplicationID",
              "232: assert",
              "233: callsub extract_box_ref"
            ],
            [
              "1547: extract_box_ref:",
              "1552: proto 0 0",
              "1555: bytec_0",
              "1558: intc_2",
              "1559: box_create",
              "1560: assert",
              "1563: txn Sender",
              "1566: global CurrentApplicationAddress",
              "1569: bytec_0",
              "1572: intc_1",
              "1573: dig 3",
              "1574: box_replace",
              "1577: bytec_0",
              "1580: intc_1",
              "1581: dup",
              "1582: dig 3",
              "1583: UNSUPPORTED box_splice",
              "1586: bytec_0",
              "1589: intc_3",
              "1592: bytec 8",
              "1595: box_replace",
              "1598: bytec_0",
              "1601: intc_1",
              "1602: pushint 69",
              "1603: box_extract",
              "1606: swap",
              "1607: uncover 2",
              "1608: concat",
              "1611: bytec 8",
              "1614: concat",
              "1615: ==",
              "1616: assert",
              "1617: retsub"
            ],
            [
              "234: intc_0",
              "235: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 22 -> 107 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "211: main_manipulate_box_ref_route@30:",
              "215: txn OnCompletion",
              "216: !",
              "217: assert",
              "218: txn ApplicationID",
              "219: assert",
              "220: callsub manipulate_box_ref"
            ],
            [
              "1621: manipulate_box_ref:",
              "1626: proto 0 0",
              "1629: bytec_0",
              "1632: intc_2",
              "1633: box_create",
              "1634: assert",
              "1637: bytec_0",
              "1640: box_len",
              "1641: bury 1",
              "1642: assert",
              "1646: txn Sender",
              "1649: global CurrentApplicationAddress",
              "1652: bytec_0",
              "1655: intc_1",
              "1656: dig 3",
              "1657: box_replace",
              "1660: bytec_0",
              "1663: intc_1",
              "1664: dup",
              "1665: dig 3",
              "1666: UNSUPPORTED box_splice",
              "1669: bytec_0",
              "1672: intc_3",
              "1675: bytec 8",
              "1678: box_replace",
              "1681: bytec_0",
              "1684: intc_1",
              "1685: pushint 69",
              "1686: box_extract",
              "1689: dig 1",
              "1690: dig 3",
              "1691: concat",
              "1694: bytec 8",
              "1697: concat",
              "1698: ==",
              "1699: assert",
              "1702: bytec_0",
              "1705: box_del",
              "1706: assert",
              "1709: concat",
              "1712: bytec_0",
              "1715: swap",
              "1716: box_put",
              "1719: bytec_0",
              "1722: box_len",
              "1723: bury 1",
              "1724: assert",
              "1727: bytec_0",
              "1730: box_len",
              "1731: assert",
              "1732: intc_3",
              "1733: ==",
              "1734: assert",
              "1735: retsub"
            ],
            [
              "221: intc_0",
              "222: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 20 -> 108 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "198: main_value_box_route@31:",
              "202: txn OnCompletion",
              "203: !",
              "204: assert",
              "205: txn ApplicationID",
              "206: assert",
              "207: callsub value_box"
            ],
            [
              "1739: value_box:",
              "1744: proto 0 0",
              "1747: bytec_2",
              "1748: box_get",
              "1749: swap",
              "1750: btoi",
              "1751: swap",
              "1752: assert",
              "1753: pushint 10",
              "1754: ==",
              "1755: assert",
              "1756: retsub"
            ],
            [
              "208: intc_0",
              "209: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 18 -> 109 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "178: main_exist_box_route@32:",
              "181: txn OnCompletion",
              "182: !",
              "183: assert",
              "184: txn ApplicationID",
              "185: assert",
              "186: callsub exist_box"
            ],
            [
              "1760: exist_box:",
              "1764: proto 0 1",
              "1767: bytec_2",
              "1768: box_len",
              "1769: bury 1",
              "1770: retsub"
            ],
            [
              "187: bytec_3",
              "188: intc_1",
              "189: uncover 2",
              "190: setbit",
              "191: bytec_1",
              "192: swap",
              "193: concat",
              "194: log",
              "195: intc_0",
              "196: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 16 -> 110 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "137: main_exist_box_example_route@33:",
              "140: txn OnCompletion",
              "141: !",
              "142: assert",
              "143: txn ApplicationID",
              "144: assert",
              "145: callsub exist_box_example"
            ],
            [
              "1774: exist_box_example:",
              "1778: proto 0 3",
              "1781: bytec 5",
              "1782: box_len",
              "1783: bury 1",
              "1784: bytec 4",
              "1785: box_len",
              "1786: bury 1",
              "1787: bytec 12",
              "1788: box_len",
              "1789: bury 1",
              "1790: retsub"
            ],
            [
              "146: bytec_3",
              "147: intc_1",
              "148: uncover 4",
              "149: setbit",
              "150: bytec_3",
              "151: intc_1",
              "152: uncover 4",
              "153: setbit",
              "154: bytec_3",
              "155: intc_1",
              "156: uncover 4",
              "157: setbit",
              "158: swap",
              "159: intc_1",
              "160: getbit",
              "161: uncover 2",
              "162: intc_0",
              "163: uncover 2",
              "164: setbit",
              "165: swap",
              "166: intc_1",
              "167: getbit",
              "168: pushint 2",
              "169: swap",
              "170: setbit",
              "171: bytec_1",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 111 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "125: main_slice_box_route@34:",
              "128: txn OnCompletion",
              "129: !",
              "130: assert",
              "131: txn ApplicationID",
              "132: assert",
              "133: callsub slice_box"
            ],
            [
              "1794: slice_box:",
              "1798: proto 0 0",
              "1801: bytec 9",
              "1804: box_del",
              "1805: pop",
              "1808: bytec 9",
              "1811: pushbytes 0x54657374696e672074657374696e6720313233",
              "1812: box_put",
              "1815: bytec 9",
              "1818: box_len",
              "1819: pop",
              "1820: dup",
              "1821: intc_1",
              "1822: dig 2",
              "1823: select",
              "1824: pushint 7",
              "1825: dig 2",
              "1826: <",
              "1827: uncover 2",
              "1828: pushint 7",
              "1829: uncover 2",
              "1830: select",
              "1831: dig 1",
              "1832: -",
              "1835: bytec 9",
              "1838: cover 2",
              "1839: box_extract",
              "1840: pushbytes 0x54657374696e67",
              "1841: ==",
              "1842: assert",
              "1845: bytec 4",
              "1846: box_del",
              "1847: pop",
              "1848: bytec 4",
              "1849: pushbytes 0x000548656c6c6f",
              "1850: box_put",
              "1853: bytec 4",
              "1854: box_len",
              "1855: pop",
              "1856: pushint 2",
              "1857: dig 1",
              "1858: <",
              "1859: dig 1",
              "1860: pushint 2",
              "1861: uncover 2",
              "1862: select",
              "1863: pushint 10",
              "1864: dig 2",
              "1865: <",
              "1866: uncover 2",
              "1867: pushint 10",
              "1868: uncover 2",
              "1869: select",
              "1870: dig 1",
              "1871: -",
              "1872: bytec 4",
              "1873: cover 2",
              "1874: box_extract",
              "1875: pushbytes 0x48656c6c6f",
              "1876: ==",
              "1877: assert",
              "1878: retsub"
            ],
            [
              "134: intc_0",
              "135: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 112 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "113: main_arc4_box_route@35:",
              "116: txn OnCompletion",
              "117: !",
              "118: assert",
              "119: txn ApplicationID",
              "120: assert",
              "121: callsub arc4_box"
            ],
            [
              "1882: arc4_box:",
              "1886: proto 0 0",
              "1889: bytec 6",
              "1894: pushbytes 0x00010203",
              "1895: box_put",
              "1898: bytec 6",
              "1901: box_get",
              "1902: assert",
              "1903: extract 0 1",
              "1904: bytec_3",
              "1905: b==",
              "1906: assert",
              "1909: bytec 6",
              "1912: box_get",
              "1913: assert",
              "1914: extract 1 1",
              "1915: pushbytes 0x01",
              "1916: b==",
              "1917: assert",
              "1920: bytec 6",
              "1923: box_get",
              "1924: assert",
              "1925: extract 2 1",
              "1926: pushbytes 0x02",
              "1927: b==",
              "1928: assert",
              "1931: bytec 6",
              "1934: box_get",
              "1935: assert",
              "1936: extract 3 1",
              "1937: pushbytes 0x03",
              "1938: b==",
              "1939: assert",
              "1940: retsub"
            ],
            [
              "122: intc_0",
              "123: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "100: main_key_box_route@36:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: pushbytes 0x151f7c750007626f785f696e74",
              "109: log",
              "110: intc_0",
              "111: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 9 -> 113 -> 10",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "88: main_key_box_example_route@37:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: callsub key_box_example"
            ],
            [
              "1944: key_box_example:",
              "1948: proto 0 0",
              "1951: intc_1",
              "1952: assert",
              "1953: retsub"
            ],
            [
              "97: intc_0",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 7 -> 114 -> 8",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "60: main_box_map_exists_route@38:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "76: callsub box_map_exists"
            ],
            [
              "1957: box_map_exists:",
              "1962: proto 1 1",
              "1965: frame_dig -1",
              "1966: itob",
              "1967: box_len",
              "1968: bury 1",
              "1969: retsub"
            ],
            [
              "77: bytec_3",
              "78: intc_1",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_1",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_0",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 5 -> 115 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "35: main_box_map_struct_exists_route@39:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: assert",
              "45: txna ApplicationArgs 1",
              "48: callsub box_map_struct_exists"
            ],
            [
              "1973: box_map_struct_exists:",
              "1977: proto 1 1",
              "1980: bytec 11",
              "1981: frame_dig -1",
              "1982: concat",
              "1983: box_len",
              "1984: bury 1",
              "1985: retsub"
            ],
            [
              "49: bytec_3",
              "50: intc_1",
              "51: uncover 2",
              "52: setbit",
              "53: bytec_1",
              "54: swap",
              "55: concat",
              "56: log",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "22: main_key_prefix_box_map_route@40:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: pushbytes 0x151f7c750000",
              "31: log",
              "32: intc_0",
              "33: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 74 -> 75",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "717: main_bare_routing@41:",
              "720: txn OnCompletion",
              "721: bnz main_after_if_else@43"
            ],
            [
              "722: txn ApplicationID",
              "723: !",
              "724: assert",
              "725: intc_0",
              "726: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 74 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "717: main_bare_routing@41:",
              "720: txn OnCompletion",
              "721: bnz main_after_if_else@43"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 42,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 72 -> 76 -> 73",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "699: main_get_box_route@5:",
              "703: txn OnCompletion",
              "704: !",
              "705: assert",
              "706: txn ApplicationID",
              "707: assert",
              "708: callsub get_box"
            ],
            [
              "730: get_box:",
              "735: proto 0 1",
              "738: bytec_2",
              "739: box_get",
              "740: swap",
              "741: btoi",
              "742: swap",
              "743: assert",
              "744: retsub"
            ],
            [
              "709: itob",
              "710: bytec_1",
              "711: swap",
              "712: concat",
              "713: log",
              "714: intc_0",
              "715: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 70 -> 77 -> 71",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "671: main_get_item_box_map_route@6:",
              "674: txn OnCompletion",
              "675: !",
              "676: assert",
              "677: txn ApplicationID",
              "678: assert",
              "681: txna ApplicationArgs 1",
              "682: btoi",
              "685: callsub get_item_box_map"
            ],
            [
              "748: get_item_box_map:",
              "752: proto 1 1",
              "755: frame_dig -1",
              "756: itob",
              "757: box_get",
              "758: assert",
              "759: retsub"
            ],
            [
              "686: dup",
              "687: len",
              "688: itob",
              "689: extract 6 2",
              "690: swap",
              "691: concat",
              "692: bytec_1",
              "693: swap",
              "694: concat",
              "695: log",
              "696: intc_0",
              "697: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 68 -> 78 -> 69",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "649: main_get_box_map_route@7:",
              "652: txn OnCompletion",
              "653: !",
              "654: assert",
              "655: txn ApplicationID",
              "656: assert",
              "657: callsub get_box_map"
            ],
            [
              "763: get_box_map:",
              "767: proto 0 1",
              "770: intc_0",
              "773: itob",
              "774: box_get",
              "775: bytec 10",
              "776: cover 2",
              "777: select",
              "778: retsub"
            ],
            [
              "658: dup",
              "659: len",
              "660: itob",
              "661: extract 6 2",
              "662: swap",
              "663: concat",
              "664: bytec_1",
              "665: swap",
              "666: concat",
              "667: log",
              "668: intc_0",
              "669: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 66 -> 79 -> 67",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "637: main_get_box_ref_route@8:",
              "640: txn OnCompletion",
              "641: !",
              "642: assert",
              "643: txn ApplicationID",
              "644: assert",
              "645: callsub get_box_ref"
            ],
            [
              "782: get_box_ref:",
              "786: proto 0 0",
              "789: bytec_0",
              "792: intc_2",
              "793: box_create",
              "794: assert",
              "797: txn Sender",
              "800: bytec_0",
              "803: box_del",
              "804: assert",
              "807: bytec_0",
              "810: box_get",
              "811: dig 2",
              "812: cover 2",
              "813: select",
              "814: ==",
              "815: assert",
              "816: retsub"
            ],
            [
              "646: intc_0",
              "647: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 64 -> 80 -> 65",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "614: main_maybe_box_route@9:",
              "617: txn OnCompletion",
              "618: !",
              "619: assert",
              "620: txn ApplicationID",
              "621: assert",
              "622: callsub maybe_box"
            ],
            [
              "820: maybe_box:",
              "824: proto 0 2",
              "827: bytec_2",
              "828: box_get",
              "829: swap",
              "830: btoi",
              "833: swap",
              "834: retsub"
            ],
            [
              "623: swap",
              "624: itob",
              "625: bytec_3",
              "626: intc_1",
              "627: uncover 3",
              "628: setbit",
              "629: concat",
              "630: bytec_1",
              "631: swap",
              "632: concat",
              "633: log",
              "634: intc_0",
              "635: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 62 -> 81 -> 82 -> 83 -> 63",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "583: main_maybe_box_map_route@10:",
              "586: txn OnCompletion",
              "587: !",
              "588: assert",
              "589: txn ApplicationID",
              "590: assert",
              "591: callsub maybe_box_map"
            ],
            [
              "838: maybe_box_map:",
              "842: proto 0 2",
              "845: intc_0",
              "848: itob",
              "849: box_get",
              "850: dup",
              "851: uncover 2",
              "852: swap",
              "855: bnz maybe_box_map_after_if_else@2"
            ],
            [
              "858: pushbytes \"\"",
              "859: frame_bury 1"
            ],
            [
              "861: maybe_box_map_after_if_else@2:",
              "864: frame_dig 1",
              "865: frame_dig 0",
              "866: uncover 3",
              "867: uncover 3",
              "868: retsub"
            ],
            [
              "592: dig 1",
              "593: len",
              "594: itob",
              "595: extract 6 2",
              "596: uncover 2",
              "597: concat",
              "598: bytec_3",
              "599: intc_1",
              "600: uncover 3",
              "601: setbit",
              "602: bytec 15",
              "603: swap",
              "604: concat",
              "605: swap",
              "606: concat",
              "607: bytec_1",
              "608: swap",
              "609: concat",
              "610: log",
              "611: intc_0",
              "612: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 62 -> 81 -> 83 -> 63",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "583: main_maybe_box_map_route@10:",
              "586: txn OnCompletion",
              "587: !",
              "588: assert",
              "589: txn ApplicationID",
              "590: assert",
              "591: callsub maybe_box_map"
            ],
            [
              "838: maybe_box_map:",
              "842: proto 0 2",
              "845: intc_0",
              "848: itob",
              "849: box_get",
              "850: dup",
              "851: uncover 2",
              "852: swap",
              "855: bnz maybe_box_map_after_if_else@2"
            ],
            [
              "861: maybe_box_map_after_if_else@2:",
              "864: frame_dig 1",
              "865: frame_dig 0",
              "866: uncover 3",
              "867: uncover 3",
              "868: retsub"
            ],
            [
              "592: dig 1",
              "593: len",
              "594: itob",
              "595: extract 6 2",
              "596: uncover 2",
              "597: concat",
              "598: bytec_3",
              "599: intc_1",
              "600: uncover 3",
              "601: setbit",
              "602: bytec 15",
              "603: swap",
              "604: concat",
              "605: swap",
              "606: concat",
              "607: bytec_1",
              "608: swap",
              "609: concat",
              "610: log",
              "611: intc_0",
              "612: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 84 -> 85 -> 86 -> 61",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "552: main_maybe_box_ref_route@11:",
              "555: txn OnCompletion",
              "556: !",
              "557: assert",
              "558: txn ApplicationID",
              "559: assert",
              "560: callsub maybe_box_ref"
            ],
            [
              "872: maybe_box_ref:",
              "876: proto 0 2",
              "879: bytec_0",
              "882: intc_2",
              "883: box_create",
              "884: assert",
              "887: bytec_0",
              "890: box_get",
              "891: dup",
              "892: uncover 2",
              "893: swap",
              "896: bnz maybe_box_ref_after_if_else@2"
            ],
            [
              "899: pushbytes 0x",
              "900: frame_bury 1"
            ],
            [
              "902: maybe_box_ref_after_if_else@2:",
              "905: frame_dig 1",
              "906: frame_dig 0",
              "907: uncover 3",
              "908: uncover 3",
              "909: retsub"
            ],
            [
              "561: dig 1",
              "562: len",
              "563: itob",
              "564: extract 6 2",
              "565: uncover 2",
              "566: concat",
              "567: bytec_3",
              "568: intc_1",
              "569: uncover 3",
              "570: setbit",
              "571: bytec 15",
              "572: swap",
              "573: concat",
              "574: swap",
              "575: concat",
              "576: bytec_1",
              "577: swap",
              "578: concat",
              "579: log",
              "580: intc_0",
              "581: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 60 -> 84 -> 86 -> 61",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "552: main_maybe_box_ref_route@11:",
              "555: txn OnCompletion",
              "556: !",
              "557: assert",
              "558: txn ApplicationID",
              "559: assert",
              "560: callsub maybe_box_ref"
            ],
            [
              "872: maybe_box_ref:",
              "876: proto 0 2",
              "879: bytec_0",
              "882: intc_2",
              "883: box_create",
              "884: assert",
              "887: bytec_0",
              "890: box_get",
              "891: dup",
              "892: uncover 2",
              "893: swap",
              "896: bnz maybe_box_ref_after_if_else@2"
            ],
            [
              "902: maybe_box_ref_after_if_else@2:",
              "905: frame_dig 1",
              "906: frame_dig 0",
              "907: uncover 3",
              "908: uncover 3",
              "909: retsub"
            ],
            [
              "561: dig 1",
              "562: len",
              "563: itob",
              "564: extract 6 2",
              "565: uncover 2",
              "566: concat",
              "567: bytec_3",
              "568: intc_1",
              "569: uncover 3",
              "570: setbit",
              "571: bytec 15",
              "572: swap",
              "573: concat",
              "574: swap",
              "575: concat",
              "576: bytec_1",
              "577: swap",
              "578: concat",
              "579: log",
              "580: intc_0",
              "581: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 58 -> 87 -> 59",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "513: main_get_box_example_route@12:",
              "517: txn OnCompletion",
              "518: !",
              "519: assert",
              "520: txn ApplicationID",
              "521: assert",
              "522: callsub get_box_example"
            ],
            [
              "913: get_box_example:",
              "918: proto 0 3",
              "921: bytec_2",
              "922: box_get",
              "923: swap",
              "924: btoi",
              "925: swap",
              "926: assert",
              "929: bytec 5",
              "930: box_get",
              "931: assert",
              "932: extract 2 0",
              "935: bytec 4",
              "936: box_get",
              "937: assert",
              "944: retsub"
            ],
            [
              "523: uncover 2",
              "524: itob",
              "525: dig 2",
              "526: len",
              "527: itob",
              "528: extract 6 2",
              "529: uncover 3",
              "530: concat",
              "531: swap",
              "532: pushbytes 0x000c",
              "533: concat",
              "534: dig 1",
              "535: len",
              "536: pushint 12",
              "537: +",
              "538: itob",
              "539: extract 6 2",
              "540: concat",
              "541: swap",
              "542: concat",
              "543: swap",
              "544: concat",
              "545: bytec_1",
              "546: swap",
              "547: concat",
              "548: log",
              "549: intc_0",
              "550: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 56 -> 88 -> 57",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "493: main_get_box_map_example_route@13:",
              "496: txn OnCompletion",
              "497: !",
              "498: assert",
              "499: txn ApplicationID",
              "500: assert",
              "501: callsub get_box_map_example"
            ],
            [
              "948: get_box_map_example:",
              "952: proto 0 1",
              "955: intc_0",
              "958: itob",
              "959: box_get",
              "960: bytec 10",
              "961: cover 2",
              "962: select",
              "963: bytec 10",
              "964: ==",
              "965: assert",
              "968: intc_0",
              "969: retsub"
            ],
            [
              "502: bytec_3",
              "503: intc_1",
              "504: uncover 2",
              "505: setbit",
              "506: bytec_1",
              "507: swap",
              "508: concat",
              "509: log",
              "510: intc_0",
              "511: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 54 -> 89 -> 55",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "481: main_maybe_box_example_route@14:",
              "484: txn OnCompletion",
              "485: !",
              "486: assert",
              "487: txn ApplicationID",
              "488: assert",
              "489: callsub maybe_box_example"
            ],
            [
              "973: maybe_box_example:",
              "977: proto 0 0",
              "980: bytec_2",
              "981: box_del",
              "982: pop",
              "985: bytec_2",
              "986: box_get",
              "987: swap",
              "988: btoi",
              "989: pushint 42",
              "990: swap",
              "991: uncover 2",
              "992: select",
              "993: pushint 42",
              "994: ==",
              "995: assert",
              "998: bytec_2",
              "999: box_get",
              "1000: swap",
              "1001: btoi",
              "1004: swap",
              "1005: !",
              "1006: assert",
              "1009: !",
              "1010: assert",
              "1011: retsub"
            ],
            [
              "490: intc_0",
              "491: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 52 -> 90 -> 53",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "469: main_maybe_box_map_example_route@15:",
              "472: txn OnCompletion",
              "473: !",
              "474: assert",
              "475: txn ApplicationID",
              "476: assert",
              "477: callsub maybe_box_map_example"
            ],
            [
              "1015: maybe_box_map_example:",
              "1019: proto 0 0",
              "1022: intc_0",
              "1025: itob",
              "1026: box_get",
              "1027: bury 1",
              "1030: !",
              "1031: assert",
              "1034: intc_1",
              "1037: itob",
              "1038: box_len",
              "1039: bury 1",
              "1040: assert",
              "1041: retsub"
            ],
            [
              "478: intc_0",
              "479: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 50 -> 91 -> 51",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "448: main_get_box_map_struct_route@16:",
              "451: txn OnCompletion",
              "452: !",
              "453: assert",
              "454: txn ApplicationID",
              "455: assert",
              "458: txna ApplicationArgs 1",
              "461: callsub get_box_map_struct"
            ],
            [
              "1045: get_box_map_struct:",
              "1049: proto 1 1",
              "1052: bytec 11",
              "1053: frame_dig -1",
              "1054: concat",
              "1055: box_get",
              "1056: assert",
              "1057: retsub"
            ],
            [
              "462: bytec_1",
              "463: swap",
              "464: concat",
              "465: log",
              "466: intc_0",
              "467: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 48 -> 92 -> 49",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "428: main_set_box_route@17:",
              "432: txn OnCompletion",
              "433: !",
              "434: assert",
              "435: txn ApplicationID",
              "436: assert",
              "439: txna ApplicationArgs 1",
              "440: btoi",
              "444: callsub set_box"
            ],
            [
              "1061: set_box:",
              "1066: proto 1 0",
              "1069: frame_dig -1",
              "1070: itob",
              "1071: bytec_2",
              "1072: swap",
              "1073: box_put",
              "1074: retsub"
            ],
            [
              "445: intc_0",
              "446: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 46 -> 93 -> 47",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "408: main_set_box_map_route@18:",
              "411: txn OnCompletion",
              "412: !",
              "413: assert",
              "414: txn ApplicationID",
              "415: assert",
              "418: txna ApplicationArgs 1",
              "419: btoi",
              "420: txna ApplicationArgs 2",
              "421: extract 2 0",
              "424: callsub set_box_map"
            ],
            [
              "1078: set_box_map:",
              "1082: proto 2 0",
              "1085: frame_dig -2",
              "1086: itob",
              "1087: dup",
              "1088: box_del",
              "1089: pop",
              "1090: frame_dig -1",
              "1091: box_put",
              "1092: retsub"
            ],
            [
              "425: intc_0",
              "426: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 44 -> 94 -> 45",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "382: main_set_box_map_struct_route@19:",
              "385: txn OnCompletion",
              "386: !",
              "387: assert",
              "388: txn ApplicationID",
              "389: assert",
              "392: txna ApplicationArgs 1",
              "393: txna ApplicationArgs 2",
              "396: callsub set_box_map_struct"
            ],
            [
              "1096: set_box_map_struct:",
              "1100: proto 2 1",
              "1103: bytec 11",
              "1104: frame_dig -2",
              "1105: concat",
              "1106: dup",
              "1107: box_del",
              "1108: pop",
              "1109: dup",
              "1110: frame_dig -1",
              "1111: box_put",
              "1114: box_get",
              "1115: assert",
              "1116: frame_dig -1",
              "1117: ==",
              "1118: assert",
              "1121: intc_0",
              "1122: retsub"
            ],
            [
              "397: bytec_3",
              "398: intc_1",
              "399: uncover 2",
              "400: setbit",
              "401: bytec_1",
              "402: swap",
              "403: concat",
              "404: log",
              "405: intc_0",
              "406: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 42 -> 95 -> 43",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "360: main_set_box_example_route@20:",
              "364: txn OnCompletion",
              "365: !",
              "366: assert",
              "367: txn ApplicationID",
              "368: assert",
              "371: txna ApplicationArgs 1",
              "372: btoi",
              "373: txna ApplicationArgs 2",
              "374: txna ApplicationArgs 3",
              "378: callsub set_box_example"
            ],
            [
              "1126: set_box_example:",
              "1136: proto 3 0",
              "1139: frame_dig -3",
              "1140: itob",
              "1141: bytec_2",
              "1142: swap",
              "1143: box_put",
              "1146: bytec 5",
              "1147: box_del",
              "1148: pop",
              "1149: bytec 5",
              "1150: frame_dig -2",
              "1151: box_put",
              "1154: bytec 4",
              "1155: box_del",
              "1156: pop",
              "1157: bytec 4",
              "1158: frame_dig -1",
              "1159: box_put",
              "1162: frame_dig -2",
              "1163: extract 2 0",
              "1164: bytec 12",
              "1165: box_del",
              "1166: pop",
              "1167: bytec 12",
              "1168: swap",
              "1169: box_put",
              "1172: bytec 5",
              "1173: box_get",
              "1174: assert",
              "1177: bytec 5",
              "1178: box_get",
              "1179: assert",
              "1180: intc_1",
              "1181: extract_uint16",
              "1182: swap",
              "1183: intc_1",
              "1184: extract_uint16",
              "1185: ==",
              "1190: assert",
              "1193: bytec_2",
              "1194: box_get",
              "1195: swap",
              "1196: btoi",
              "1197: swap",
              "1198: assert",
              "1199: pushint 3",
              "1200: +",
              "1201: itob",
              "1202: bytec_2",
              "1203: swap",
              "1204: box_put",
              "1205: retsub"
            ],
            [
              "379: intc_0",
              "380: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 40 -> 96 -> 41",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "347: main_delete_box_route@21:",
              "351: txn OnCompletion",
              "352: !",
              "353: assert",
              "354: txn ApplicationID",
              "355: assert",
              "356: callsub delete_box"
            ],
            [
              "1209: delete_box:",
              "1214: proto 0 0",
              "1217: bytec_2",
              "1218: box_del",
              "1219: pop",
              "1222: bytec 5",
              "1223: box_del",
              "1224: pop",
              "1227: bytec 4",
              "1228: box_del",
              "1229: pop",
              "1232: bytec_2",
              "1233: box_get",
              "1234: swap",
              "1235: btoi",
              "1236: pushint 42",
              "1237: swap",
              "1238: uncover 2",
              "1239: select",
              "1240: pushint 42",
              "1241: ==",
              "1242: assert",
              "1245: bytec 5",
              "1246: box_get",
              "1247: bytec 13",
              "1248: cover 2",
              "1249: select",
              "1250: extract 2 0",
              "1251: pushbytes 0x3432",
              "1252: ==",
              "1257: assert",
              "1260: bytec 4",
              "1261: box_get",
              "1262: bytec 13",
              "1263: cover 2",
              "1264: select",
              "1265: bytec 13",
              "1266: ==",
              "1267: assert",
              "1268: retsub"
            ],
            [
              "357: intc_0",
              "358: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 38 -> 97 -> 39",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "329: main_delete_box_map_route@22:",
              "332: txn OnCompletion",
              "333: !",
              "334: assert",
              "335: txn ApplicationID",
              "336: assert",
              "339: txna ApplicationArgs 1",
              "340: btoi",
              "343: callsub delete_box_map"
            ],
            [
              "1272: delete_box_map:",
              "1276: proto 1 0",
              "1279: frame_dig -1",
              "1280: itob",
              "1281: box_del",
              "1282: pop",
              "1283: retsub"
            ],
            [
              "344: intc_0",
              "345: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 36 -> 98 -> 37",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "317: main_delete_box_ref_route@23:",
              "320: txn OnCompletion",
              "321: !",
              "322: assert",
              "323: txn ApplicationID",
              "324: assert",
              "325: callsub delete_box_ref"
            ],
            [
              "1287: delete_box_ref:",
              "1291: proto 0 0",
              "1294: bytec 14",
              "1295: intc_2",
              "1296: box_create",
              "1297: pop",
              "1300: bytec 14",
              "1301: box_len",
              "1302: bury 1",
              "1303: assert",
              "1306: bytec 14",
              "1307: box_del",
              "1308: pop",
              "1311: bytec_0",
              "1314: box_get",
              "1317: !",
              "1318: assert",
              "1321: pushbytes 0x",
              "1322: ==",
              "1323: assert",
              "1324: retsub"
            ],
            [
              "326: intc_0",
              "327: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 34 -> 99 -> 100 -> 35",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "299: main_box_map_length_route@24:",
              "303: txn OnCompletion",
              "304: !",
              "305: assert",
              "306: txn ApplicationID",
              "307: assert",
              "308: callsub box_map_length"
            ],
            [
              "1328: box_map_length:",
              "1333: proto 0 1",
              "1336: intc_1",
              "1339: itob",
              "1340: dup",
              "1341: box_len",
              "1342: bury 1",
              "1343: bnz box_map_length_after_if_else@2"
            ],
            [
              "1346: intc_1",
              "1347: swap",
              "1348: retsub"
            ],
            [
              "309: itob",
              "310: bytec_1",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_0",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 34 -> 99 -> 101 -> 35",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "299: main_box_map_length_route@24:",
              "303: txn OnCompletion",
              "304: !",
              "305: assert",
              "306: txn ApplicationID",
              "307: assert",
              "308: callsub box_map_length"
            ],
            [
              "1328: box_map_length:",
              "1333: proto 0 1",
              "1336: intc_1",
              "1339: itob",
              "1340: dup",
              "1341: box_len",
              "1342: bury 1",
              "1343: bnz box_map_length_after_if_else@2"
            ],
            [
              "1350: box_map_length_after_if_else@2:",
              "1353: frame_dig 0",
              "1354: box_len",
              "1355: assert",
              "1356: swap",
              "1357: retsub"
            ],
            [
              "309: itob",
              "310: bytec_1",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_0",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 32 -> 102 -> 33",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "282: main_length_box_ref_route@25:",
              "285: txn OnCompletion",
              "286: !",
              "287: assert",
              "288: txn ApplicationID",
              "289: assert",
              "290: callsub length_box_ref"
            ],
            [
              "1361: length_box_ref:",
              "1365: proto 0 1",
              "1368: bytec_0",
              "1371: intc_2",
              "1372: box_create",
              "1373: assert",
              "1376: bytec_0",
              "1379: box_len",
              "1380: assert",
              "1381: retsub"
            ],
            [
              "291: itob",
              "292: bytec_1",
              "293: swap",
              "294: concat",
              "295: log",
              "296: intc_0",
              "297: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 30 -> 103 -> 31",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "262: main_box_map_struct_length_route@26:",
              "265: txn OnCompletion",
              "266: !",
              "267: assert",
              "268: txn ApplicationID",
              "269: assert",
              "270: callsub box_map_struct_length"
            ],
            [
              "1385: box_map_struct_length:",
              "1389: proto 0 1",
              "1392: bytec 7",
              "1393: box_del",
              "1394: pop",
              "1395: bytec 7",
              "1398: pushbytes 0x0012000000000000004600000000000000020008746573744e616d65",
              "1401: box_put",
              "1404: bytec 7",
              "1405: box_len",
              "1406: assert",
              "1407: pushint 28",
              "1408: ==",
              "1409: assert",
              "1412: bytec 7",
              "1413: box_len",
              "1414: assert",
              "1415: pushint 28",
              "1416: ==",
              "1417: assert",
              "1420: intc_0",
              "1421: retsub"
            ],
            [
              "271: bytec_3",
              "272: intc_1",
              "273: uncover 2",
              "274: setbit",
              "275: bytec_1",
              "276: swap",
              "277: concat",
              "278: log",
              "279: intc_0",
              "280: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 28 -> 104 -> 29",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "249: main_box_map_length_example_route@27:",
              "253: txn OnCompletion",
              "254: !",
              "255: assert",
              "256: txn ApplicationID",
              "257: assert",
              "258: callsub box_map_length_example"
            ],
            [
              "1425: box_map_length_example:",
              "1430: proto 0 0",
              "1433: intc_1",
              "1436: itob",
              "1437: dup",
              "1438: box_del",
              "1439: pop",
              "1440: dup",
              "1443: pushbytes \"Hmmmmm\"",
              "1446: box_put",
              "1449: dup",
              "1450: box_len",
              "1451: assert",
              "1452: pushint 6",
              "1453: ==",
              "1454: assert",
              "1457: box_len",
              "1458: assert",
              "1459: pushint 6",
              "1460: ==",
              "1461: assert",
              "1462: retsub"
            ],
            [
              "259: intc_0",
              "260: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 26 -> 105 -> 27",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "237: main_length_box_ref_example_route@28:",
              "240: txn OnCompletion",
              "241: !",
              "242: assert",
              "243: txn ApplicationID",
              "244: assert",
              "245: callsub length_box_ref_example"
            ],
            [
              "1466: length_box_ref_example:",
              "1470: proto 0 0",
              "1473: bytec_0",
              "1476: intc_2",
              "1477: box_create",
              "1478: assert",
              "1481: bytec_0",
              "1484: box_len",
              "1485: assert",
              "1486: intc_3",
              "1487: ==",
              "1488: assert",
              "1491: bytec_0",
              "1494: intc_2",
              "1495: box_create",
              "1496: assert",
              "1499: bytec_0",
              "1502: box_len",
              "1503: assert",
              "1504: intc_3",
              "1505: ==",
              "1506: assert",
              "1509: bytec_0",
              "1512: intc_2",
              "1513: box_create",
              "1514: assert",
              "1517: bytec_0",
              "1520: box_len",
              "1521: assert",
              "1522: intc_3",
              "1523: ==",
              "1524: assert",
              "1527: bytec_0",
              "1530: intc_2",
              "1531: box_create",
              "1532: assert",
              "1535: bytec_0",
              "1538: box_len",
              "1539: assert",
              "1540: intc_3",
              "1541: ==",
              "1542: assert",
              "1543: retsub"
            ],
            [
              "246: intc_0",
              "247: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 24 -> 106 -> 25",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "224: main_extract_box_ref_route@29:",
              "228: txn OnCompletion",
              "229: !",
              "230: assert",
              "231: txn ApplicationID",
              "232: assert",
              "233: callsub extract_box_ref"
            ],
            [
              "1547: extract_box_ref:",
              "1552: proto 0 0",
              "1555: bytec_0",
              "1558: intc_2",
              "1559: box_create",
              "1560: assert",
              "1563: txn Sender",
              "1566: global CurrentApplicationAddress",
              "1569: bytec_0",
              "1572: intc_1",
              "1573: dig 3",
              "1574: box_replace",
              "1577: bytec_0",
              "1580: intc_1",
              "1581: dup",
              "1582: dig 3",
              "1583: UNSUPPORTED box_splice",
              "1586: bytec_0",
              "1589: intc_3",
              "1592: bytec 8",
              "1595: box_replace",
              "1598: bytec_0",
              "1601: intc_1",
              "1602: pushint 69",
              "1603: box_extract",
              "1606: swap",
              "1607: uncover 2",
              "1608: concat",
              "1611: bytec 8",
              "1614: concat",
              "1615: ==",
              "1616: assert",
              "1617: retsub"
            ],
            [
              "234: intc_0",
              "235: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 22 -> 107 -> 23",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "211: main_manipulate_box_ref_route@30:",
              "215: txn OnCompletion",
              "216: !",
              "217: assert",
              "218: txn ApplicationID",
              "219: assert",
              "220: callsub manipulate_box_ref"
            ],
            [
              "1621: manipulate_box_ref:",
              "1626: proto 0 0",
              "1629: bytec_0",
              "1632: intc_2",
              "1633: box_create",
              "1634: assert",
              "1637: bytec_0",
              "1640: box_len",
              "1641: bury 1",
              "1642: assert",
              "1646: txn Sender",
              "1649: global CurrentApplicationAddress",
              "1652: bytec_0",
              "1655: intc_1",
              "1656: dig 3",
              "1657: box_replace",
              "1660: bytec_0",
              "1663: intc_1",
              "1664: dup",
              "1665: dig 3",
              "1666: UNSUPPORTED box_splice",
              "1669: bytec_0",
              "1672: intc_3",
              "1675: bytec 8",
              "1678: box_replace",
              "1681: bytec_0",
              "1684: intc_1",
              "1685: pushint 69",
              "1686: box_extract",
              "1689: dig 1",
              "1690: dig 3",
              "1691: concat",
              "1694: bytec 8",
              "1697: concat",
              "1698: ==",
              "1699: assert",
              "1702: bytec_0",
              "1705: box_del",
              "1706: assert",
              "1709: concat",
              "1712: bytec_0",
              "1715: swap",
              "1716: box_put",
              "1719: bytec_0",
              "1722: box_len",
              "1723: bury 1",
              "1724: assert",
              "1727: bytec_0",
              "1730: box_len",
              "1731: assert",
              "1732: intc_3",
              "1733: ==",
              "1734: assert",
              "1735: retsub"
            ],
            [
              "221: intc_0",
              "222: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 20 -> 108 -> 21",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "198: main_value_box_route@31:",
              "202: txn OnCompletion",
              "203: !",
              "204: assert",
              "205: txn ApplicationID",
              "206: assert",
              "207: callsub value_box"
            ],
            [
              "1739: value_box:",
              "1744: proto 0 0",
              "1747: bytec_2",
              "1748: box_get",
              "1749: swap",
              "1750: btoi",
              "1751: swap",
              "1752: assert",
              "1753: pushint 10",
              "1754: ==",
              "1755: assert",
              "1756: retsub"
            ],
            [
              "208: intc_0",
              "209: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 18 -> 109 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "178: main_exist_box_route@32:",
              "181: txn OnCompletion",
              "182: !",
              "183: assert",
              "184: txn ApplicationID",
              "185: assert",
              "186: callsub exist_box"
            ],
            [
              "1760: exist_box:",
              "1764: proto 0 1",
              "1767: bytec_2",
              "1768: box_len",
              "1769: bury 1",
              "1770: retsub"
            ],
            [
              "187: bytec_3",
              "188: intc_1",
              "189: uncover 2",
              "190: setbit",
              "191: bytec_1",
              "192: swap",
              "193: concat",
              "194: log",
              "195: intc_0",
              "196: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 16 -> 110 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "137: main_exist_box_example_route@33:",
              "140: txn OnCompletion",
              "141: !",
              "142: assert",
              "143: txn ApplicationID",
              "144: assert",
              "145: callsub exist_box_example"
            ],
            [
              "1774: exist_box_example:",
              "1778: proto 0 3",
              "1781: bytec 5",
              "1782: box_len",
              "1783: bury 1",
              "1784: bytec 4",
              "1785: box_len",
              "1786: bury 1",
              "1787: bytec 12",
              "1788: box_len",
              "1789: bury 1",
              "1790: retsub"
            ],
            [
              "146: bytec_3",
              "147: intc_1",
              "148: uncover 4",
              "149: setbit",
              "150: bytec_3",
              "151: intc_1",
              "152: uncover 4",
              "153: setbit",
              "154: bytec_3",
              "155: intc_1",
              "156: uncover 4",
              "157: setbit",
              "158: swap",
              "159: intc_1",
              "160: getbit",
              "161: uncover 2",
              "162: intc_0",
              "163: uncover 2",
              "164: setbit",
              "165: swap",
              "166: intc_1",
              "167: getbit",
              "168: pushint 2",
              "169: swap",
              "170: setbit",
              "171: bytec_1",
              "172: swap",
              "173: concat",
              "174: log",
              "175: intc_0",
              "176: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 111 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "125: main_slice_box_route@34:",
              "128: txn OnCompletion",
              "129: !",
              "130: assert",
              "131: txn ApplicationID",
              "132: assert",
              "133: callsub slice_box"
            ],
            [
              "1794: slice_box:",
              "1798: proto 0 0",
              "1801: bytec 9",
              "1804: box_del",
              "1805: pop",
              "1808: bytec 9",
              "1811: pushbytes 0x54657374696e672074657374696e6720313233",
              "1812: box_put",
              "1815: bytec 9",
              "1818: box_len",
              "1819: pop",
              "1820: dup",
              "1821: intc_1",
              "1822: dig 2",
              "1823: select",
              "1824: pushint 7",
              "1825: dig 2",
              "1826: <",
              "1827: uncover 2",
              "1828: pushint 7",
              "1829: uncover 2",
              "1830: select",
              "1831: dig 1",
              "1832: -",
              "1835: bytec 9",
              "1838: cover 2",
              "1839: box_extract",
              "1840: pushbytes 0x54657374696e67",
              "1841: ==",
              "1842: assert",
              "1845: bytec 4",
              "1846: box_del",
              "1847: pop",
              "1848: bytec 4",
              "1849: pushbytes 0x000548656c6c6f",
              "1850: box_put",
              "1853: bytec 4",
              "1854: box_len",
              "1855: pop",
              "1856: pushint 2",
              "1857: dig 1",
              "1858: <",
              "1859: dig 1",
              "1860: pushint 2",
              "1861: uncover 2",
              "1862: select",
              "1863: pushint 10",
              "1864: dig 2",
              "1865: <",
              "1866: uncover 2",
              "1867: pushint 10",
              "1868: uncover 2",
              "1869: select",
              "1870: dig 1",
              "1871: -",
              "1872: bytec 4",
              "1873: cover 2",
              "1874: box_extract",
              "1875: pushbytes 0x48656c6c6f",
              "1876: ==",
              "1877: assert",
              "1878: retsub"
            ],
            [
              "134: intc_0",
              "135: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 112 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "113: main_arc4_box_route@35:",
              "116: txn OnCompletion",
              "117: !",
              "118: assert",
              "119: txn ApplicationID",
              "120: assert",
              "121: callsub arc4_box"
            ],
            [
              "1882: arc4_box:",
              "1886: proto 0 0",
              "1889: bytec 6",
              "1894: pushbytes 0x00010203",
              "1895: box_put",
              "1898: bytec 6",
              "1901: box_get",
              "1902: assert",
              "1903: extract 0 1",
              "1904: bytec_3",
              "1905: b==",
              "1906: assert",
              "1909: bytec 6",
              "1912: box_get",
              "1913: assert",
              "1914: extract 1 1",
              "1915: pushbytes 0x01",
              "1916: b==",
              "1917: assert",
              "1920: bytec 6",
              "1923: box_get",
              "1924: assert",
              "1925: extract 2 1",
              "1926: pushbytes 0x02",
              "1927: b==",
              "1928: assert",
              "1931: bytec 6",
              "1934: box_get",
              "1935: assert",
              "1936: extract 3 1",
              "1937: pushbytes 0x03",
              "1938: b==",
              "1939: assert",
              "1940: retsub"
            ],
            [
              "122: intc_0",
              "123: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "100: main_key_box_route@36:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: pushbytes 0x151f7c750007626f785f696e74",
              "109: log",
              "110: intc_0",
              "111: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 9 -> 113 -> 10",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "88: main_key_box_example_route@37:",
              "91: txn OnCompletion",
              "92: !",
              "93: assert",
              "94: txn ApplicationID",
              "95: assert",
              "96: callsub key_box_example"
            ],
            [
              "1944: key_box_example:",
              "1948: proto 0 0",
              "1951: intc_1",
              "1952: assert",
              "1953: retsub"
            ],
            [
              "97: intc_0",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 7 -> 114 -> 8",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "60: main_box_map_exists_route@38:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "76: callsub box_map_exists"
            ],
            [
              "1957: box_map_exists:",
              "1962: proto 1 1",
              "1965: frame_dig -1",
              "1966: itob",
              "1967: box_len",
              "1968: bury 1",
              "1969: retsub"
            ],
            [
              "77: bytec_3",
              "78: intc_1",
              "79: uncover 2",
              "80: setbit",
              "81: bytec_1",
              "82: swap",
              "83: concat",
              "84: log",
              "85: intc_0",
              "86: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 5 -> 115 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "35: main_box_map_struct_exists_route@39:",
              "38: txn OnCompletion",
              "39: !",
              "40: assert",
              "41: txn ApplicationID",
              "42: assert",
              "45: txna ApplicationArgs 1",
              "48: callsub box_map_struct_exists"
            ],
            [
              "1973: box_map_struct_exists:",
              "1977: proto 1 1",
              "1980: bytec 11",
              "1981: frame_dig -1",
              "1982: concat",
              "1983: box_len",
              "1984: bury 1",
              "1985: retsub"
            ],
            [
              "49: bytec_3",
              "50: intc_1",
              "51: uncover 2",
              "52: setbit",
              "53: bytec_1",
              "54: swap",
              "55: concat",
              "56: log",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "12: pushbytess 0x5888b998 0x18d0fbe3 0x3af23728 0xcb911969 0x4fc279e1 0x9ef66971 0xe89b7f6f 0x4e6f089e 0x12806f6b 0x75ed3485 0x58e27eaf 0xaf911590 0xae84ac4d 0xeff5b657 0x1b8dade0 0x65c3063e 0x82708565 0x47bb7043 0x3b8cae2f 0x78b0734e 0xb13e64d8 0xd67789eb 0x94e5d3f4 0xa86d16b1 0x54db62de 0xef156830 0x79df57fc 0xf76125b9 0x21aca6ff 0x04ef4971 0x23ecb32c 0xecd1d1f9 0x7fa2d1c0 0x8ee2c364 0x9802088c 0x36f86c8e",
              "13: txna ApplicationArgs 0",
              "14: match main_get_box_route@5 main_get_item_box_map_route@6 main_get_box_map_route@7 main_get_box_ref_route@8 main_maybe_box_route@9 main_maybe_box_map_route@10 main_maybe_box_ref_route@11 main_get_box_example_route@12 main_get_box_map_example_route@13 main_maybe_box_example_route@14 main_maybe_box_map_example_route@15 main_get_box_map_struct_route@16 main_set_box_route@17 main_set_box_map_route@18 main_set_box_map_struct_route@19 main_set_box_example_route@20 main_delete_box_route@21 main_delete_box_map_route@22 main_delete_box_ref_route@23 main_box_map_length_route@24 main_length_box_ref_route@25 main_box_map_struct_length_route@26 main_box_map_length_example_route@27 main_length_box_ref_example_route@28 main_extract_box_ref_route@29 main_manipulate_box_ref_route@30 main_value_box_route@31 main_exist_box_route@32 main_exist_box_example_route@33 main_slice_box_route@34 main_arc4_box_route@35 main_key_box_route@36 main_key_box_example_route@37 main_box_map_exists_route@38 main_box_map_struct_exists_route@39 main_key_prefix_box_map_route@40"
            ],
            [
              "22: main_key_prefix_box_map_route@40:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: pushbytes 0x151f7c750000",
              "31: log",
              "32: intc_0",
              "33: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 74 -> 75",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "717: main_bare_routing@41:",
              "720: txn OnCompletion",
              "721: bnz main_after_if_else@43"
            ],
            [
              "722: txn ApplicationID",
              "723: !",
              "724: assert",
              "725: intc_0",
              "726: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 74 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 32 64",
              "7: bytecblock 0x626c6f62 0x151f7c75 \"box_int\" 0x00 0x424f585f43 \"b\" 0x64 0x75736572730000000000000000 0x68656c6c6f \"0\" \"default\" \"users\" \"box_bytes\" 0x00023432 \"box_ref\" 0x0003",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@41"
            ],
            [
              "717: main_bare_routing@41:",
              "720: txn OnCompletion",
              "721: bnz main_after_if_else@43"
            ],
            [
              "16: main_after_if_else@43:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    }
  ]
}