[algokit]
min_version = "v2.0.0"

[generate.smart-contract]
description = "Generate a new smart contract for existing project"
path = ".algokit/generators/create_contract"

[generate.env-file]
description = "Generate a new generic or Algorand network specific .env file"
path = ".algokit/generators/create_env_file"

[project]
type = 'contract'
name = 'typescript-examples'
projects_root_path = 'contracts'
artifacts = 'artifacts'

[project.run]

build = { commands = ['npm run build'], description = 'Build the project' }

deploy = { commands = ['npm run deploy'], description = 'Deploy the project' }

format = { commands = [
  'npm run format',
], description = 'Format files using prettier' }

lint = { commands = ['npm run lint'], description = 'Lint files using eslint' }

lint-fix = { commands = [
  'npm run lint:fix',
], description = 'Fix linting issues' }

test = { commands = ['npm run test'], description = 'Run tests' }

check-types = { commands = [
  'npm run check-types',
], description = 'Type check TypeScript files' }

audit = { commands = [
  'npm run audit',
], description = 'Audit with better-npm-audit' }

audit-teal = { commands = [
  # ðŸš¨ IMPORTANT ðŸš¨: For strict TEAL validation, remove --exclude statements. The default starter contract is not for production. Ensure thorough testing and adherence to best practices in smart contract development. This is not a replacement for a professional audit.
  'algokit task analyze contracts/artifacts --recursive --force --exclude rekey-to --exclude is-updatable --exclude missing-fee-check --exclude is-deletable --exclude can-close-asset --exclude can-close-account --exclude unprotected-deletable --exclude unprotected-updatable',
], description = 'Audit TEAL files' }

# Commands intented for CI only, prefixed with `ci-` by convention
ci-teal-diff = { commands = [
  'git add -N ./contracts/artifacts',
  'git diff --exit-code --minimal ./contracts/artifacts',
], description = 'Check TEAL files for differences' }
