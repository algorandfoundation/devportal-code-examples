#pragma version 11
#pragma typetrack false


main:
    intcblock 1 0 2 42
    bytecblock 0x151f7c75 "boxMap" "boxInt" 0x00010203 0x00 "boxString" "boxDynamicBytes" "users" "42"


    txn NumAppArgs
    bz main___algots__.defaultCreate@28
    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert
    pushbytess 0xb7491344 0x49cf4105 0x6ab3e9bc 0x26ca648a 0x28cc7139 0x644a3994 0xb1f5a9b6 0xd829d2a3 0xfa1562f7 0xc497bc6f 0xf4f9cbad 0x9e11fd7a 0xf53418c4 0x9101a7de 0xa4552eb5 0xcb31fa33 0x799689d5 0x156ef28d 0xb2d39fea 0x0a4036cd 0x547f0a74
    txna ApplicationArgs 0
    match getBox valueBox maybeBox getBoxMap getBoxMapWithDefault maybeBoxMap main_keyPrefixBoxMap_route@10 boxMapExists setBox setBoxString setBoxDynamicBytes setBoxMap boxMapLength deleteBox deleteBoxMap extractBox getBoxMapObject boxMapObjectExists setBoxMapObject boxMapObjectLength arc4Box
    err

main_keyPrefixBoxMap_route@10:



    pushbytes 0x151f7c750006626f784d6170
    log
    intc_0
    return

main___algots__.defaultCreate@28:


    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return



getBox:


    bytec_2


    box_get
    assert
    btoi



    itob
    bytec_0
    swap
    concat
    log
    intc_0
    return



valueBox:


    bytec_2


    box_get
    assert
    btoi



    itob
    bytec_0
    swap
    concat
    log
    intc_0
    return



maybeBox:


    bytec_2


    box_get
    swap
    btoi


    itob
    bytec 4
    intc_1
    uncover 3
    setbit
    concat



    bytec_0
    swap
    concat
    log
    intc_0
    return



getBoxMap:



    txna ApplicationArgs 1
    btoi


    itob


    bytec_1
    swap
    concat


    box_get
    assert



    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0
    swap
    concat
    log
    intc_0
    return



getBoxMapWithDefault:



    txna ApplicationArgs 1
    btoi


    itob


    bytec_1
    swap
    concat


    box_get
    pushbytes "default"
    cover 2
    select



    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0
    swap
    concat
    log
    intc_0
    return



maybeBoxMap:



    txna ApplicationArgs 1
    btoi


    itob


    bytec_1
    swap
    concat


    box_get
    dup
    uncover 2
    swap


    bz maybeBoxMap_ternary_false@3
    dup

maybeBoxMap_ternary_merge@4:


    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec 4
    intc_1
    dig 4
    setbit
    pushbytes 0x0003
    swap
    concat
    swap
    concat



    bytec_0
    swap
    concat
    log
    intc_0
    return

maybeBoxMap_ternary_false@3:


    pushbytes ""
    b maybeBoxMap_ternary_merge@4



boxMapExists:



    txna ApplicationArgs 1
    btoi


    itob


    bytec_1
    swap
    concat


    box_len
    bury 1



    bytec 4
    intc_1
    uncover 2
    setbit
    bytec_0
    swap
    concat
    log
    intc_0
    return



setBox:


    txna ApplicationArgs 1
    btoi


    itob


    bytec_2


    swap
    box_put


    intc_0
    return



setBoxString:


    txna ApplicationArgs 1
    extract 2 0


    bytec 5


    box_del
    pop


    bytec 5


    swap
    box_put


    intc_0
    return



setBoxDynamicBytes:


    txna ApplicationArgs 1


    bytec 6


    box_del
    pop


    bytec 6


    swap
    box_put


    intc_0
    return



setBoxMap:


    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    extract 2 0


    swap
    itob


    bytec_1
    swap
    concat


    dup
    box_del
    pop
    swap
    box_put


    intc_0
    return



boxMapLength:



    txna ApplicationArgs 1
    btoi


    itob


    bytec_1
    swap
    concat
    dup


    box_len
    bury 1
    bnz boxMapLength_after_if_else@3


    intc_1

boxMapLength_after_inlined_contracts/BoxStorage/contract.algo.ts::BoxStorage.boxMapLength@4:



    itob
    bytec_0
    swap
    concat
    log
    intc_0
    return

boxMapLength_after_if_else@3:


    dup
    box_len
    assert



    b boxMapLength_after_inlined_contracts/BoxStorage/contract.algo.ts::BoxStorage.boxMapLength@4



deleteBox:


    bytec_2


    box_del
    pop


    bytec 6


    box_del
    pop


    bytec 5


    box_del
    pop


    bytec_2


    box_get
    swap
    btoi
    intc_3
    swap
    uncover 2
    select
    intc_3
    ==
    assert


    bytec 6


    box_get
    pushbytes 0x00023432
    cover 2
    select
    extract 2 0
    bytec 8
    ==
    assert


    bytec 5


    box_get
    bytec 8
    cover 2
    select
    bytec 8
    ==


    return



deleteBoxMap:


    txna ApplicationArgs 1
    btoi


    itob


    bytec_1
    swap
    concat


    box_del
    pop


    intc_0
    return



extractBox:


    txna ApplicationArgs 1
    extract 2 0


    txn Sender


    global CurrentApplicationAddress


    dig 2


    pushint 64


    box_create
    assert


    dig 2
    intc_1
    dig 3
    box_replace


    dig 2
    intc_1
    dup
    dig 3
    box_splice


    dig 2
    intc_1
    pushint 32
    box_extract


    uncover 3
    pushint 32
    dup
    box_extract


    swap
    uncover 2
    ==
    assert


    ==


    return



getBoxMapObject:



    txna ApplicationArgs 1
    btoi


    itob


    bytec 7
    swap
    concat


    box_get
    assert



    bytec_0
    swap
    concat
    log
    intc_0
    return



boxMapObjectExists:



    txna ApplicationArgs 1
    btoi


    itob


    bytec 7
    swap
    concat


    box_len
    bury 1



    bytec 4
    intc_1
    uncover 2
    setbit
    bytec_0
    swap
    concat
    log
    intc_0
    return



setBoxMapObject:


    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2


    swap
    itob


    bytec 7
    swap
    concat


    dup
    box_del
    pop
    dup
    dig 2
    box_put










    dup
    intc_2
    pushint 8
    box_extract
    btoi


    dig 2
    intc_2
    extract_uint64










    ==
    intc_0
    &&
    swap
    pushints 10 8
    box_extract
    btoi


    uncover 2
    pushint 10
    extract_uint64










    ==
    &&
    assert


    pushbytes 0x151f7c7580
    log
    intc_0
    return



boxMapObjectLength:


    txna ApplicationArgs 1
    btoi


    itob


    bytec 7
    swap
    concat


    dup
    box_del
    pop
    dup
    pushbytes 0x0012000000000000004600000000000004d20008746573744e616d65
    box_put


    box_len
    pop


    itob
    bytec_0
    swap
    concat
    log
    intc_0
    return



arc4Box:


    txna ApplicationArgs 1
    extract 2 0


    bytec_3
    box_put
    bytec_3


    intc_1
    getbyte
    !
    assert


    bytec_3


    intc_0
    getbyte
    intc_0
    ==
    assert


    bytec_3


    intc_2
    getbyte
    intc_2
    ==
    assert


    bytec_3


    pushint 3
    getbyte
    pushint 3
    ==
    assert


    pushbytes 0x151f7c7500010203
    log
    intc_0
    return
