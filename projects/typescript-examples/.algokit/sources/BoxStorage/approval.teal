#pragma version 10
#pragma typetrack false


main:
    intcblock 1 0 32 42
    bytecblock 0x151f7c75 0x00 "blob" "boxInt" "static_ints" "boxMap" "boxDynamicBytes" "boxString" 0x75736572730000000000000000 "boxRef" "users" "42" 0x0003 0x626f784d61700000000000000000


    txn NumAppArgs
    bz main_bare_routing@31
    pushbytess 0xb7491344 0x26ca648a 0x28cc7139 0x03e8c77e 0x53c28820 0x6ab3e9bc 0xfb1c74f6 0x8c22bfd5 0xfa1562f7 0x9e11fd7a 0xd5dd922c 0x9101a7de 0xa4552eb5 0x38acf53e 0x5a1eefbe 0x69af4d6a 0x4b6b8d3c 0x8e078676 0x49cf4105 0xa74adc74 0xd829d2a3 0xf183207a 0xb1f5a9b6 0xf4f9cbad 0xc497bc6f 0x5e6ceac0
    txna ApplicationArgs 0
    match main_getBox_route@3 main_getBoxMap_route@4 main_getBoxMapWithDefault_route@5 main_getBoxRef_route@6 main_getBoxMapStruct_route@7 main_maybeBox_route@8 main_maybeBoxMap_route@9 main_maybeBoxRef_route@10 main_setBox_route@11 main_setBoxMap_route@12 main_setBoxMapStruct_route@13 main_deleteBox_route@14 main_deleteBoxMap_route@15 main_deleteBoxRef_route@16 main_boxMapLength_route@17 main_lengthBoxRef_route@18 main_boxMapStructLength_route@19 main_extractBoxRef_route@20 main_valueBox_route@21 main_arc4Box_route@22 main_boxMapExists_route@23 main_boxMapStructExists_route@24 main_keyPrefixBoxMap_route@25 main_setBoxDynamicBytes_route@26 main_setBoxString_route@27 main_setBoxRef_route@28

main_after_if_else@35:


    intc_1
    return

main_setBoxRef_route@28:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1
    extract 2 0


    callsub setBoxRef
    intc_0
    return

main_setBoxString_route@27:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1
    extract 2 0


    callsub setBoxString
    intc_0
    return

main_setBoxDynamicBytes_route@26:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1


    callsub setBoxDynamicBytes
    intc_0
    return

main_keyPrefixBoxMap_route@25:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert
    pushbytes 0x151f7c750006626f784d6170
    log
    intc_0
    return

main_boxMapStructExists_route@24:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1
    btoi


    callsub boxMapStructExists
    bytec_1
    intc_1
    uncover 2
    setbit
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_boxMapExists_route@23:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1
    btoi


    callsub boxMapExists
    bytec_1
    intc_1
    uncover 2
    setbit
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_arc4Box_route@22:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert
    callsub arc4Box
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_valueBox_route@21:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert
    callsub valueBox
    itob
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_extractBoxRef_route@20:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert
    callsub extractBoxRef
    intc_0
    return

main_boxMapStructLength_route@19:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert
    callsub boxMapStructLength
    bytec_1
    intc_1
    uncover 2
    setbit
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_lengthBoxRef_route@18:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert
    callsub lengthBoxRef
    itob
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_boxMapLength_route@17:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert
    callsub boxMapLength
    itob
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_deleteBoxRef_route@16:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1
    extract 2 0


    callsub deleteBoxRef
    intc_0
    return

main_deleteBoxMap_route@15:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1
    btoi


    callsub deleteBoxMap
    intc_0
    return

main_deleteBox_route@14:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert
    callsub deleteBox
    intc_0
    return

main_setBoxMapStruct_route@13:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2


    callsub setBoxMapStruct
    bytec_1
    intc_1
    uncover 2
    setbit
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_setBoxMap_route@12:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1
    btoi
    txna ApplicationArgs 2
    extract 2 0


    callsub setBoxMap
    intc_0
    return

main_setBox_route@11:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1
    btoi


    callsub setBox
    intc_0
    return

main_maybeBoxRef_route@10:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1
    extract 2 0


    callsub maybeBoxRef
    dig 1
    len
    itob
    extract 6 2
    uncover 2
    concat
    bytec_1
    intc_1
    uncover 3
    setbit
    bytec 12
    swap
    concat
    swap
    concat
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_maybeBoxMap_route@9:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert
    callsub maybeBoxMap
    dig 1
    len
    itob
    extract 6 2
    uncover 2
    concat
    bytec_1
    intc_1
    uncover 3
    setbit
    bytec 12
    swap
    concat
    swap
    concat
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_maybeBox_route@8:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert
    callsub maybeBox
    swap
    itob
    bytec_1
    intc_1
    uncover 3
    setbit
    concat
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_getBoxMapStruct_route@7:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1
    btoi


    callsub getBoxMapStruct
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_getBoxRef_route@6:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert
    callsub getBoxRef
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_getBoxMapWithDefault_route@5:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1
    btoi


    callsub getBoxMapWithDefault
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_getBoxMap_route@4:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert


    txna ApplicationArgs 1
    btoi


    callsub getBoxMap
    dup
    len
    itob
    extract 6 2
    swap
    concat
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_getBox_route@3:


    txn OnCompletion
    !
    assert
    txn ApplicationID
    assert
    callsub getBox
    itob
    bytec_0
    swap
    concat
    log
    intc_0
    return

main_bare_routing@31:


    txn OnCompletion
    bnz main_after_if_else@35
    txn ApplicationID
    !
    assert
    intc_0
    return



getBox:



    proto 0 1


    bytec_3


    box_get
    swap
    btoi
    swap
    assert
    retsub



getBoxMap:



    proto 1 1


    frame_dig -1
    itob


    bytec 5


    swap
    concat
    box_get
    assert
    retsub



getBoxMapWithDefault:



    proto 1 1


    frame_dig -1
    itob


    bytec 5


    swap
    concat
    box_get
    pushbytes "default"
    cover 2
    select
    retsub



getBoxRef:



    proto 0 1


    bytec 9


    intc_2
    box_create
    pop


    txn Sender


    bytec 9


    dig 1
    box_put


    bytec 9


    box_get
    dig 2
    cover 2
    select


    dup
    uncover 2
    ==
    assert


    retsub



getBoxMapStruct:



    proto 1 1


    frame_dig -1
    itob


    bytec 10


    swap
    concat
    box_get
    assert
    retsub



maybeBox:



    proto 0 2


    bytec_3


    box_get
    swap
    btoi


    swap
    retsub



maybeBoxMap:



    proto 0 2


    pushbytes 0x626f784d61700000000000000001
    box_get
    dup
    uncover 2
    swap


    bz maybeBoxMap_ternary_false@2
    frame_dig 1

maybeBoxMap_ternary_merge@3:


    frame_dig 0
    uncover 3
    uncover 3
    retsub

maybeBoxMap_ternary_false@2:


    pushbytes ""
    b maybeBoxMap_ternary_merge@3



maybeBoxRef:



    proto 1 2


    frame_dig -1
    box_get


    retsub



setBox:



    proto 1 0


    frame_dig -1
    itob


    bytec_3


    swap
    box_put
    retsub



setBoxMap:



    proto 2 0


    frame_dig -2
    itob


    bytec 5


    swap
    concat
    dup
    box_del
    pop
    frame_dig -1
    box_put
    retsub



setBoxMapStruct:



    proto 2 1


    frame_dig -2
    itob


    bytec 10


    swap
    concat
    dupn 2
    box_del
    pop
    dup
    frame_dig -1
    box_put


    box_get
    assert










    dup
    intc_1
    extract_uint16
    dig 1
    len
    substring3


    frame_dig -1
    intc_1
    extract_uint16
    frame_dig -1
    len
    frame_dig -1
    cover 2
    substring3










    ==
    bz setBoxMapStruct_bool_false@4


    frame_dig 0
    box_get
    assert










    extract 2 8


    frame_dig -1
    extract 2 8










    ==
    bz setBoxMapStruct_bool_false@4


    frame_dig 0
    box_get
    assert










    extract 10 8


    frame_dig -1
    extract 10 8










    ==
    bz setBoxMapStruct_bool_false@4
    intc_0

setBoxMapStruct_bool_merge@5:










    assert


    intc_0
    swap
    retsub

setBoxMapStruct_bool_false@4:
    intc_1
    b setBoxMapStruct_bool_merge@5



deleteBox:



    proto 0 0


    bytec_3


    box_del
    pop


    bytec 6


    box_del
    pop


    bytec 7


    box_del
    pop


    bytec_3


    box_get
    swap
    btoi
    intc_3
    swap
    uncover 2
    select
    intc_3
    ==
    assert


    bytec 6


    box_get
    pushbytes 0x00023432
    cover 2
    select
    extract 2 0
    bytec 11
    ==
    assert


    bytec 7


    box_get
    bytec 11
    cover 2
    select
    bytec 11
    ==
    assert
    retsub



deleteBoxMap:



    proto 1 0


    frame_dig -1
    itob


    bytec 5


    swap
    concat
    box_del
    pop
    retsub



deleteBoxRef:



    proto 1 0


    frame_dig -1
    box_del
    pop


    frame_dig -1
    box_get
    pop
    pushbytes ""
    ==
    bz deleteBoxRef_bool_false@4
    frame_dig -1
    box_get
    bury 1
    bnz deleteBoxRef_bool_false@4
    intc_0

deleteBoxRef_bool_merge@5:


    assert
    retsub

deleteBoxRef_bool_false@4:
    intc_1
    b deleteBoxRef_bool_merge@5



boxMapLength:



    proto 0 1


    bytec 13
    box_len
    bury 1
    bnz boxMapLength_after_if_else@2


    intc_1
    retsub

boxMapLength_after_if_else@2:


    bytec 13
    box_len
    assert
    retsub



lengthBoxRef:



    proto 0 1


    bytec_2


    intc_2
    box_create
    assert


    bytec_2


    box_len
    assert
    retsub



boxMapStructLength:



    proto 0 1


    bytec 8
    box_del
    pop
    bytec 8






    pushbytes 0x0012000000000000004600000000000004d20008746573744e616d65


    box_put


    bytec 8
    box_get
    assert
    len
    pushint 28
    ==
    assert


    bytec 8
    box_len
    assert
    pushint 28
    ==
    assert


    intc_0
    retsub



extractBoxRef:



    proto 0 0


    txn Sender


    global CurrentApplicationAddress


    dup
    len
    dig 2
    len
    +


    bytec_2


    swap
    box_create
    assert


    bytec_2


    intc_1
    dig 3
    box_replace


    bytec_2


    intc_1
    dup
    dig 3
    box_splice


    bytec_2


    intc_1
    intc_2
    box_extract


    bytec_2


    intc_2
    dup
    box_extract


    swap
    uncover 2
    ==
    assert


    ==
    assert
    retsub



valueBox:



    proto 0 1


    bytec_3


    box_get
    swap
    btoi
    swap
    assert
    retsub



arc4Box:



    proto 0 1


    bytec 4







    pushbytes 0x00010203
    box_put


    bytec 4


    box_get
    assert
    extract 0 1
    btoi
    !
    assert


    bytec 4


    box_get
    assert
    extract 1 1
    btoi
    intc_0
    ==
    assert


    bytec 4


    box_get
    assert
    extract 2 1
    btoi
    pushint 2
    ==
    assert


    bytec 4


    box_get
    assert
    extract 3 1
    btoi
    pushint 3
    ==
    assert


    bytec 4


    box_get
    assert
    retsub



boxMapExists:



    proto 1 1


    frame_dig -1
    itob


    bytec 5


    swap
    concat
    box_len
    bury 1
    retsub



boxMapStructExists:



    proto 1 1


    frame_dig -1
    itob


    bytec 10


    swap
    concat
    box_len
    bury 1
    retsub



setBoxDynamicBytes:



    proto 1 0


    bytec 6


    box_del
    pop


    bytec 6


    frame_dig -1
    box_put
    retsub



setBoxString:



    proto 1 0


    bytec 7


    box_del
    pop


    bytec 7


    frame_dig -1
    box_put
    retsub



setBoxRef:



    proto 1 0


    frame_dig -1
    intc_2
    box_create
    pop


    frame_dig -1


    txn Sender


    box_put
    retsub
