{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 6,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "123: readLocalState:",
              "126: txn Sender",
              "129: dup",
              "130: intc_0",
              "133: bytec_2",
              "136: app_local_get_ex",
              "137: assert",
              "140: dig 1",
              "141: intc_0",
              "144: bytec_3",
              "147: app_local_get_ex",
              "148: assert",
              "151: dig 2",
              "152: intc_0",
              "155: bytec 4",
              "158: app_local_get_ex",
              "159: assert",
              "162: dig 3",
              "163: intc_0",
              "166: bytec 5",
              "169: app_local_get_ex",
              "170: assert",
              "173: dig 4",
              "174: intc_0",
              "177: bytec_0",
              "180: app_local_get_ex",
              "181: assert",
              "184: uncover 5",
              "185: intc_0",
              "188: bytec_1",
              "191: app_local_get_ex",
              "192: assert",
              "202: uncover 4",
              "203: itob",
              "204: uncover 4",
              "205: itob",
              "206: concat",
              "207: dig 3",
              "208: len",
              "209: itob",
              "210: extract 6 2",
              "211: uncover 4",
              "212: concat",
              "213: swap",
              "214: pushbytes 0x0035",
              "215: concat",
              "216: dig 1",
              "217: len",
              "218: pushint 53",
              "219: +",
              "220: dig 4",
              "221: len",
              "222: itob",
              "223: extract 6 2",
              "224: uncover 5",
              "225: concat",
              "226: swap",
              "227: itob",
              "228: extract 6 2",
              "229: uncover 2",
              "230: swap",
              "231: concat",
              "232: pushbytes 0x00",
              "233: intc_0",
              "234: uncover 5",
              "235: setbit",
              "236: concat",
              "237: uncover 3",
              "238: concat",
              "239: uncover 2",
              "240: concat",
              "241: swap",
              "242: concat",
              "245: bytec 6",
              "246: swap",
              "247: concat",
              "248: log",
              "249: intc_1",
              "250: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "254: writeLocalState:",
              "257: txna ApplicationArgs 1",
              "258: extract 2 0",
              "259: txna ApplicationArgs 2",
              "260: intc_0",
              "261: getbit",
              "262: txna ApplicationArgs 3",
              "265: txn Sender",
              "268: dup",
              "269: global CurrentApplicationID",
              "270: app_opted_in",
              "271: assert",
              "274: dup",
              "277: bytec_0",
              "280: dig 5",
              "281: app_local_put",
              "284: dup",
              "287: bytec_1",
              "290: dig 4",
              "291: app_local_put",
              "294: dup",
              "297: bytec_2",
              "300: uncover 3",
              "301: app_local_put",
              "304: dup",
              "305: intc_0",
              "308: bytec_0",
              "311: app_local_get_ex",
              "312: assert",
              "313: uncover 3",
              "314: ==",
              "315: assert",
              "318: intc_0",
              "321: bytec_1",
              "324: app_local_get_ex",
              "325: assert",
              "326: ==",
              "329: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "333: writeDynamicLocalState:",
              "336: txna ApplicationArgs 1",
              "337: extract 2 0",
              "338: txna ApplicationArgs 2",
              "339: extract 2 0",
              "342: txn Sender",
              "345: dup",
              "346: global CurrentApplicationID",
              "347: app_opted_in",
              "348: assert",
              "351: uncover 2",
              "352: dig 2",
              "353: app_local_put",
              "356: dup",
              "357: len",
              "358: itob",
              "359: extract 6 2",
              "360: swap",
              "361: concat",
              "362: bytec 6",
              "363: swap",
              "364: concat",
              "365: log",
              "366: intc_1",
              "367: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "371: readDynamicLocalState:",
              "374: txna ApplicationArgs 1",
              "375: extract 2 0",
              "378: txn Sender",
              "381: dup",
              "382: global CurrentApplicationID",
              "383: app_opted_in",
              "384: assert",
              "387: intc_0",
              "388: uncover 2",
              "389: app_local_get_ex",
              "390: assert",
              "393: dup",
              "394: len",
              "395: itob",
              "396: extract 6 2",
              "397: swap",
              "398: concat",
              "399: bytec 6",
              "400: swap",
              "401: concat",
              "402: log",
              "403: intc_1",
              "404: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 12",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "408: clearLocalState:",
              "411: txn Sender",
              "414: dup",
              "415: global CurrentApplicationID",
              "416: app_opted_in",
              "417: assert",
              "420: dup",
              "423: bytec_3",
              "426: app_local_del",
              "429: dup",
              "432: bytec 4",
              "435: app_local_del",
              "438: dup",
              "441: bytec 5",
              "444: app_local_del",
              "447: dup",
              "450: bytec_0",
              "453: app_local_del",
              "456: dup",
              "459: bytec_1",
              "462: app_local_del",
              "465: bytec_2",
              "468: app_local_del",
              "471: intc_1",
              "472: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 5 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "31: main_optInToApplication_route@3:",
              "34: txn OnCompletion",
              "35: intc_1",
              "36: ==",
              "37: txn ApplicationID",
              "38: &&",
              "39: assert",
              "40: b optInToApplication"
            ],
            [
              "55: optInToApplication:",
              "58: txn Sender",
              "61: bytec_3",
              "64: pushint 100",
              "65: app_local_put",
              "68: txn Sender",
              "71: bytec 4",
              "74: pushint 200",
              "75: app_local_put",
              "78: txn Sender",
              "81: bytec 5",
              "84: pushbytes \"Silvio\"",
              "85: app_local_put",
              "88: txn Sender",
              "91: bytec_0",
              "94: pushbytes \"Micali\"",
              "95: app_local_put",
              "98: txn Sender",
              "101: bytec_1",
              "104: intc_1",
              "105: app_local_put",
              "108: txn Sender",
              "111: bytec_2",
              "114: txn Sender",
              "115: app_local_put",
              "118: intc_1",
              "119: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 6,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "123: readLocalState:",
              "126: txn Sender",
              "129: dup",
              "130: intc_0",
              "133: bytec_2",
              "136: app_local_get_ex",
              "137: assert",
              "140: dig 1",
              "141: intc_0",
              "144: bytec_3",
              "147: app_local_get_ex",
              "148: assert",
              "151: dig 2",
              "152: intc_0",
              "155: bytec 4",
              "158: app_local_get_ex",
              "159: assert",
              "162: dig 3",
              "163: intc_0",
              "166: bytec 5",
              "169: app_local_get_ex",
              "170: assert",
              "173: dig 4",
              "174: intc_0",
              "177: bytec_0",
              "180: app_local_get_ex",
              "181: assert",
              "184: uncover 5",
              "185: intc_0",
              "188: bytec_1",
              "191: app_local_get_ex",
              "192: assert",
              "202: uncover 4",
              "203: itob",
              "204: uncover 4",
              "205: itob",
              "206: concat",
              "207: dig 3",
              "208: len",
              "209: itob",
              "210: extract 6 2",
              "211: uncover 4",
              "212: concat",
              "213: swap",
              "214: pushbytes 0x0035",
              "215: concat",
              "216: dig 1",
              "217: len",
              "218: pushint 53",
              "219: +",
              "220: dig 4",
              "221: len",
              "222: itob",
              "223: extract 6 2",
              "224: uncover 5",
              "225: concat",
              "226: swap",
              "227: itob",
              "228: extract 6 2",
              "229: uncover 2",
              "230: swap",
              "231: concat",
              "232: pushbytes 0x00",
              "233: intc_0",
              "234: uncover 5",
              "235: setbit",
              "236: concat",
              "237: uncover 3",
              "238: concat",
              "239: uncover 2",
              "240: concat",
              "241: swap",
              "242: concat",
              "245: bytec 6",
              "246: swap",
              "247: concat",
              "248: log",
              "249: intc_1",
              "250: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "254: writeLocalState:",
              "257: txna ApplicationArgs 1",
              "258: extract 2 0",
              "259: txna ApplicationArgs 2",
              "260: intc_0",
              "261: getbit",
              "262: txna ApplicationArgs 3",
              "265: txn Sender",
              "268: dup",
              "269: global CurrentApplicationID",
              "270: app_opted_in",
              "271: assert",
              "274: dup",
              "277: bytec_0",
              "280: dig 5",
              "281: app_local_put",
              "284: dup",
              "287: bytec_1",
              "290: dig 4",
              "291: app_local_put",
              "294: dup",
              "297: bytec_2",
              "300: uncover 3",
              "301: app_local_put",
              "304: dup",
              "305: intc_0",
              "308: bytec_0",
              "311: app_local_get_ex",
              "312: assert",
              "313: uncover 3",
              "314: ==",
              "315: assert",
              "318: intc_0",
              "321: bytec_1",
              "324: app_local_get_ex",
              "325: assert",
              "326: ==",
              "329: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "333: writeDynamicLocalState:",
              "336: txna ApplicationArgs 1",
              "337: extract 2 0",
              "338: txna ApplicationArgs 2",
              "339: extract 2 0",
              "342: txn Sender",
              "345: dup",
              "346: global CurrentApplicationID",
              "347: app_opted_in",
              "348: assert",
              "351: uncover 2",
              "352: dig 2",
              "353: app_local_put",
              "356: dup",
              "357: len",
              "358: itob",
              "359: extract 6 2",
              "360: swap",
              "361: concat",
              "362: bytec 6",
              "363: swap",
              "364: concat",
              "365: log",
              "366: intc_1",
              "367: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "371: readDynamicLocalState:",
              "374: txna ApplicationArgs 1",
              "375: extract 2 0",
              "378: txn Sender",
              "381: dup",
              "382: global CurrentApplicationID",
              "383: app_opted_in",
              "384: assert",
              "387: intc_0",
              "388: uncover 2",
              "389: app_local_get_ex",
              "390: assert",
              "393: dup",
              "394: len",
              "395: itob",
              "396: extract 6 2",
              "397: swap",
              "398: concat",
              "399: bytec 6",
              "400: swap",
              "401: concat",
              "402: log",
              "403: intc_1",
              "404: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 12",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "408: clearLocalState:",
              "411: txn Sender",
              "414: dup",
              "415: global CurrentApplicationID",
              "416: app_opted_in",
              "417: assert",
              "420: dup",
              "423: bytec_3",
              "426: app_local_del",
              "429: dup",
              "432: bytec 4",
              "435: app_local_del",
              "438: dup",
              "441: bytec 5",
              "444: app_local_del",
              "447: dup",
              "450: bytec_0",
              "453: app_local_del",
              "456: dup",
              "459: bytec_1",
              "462: app_local_del",
              "465: bytec_2",
              "468: app_local_del",
              "471: intc_1",
              "472: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 5 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "31: main_optInToApplication_route@3:",
              "34: txn OnCompletion",
              "35: intc_1",
              "36: ==",
              "37: txn ApplicationID",
              "38: &&",
              "39: assert",
              "40: b optInToApplication"
            ],
            [
              "55: optInToApplication:",
              "58: txn Sender",
              "61: bytec_3",
              "64: pushint 100",
              "65: app_local_put",
              "68: txn Sender",
              "71: bytec 4",
              "74: pushint 200",
              "75: app_local_put",
              "78: txn Sender",
              "81: bytec 5",
              "84: pushbytes \"Silvio\"",
              "85: app_local_put",
              "88: txn Sender",
              "91: bytec_0",
              "94: pushbytes \"Micali\"",
              "95: app_local_put",
              "98: txn Sender",
              "101: bytec_1",
              "104: intc_1",
              "105: app_local_put",
              "108: txn Sender",
              "111: bytec_2",
              "114: txn Sender",
              "115: app_local_put",
              "118: intc_1",
              "119: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 6,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "123: readLocalState:",
              "126: txn Sender",
              "129: dup",
              "130: intc_0",
              "133: bytec_2",
              "136: app_local_get_ex",
              "137: assert",
              "140: dig 1",
              "141: intc_0",
              "144: bytec_3",
              "147: app_local_get_ex",
              "148: assert",
              "151: dig 2",
              "152: intc_0",
              "155: bytec 4",
              "158: app_local_get_ex",
              "159: assert",
              "162: dig 3",
              "163: intc_0",
              "166: bytec 5",
              "169: app_local_get_ex",
              "170: assert",
              "173: dig 4",
              "174: intc_0",
              "177: bytec_0",
              "180: app_local_get_ex",
              "181: assert",
              "184: uncover 5",
              "185: intc_0",
              "188: bytec_1",
              "191: app_local_get_ex",
              "192: assert",
              "202: uncover 4",
              "203: itob",
              "204: uncover 4",
              "205: itob",
              "206: concat",
              "207: dig 3",
              "208: len",
              "209: itob",
              "210: extract 6 2",
              "211: uncover 4",
              "212: concat",
              "213: swap",
              "214: pushbytes 0x0035",
              "215: concat",
              "216: dig 1",
              "217: len",
              "218: pushint 53",
              "219: +",
              "220: dig 4",
              "221: len",
              "222: itob",
              "223: extract 6 2",
              "224: uncover 5",
              "225: concat",
              "226: swap",
              "227: itob",
              "228: extract 6 2",
              "229: uncover 2",
              "230: swap",
              "231: concat",
              "232: pushbytes 0x00",
              "233: intc_0",
              "234: uncover 5",
              "235: setbit",
              "236: concat",
              "237: uncover 3",
              "238: concat",
              "239: uncover 2",
              "240: concat",
              "241: swap",
              "242: concat",
              "245: bytec 6",
              "246: swap",
              "247: concat",
              "248: log",
              "249: intc_1",
              "250: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "254: writeLocalState:",
              "257: txna ApplicationArgs 1",
              "258: extract 2 0",
              "259: txna ApplicationArgs 2",
              "260: intc_0",
              "261: getbit",
              "262: txna ApplicationArgs 3",
              "265: txn Sender",
              "268: dup",
              "269: global CurrentApplicationID",
              "270: app_opted_in",
              "271: assert",
              "274: dup",
              "277: bytec_0",
              "280: dig 5",
              "281: app_local_put",
              "284: dup",
              "287: bytec_1",
              "290: dig 4",
              "291: app_local_put",
              "294: dup",
              "297: bytec_2",
              "300: uncover 3",
              "301: app_local_put",
              "304: dup",
              "305: intc_0",
              "308: bytec_0",
              "311: app_local_get_ex",
              "312: assert",
              "313: uncover 3",
              "314: ==",
              "315: assert",
              "318: intc_0",
              "321: bytec_1",
              "324: app_local_get_ex",
              "325: assert",
              "326: ==",
              "329: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "333: writeDynamicLocalState:",
              "336: txna ApplicationArgs 1",
              "337: extract 2 0",
              "338: txna ApplicationArgs 2",
              "339: extract 2 0",
              "342: txn Sender",
              "345: dup",
              "346: global CurrentApplicationID",
              "347: app_opted_in",
              "348: assert",
              "351: uncover 2",
              "352: dig 2",
              "353: app_local_put",
              "356: dup",
              "357: len",
              "358: itob",
              "359: extract 6 2",
              "360: swap",
              "361: concat",
              "362: bytec 6",
              "363: swap",
              "364: concat",
              "365: log",
              "366: intc_1",
              "367: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "371: readDynamicLocalState:",
              "374: txna ApplicationArgs 1",
              "375: extract 2 0",
              "378: txn Sender",
              "381: dup",
              "382: global CurrentApplicationID",
              "383: app_opted_in",
              "384: assert",
              "387: intc_0",
              "388: uncover 2",
              "389: app_local_get_ex",
              "390: assert",
              "393: dup",
              "394: len",
              "395: itob",
              "396: extract 6 2",
              "397: swap",
              "398: concat",
              "399: bytec 6",
              "400: swap",
              "401: concat",
              "402: log",
              "403: intc_1",
              "404: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 12",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "408: clearLocalState:",
              "411: txn Sender",
              "414: dup",
              "415: global CurrentApplicationID",
              "416: app_opted_in",
              "417: assert",
              "420: dup",
              "423: bytec_3",
              "426: app_local_del",
              "429: dup",
              "432: bytec 4",
              "435: app_local_del",
              "438: dup",
              "441: bytec 5",
              "444: app_local_del",
              "447: dup",
              "450: bytec_0",
              "453: app_local_del",
              "456: dup",
              "459: bytec_1",
              "462: app_local_del",
              "465: bytec_2",
              "468: app_local_del",
              "471: intc_1",
              "472: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 5 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "31: main_optInToApplication_route@3:",
              "34: txn OnCompletion",
              "35: intc_1",
              "36: ==",
              "37: txn ApplicationID",
              "38: &&",
              "39: assert",
              "40: b optInToApplication"
            ],
            [
              "55: optInToApplication:",
              "58: txn Sender",
              "61: bytec_3",
              "64: pushint 100",
              "65: app_local_put",
              "68: txn Sender",
              "71: bytec 4",
              "74: pushint 200",
              "75: app_local_put",
              "78: txn Sender",
              "81: bytec 5",
              "84: pushbytes \"Silvio\"",
              "85: app_local_put",
              "88: txn Sender",
              "91: bytec_0",
              "94: pushbytes \"Micali\"",
              "95: app_local_put",
              "98: txn Sender",
              "101: bytec_1",
              "104: intc_1",
              "105: app_local_put",
              "108: txn Sender",
              "111: bytec_2",
              "114: txn Sender",
              "115: app_local_put",
              "118: intc_1",
              "119: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 6,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "123: readLocalState:",
              "126: txn Sender",
              "129: dup",
              "130: intc_0",
              "133: bytec_2",
              "136: app_local_get_ex",
              "137: assert",
              "140: dig 1",
              "141: intc_0",
              "144: bytec_3",
              "147: app_local_get_ex",
              "148: assert",
              "151: dig 2",
              "152: intc_0",
              "155: bytec 4",
              "158: app_local_get_ex",
              "159: assert",
              "162: dig 3",
              "163: intc_0",
              "166: bytec 5",
              "169: app_local_get_ex",
              "170: assert",
              "173: dig 4",
              "174: intc_0",
              "177: bytec_0",
              "180: app_local_get_ex",
              "181: assert",
              "184: uncover 5",
              "185: intc_0",
              "188: bytec_1",
              "191: app_local_get_ex",
              "192: assert",
              "202: uncover 4",
              "203: itob",
              "204: uncover 4",
              "205: itob",
              "206: concat",
              "207: dig 3",
              "208: len",
              "209: itob",
              "210: extract 6 2",
              "211: uncover 4",
              "212: concat",
              "213: swap",
              "214: pushbytes 0x0035",
              "215: concat",
              "216: dig 1",
              "217: len",
              "218: pushint 53",
              "219: +",
              "220: dig 4",
              "221: len",
              "222: itob",
              "223: extract 6 2",
              "224: uncover 5",
              "225: concat",
              "226: swap",
              "227: itob",
              "228: extract 6 2",
              "229: uncover 2",
              "230: swap",
              "231: concat",
              "232: pushbytes 0x00",
              "233: intc_0",
              "234: uncover 5",
              "235: setbit",
              "236: concat",
              "237: uncover 3",
              "238: concat",
              "239: uncover 2",
              "240: concat",
              "241: swap",
              "242: concat",
              "245: bytec 6",
              "246: swap",
              "247: concat",
              "248: log",
              "249: intc_1",
              "250: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "254: writeLocalState:",
              "257: txna ApplicationArgs 1",
              "258: extract 2 0",
              "259: txna ApplicationArgs 2",
              "260: intc_0",
              "261: getbit",
              "262: txna ApplicationArgs 3",
              "265: txn Sender",
              "268: dup",
              "269: global CurrentApplicationID",
              "270: app_opted_in",
              "271: assert",
              "274: dup",
              "277: bytec_0",
              "280: dig 5",
              "281: app_local_put",
              "284: dup",
              "287: bytec_1",
              "290: dig 4",
              "291: app_local_put",
              "294: dup",
              "297: bytec_2",
              "300: uncover 3",
              "301: app_local_put",
              "304: dup",
              "305: intc_0",
              "308: bytec_0",
              "311: app_local_get_ex",
              "312: assert",
              "313: uncover 3",
              "314: ==",
              "315: assert",
              "318: intc_0",
              "321: bytec_1",
              "324: app_local_get_ex",
              "325: assert",
              "326: ==",
              "329: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "333: writeDynamicLocalState:",
              "336: txna ApplicationArgs 1",
              "337: extract 2 0",
              "338: txna ApplicationArgs 2",
              "339: extract 2 0",
              "342: txn Sender",
              "345: dup",
              "346: global CurrentApplicationID",
              "347: app_opted_in",
              "348: assert",
              "351: uncover 2",
              "352: dig 2",
              "353: app_local_put",
              "356: dup",
              "357: len",
              "358: itob",
              "359: extract 6 2",
              "360: swap",
              "361: concat",
              "362: bytec 6",
              "363: swap",
              "364: concat",
              "365: log",
              "366: intc_1",
              "367: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "371: readDynamicLocalState:",
              "374: txna ApplicationArgs 1",
              "375: extract 2 0",
              "378: txn Sender",
              "381: dup",
              "382: global CurrentApplicationID",
              "383: app_opted_in",
              "384: assert",
              "387: intc_0",
              "388: uncover 2",
              "389: app_local_get_ex",
              "390: assert",
              "393: dup",
              "394: len",
              "395: itob",
              "396: extract 6 2",
              "397: swap",
              "398: concat",
              "399: bytec 6",
              "400: swap",
              "401: concat",
              "402: log",
              "403: intc_1",
              "404: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 12",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "408: clearLocalState:",
              "411: txn Sender",
              "414: dup",
              "415: global CurrentApplicationID",
              "416: app_opted_in",
              "417: assert",
              "420: dup",
              "423: bytec_3",
              "426: app_local_del",
              "429: dup",
              "432: bytec 4",
              "435: app_local_del",
              "438: dup",
              "441: bytec 5",
              "444: app_local_del",
              "447: dup",
              "450: bytec_0",
              "453: app_local_del",
              "456: dup",
              "459: bytec_1",
              "462: app_local_del",
              "465: bytec_2",
              "468: app_local_del",
              "471: intc_1",
              "472: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 5 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "31: main_optInToApplication_route@3:",
              "34: txn OnCompletion",
              "35: intc_1",
              "36: ==",
              "37: txn ApplicationID",
              "38: &&",
              "39: assert",
              "40: b optInToApplication"
            ],
            [
              "55: optInToApplication:",
              "58: txn Sender",
              "61: bytec_3",
              "64: pushint 100",
              "65: app_local_put",
              "68: txn Sender",
              "71: bytec 4",
              "74: pushint 200",
              "75: app_local_put",
              "78: txn Sender",
              "81: bytec 5",
              "84: pushbytes \"Silvio\"",
              "85: app_local_put",
              "88: txn Sender",
              "91: bytec_0",
              "94: pushbytes \"Micali\"",
              "95: app_local_put",
              "98: txn Sender",
              "101: bytec_1",
              "104: intc_1",
              "105: app_local_put",
              "108: txn Sender",
              "111: bytec_2",
              "114: txn Sender",
              "115: app_local_put",
              "118: intc_1",
              "119: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 7,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "123: readLocalState:",
              "126: txn Sender",
              "129: dup",
              "130: intc_0",
              "133: bytec_2",
              "136: app_local_get_ex",
              "137: assert",
              "140: dig 1",
              "141: intc_0",
              "144: bytec_3",
              "147: app_local_get_ex",
              "148: assert",
              "151: dig 2",
              "152: intc_0",
              "155: bytec 4",
              "158: app_local_get_ex",
              "159: assert",
              "162: dig 3",
              "163: intc_0",
              "166: bytec 5",
              "169: app_local_get_ex",
              "170: assert",
              "173: dig 4",
              "174: intc_0",
              "177: bytec_0",
              "180: app_local_get_ex",
              "181: assert",
              "184: uncover 5",
              "185: intc_0",
              "188: bytec_1",
              "191: app_local_get_ex",
              "192: assert",
              "202: uncover 4",
              "203: itob",
              "204: uncover 4",
              "205: itob",
              "206: concat",
              "207: dig 3",
              "208: len",
              "209: itob",
              "210: extract 6 2",
              "211: uncover 4",
              "212: concat",
              "213: swap",
              "214: pushbytes 0x0035",
              "215: concat",
              "216: dig 1",
              "217: len",
              "218: pushint 53",
              "219: +",
              "220: dig 4",
              "221: len",
              "222: itob",
              "223: extract 6 2",
              "224: uncover 5",
              "225: concat",
              "226: swap",
              "227: itob",
              "228: extract 6 2",
              "229: uncover 2",
              "230: swap",
              "231: concat",
              "232: pushbytes 0x00",
              "233: intc_0",
              "234: uncover 5",
              "235: setbit",
              "236: concat",
              "237: uncover 3",
              "238: concat",
              "239: uncover 2",
              "240: concat",
              "241: swap",
              "242: concat",
              "245: bytec 6",
              "246: swap",
              "247: concat",
              "248: log",
              "249: intc_1",
              "250: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "254: writeLocalState:",
              "257: txna ApplicationArgs 1",
              "258: extract 2 0",
              "259: txna ApplicationArgs 2",
              "260: intc_0",
              "261: getbit",
              "262: txna ApplicationArgs 3",
              "265: txn Sender",
              "268: dup",
              "269: global CurrentApplicationID",
              "270: app_opted_in",
              "271: assert",
              "274: dup",
              "277: bytec_0",
              "280: dig 5",
              "281: app_local_put",
              "284: dup",
              "287: bytec_1",
              "290: dig 4",
              "291: app_local_put",
              "294: dup",
              "297: bytec_2",
              "300: uncover 3",
              "301: app_local_put",
              "304: dup",
              "305: intc_0",
              "308: bytec_0",
              "311: app_local_get_ex",
              "312: assert",
              "313: uncover 3",
              "314: ==",
              "315: assert",
              "318: intc_0",
              "321: bytec_1",
              "324: app_local_get_ex",
              "325: assert",
              "326: ==",
              "329: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "333: writeDynamicLocalState:",
              "336: txna ApplicationArgs 1",
              "337: extract 2 0",
              "338: txna ApplicationArgs 2",
              "339: extract 2 0",
              "342: txn Sender",
              "345: dup",
              "346: global CurrentApplicationID",
              "347: app_opted_in",
              "348: assert",
              "351: uncover 2",
              "352: dig 2",
              "353: app_local_put",
              "356: dup",
              "357: len",
              "358: itob",
              "359: extract 6 2",
              "360: swap",
              "361: concat",
              "362: bytec 6",
              "363: swap",
              "364: concat",
              "365: log",
              "366: intc_1",
              "367: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "371: readDynamicLocalState:",
              "374: txna ApplicationArgs 1",
              "375: extract 2 0",
              "378: txn Sender",
              "381: dup",
              "382: global CurrentApplicationID",
              "383: app_opted_in",
              "384: assert",
              "387: intc_0",
              "388: uncover 2",
              "389: app_local_get_ex",
              "390: assert",
              "393: dup",
              "394: len",
              "395: itob",
              "396: extract 6 2",
              "397: swap",
              "398: concat",
              "399: bytec 6",
              "400: swap",
              "401: concat",
              "402: log",
              "403: intc_1",
              "404: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 12",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "408: clearLocalState:",
              "411: txn Sender",
              "414: dup",
              "415: global CurrentApplicationID",
              "416: app_opted_in",
              "417: assert",
              "420: dup",
              "423: bytec_3",
              "426: app_local_del",
              "429: dup",
              "432: bytec 4",
              "435: app_local_del",
              "438: dup",
              "441: bytec 5",
              "444: app_local_del",
              "447: dup",
              "450: bytec_0",
              "453: app_local_del",
              "456: dup",
              "459: bytec_1",
              "462: app_local_del",
              "465: bytec_2",
              "468: app_local_del",
              "471: intc_1",
              "472: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 5 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "31: main_optInToApplication_route@3:",
              "34: txn OnCompletion",
              "35: intc_1",
              "36: ==",
              "37: txn ApplicationID",
              "38: &&",
              "39: assert",
              "40: b optInToApplication"
            ],
            [
              "55: optInToApplication:",
              "58: txn Sender",
              "61: bytec_3",
              "64: pushint 100",
              "65: app_local_put",
              "68: txn Sender",
              "71: bytec 4",
              "74: pushint 200",
              "75: app_local_put",
              "78: txn Sender",
              "81: bytec 5",
              "84: pushbytes \"Silvio\"",
              "85: app_local_put",
              "88: txn Sender",
              "91: bytec_0",
              "94: pushbytes \"Micali\"",
              "95: app_local_put",
              "98: txn Sender",
              "101: bytec_1",
              "104: intc_1",
              "105: app_local_put",
              "108: txn Sender",
              "111: bytec_2",
              "114: txn Sender",
              "115: app_local_put",
              "118: intc_1",
              "119: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 6",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "42: main___algots__.defaultCreate@14:",
              "46: txn OnCompletion",
              "47: !",
              "48: txn ApplicationID",
              "49: !",
              "50: &&",
              "51: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 7,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "123: readLocalState:",
              "126: txn Sender",
              "129: dup",
              "130: intc_0",
              "133: bytec_2",
              "136: app_local_get_ex",
              "137: assert",
              "140: dig 1",
              "141: intc_0",
              "144: bytec_3",
              "147: app_local_get_ex",
              "148: assert",
              "151: dig 2",
              "152: intc_0",
              "155: bytec 4",
              "158: app_local_get_ex",
              "159: assert",
              "162: dig 3",
              "163: intc_0",
              "166: bytec 5",
              "169: app_local_get_ex",
              "170: assert",
              "173: dig 4",
              "174: intc_0",
              "177: bytec_0",
              "180: app_local_get_ex",
              "181: assert",
              "184: uncover 5",
              "185: intc_0",
              "188: bytec_1",
              "191: app_local_get_ex",
              "192: assert",
              "202: uncover 4",
              "203: itob",
              "204: uncover 4",
              "205: itob",
              "206: concat",
              "207: dig 3",
              "208: len",
              "209: itob",
              "210: extract 6 2",
              "211: uncover 4",
              "212: concat",
              "213: swap",
              "214: pushbytes 0x0035",
              "215: concat",
              "216: dig 1",
              "217: len",
              "218: pushint 53",
              "219: +",
              "220: dig 4",
              "221: len",
              "222: itob",
              "223: extract 6 2",
              "224: uncover 5",
              "225: concat",
              "226: swap",
              "227: itob",
              "228: extract 6 2",
              "229: uncover 2",
              "230: swap",
              "231: concat",
              "232: pushbytes 0x00",
              "233: intc_0",
              "234: uncover 5",
              "235: setbit",
              "236: concat",
              "237: uncover 3",
              "238: concat",
              "239: uncover 2",
              "240: concat",
              "241: swap",
              "242: concat",
              "245: bytec 6",
              "246: swap",
              "247: concat",
              "248: log",
              "249: intc_1",
              "250: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "254: writeLocalState:",
              "257: txna ApplicationArgs 1",
              "258: extract 2 0",
              "259: txna ApplicationArgs 2",
              "260: intc_0",
              "261: getbit",
              "262: txna ApplicationArgs 3",
              "265: txn Sender",
              "268: dup",
              "269: global CurrentApplicationID",
              "270: app_opted_in",
              "271: assert",
              "274: dup",
              "277: bytec_0",
              "280: dig 5",
              "281: app_local_put",
              "284: dup",
              "287: bytec_1",
              "290: dig 4",
              "291: app_local_put",
              "294: dup",
              "297: bytec_2",
              "300: uncover 3",
              "301: app_local_put",
              "304: dup",
              "305: intc_0",
              "308: bytec_0",
              "311: app_local_get_ex",
              "312: assert",
              "313: uncover 3",
              "314: ==",
              "315: assert",
              "318: intc_0",
              "321: bytec_1",
              "324: app_local_get_ex",
              "325: assert",
              "326: ==",
              "329: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "333: writeDynamicLocalState:",
              "336: txna ApplicationArgs 1",
              "337: extract 2 0",
              "338: txna ApplicationArgs 2",
              "339: extract 2 0",
              "342: txn Sender",
              "345: dup",
              "346: global CurrentApplicationID",
              "347: app_opted_in",
              "348: assert",
              "351: uncover 2",
              "352: dig 2",
              "353: app_local_put",
              "356: dup",
              "357: len",
              "358: itob",
              "359: extract 6 2",
              "360: swap",
              "361: concat",
              "362: bytec 6",
              "363: swap",
              "364: concat",
              "365: log",
              "366: intc_1",
              "367: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "371: readDynamicLocalState:",
              "374: txna ApplicationArgs 1",
              "375: extract 2 0",
              "378: txn Sender",
              "381: dup",
              "382: global CurrentApplicationID",
              "383: app_opted_in",
              "384: assert",
              "387: intc_0",
              "388: uncover 2",
              "389: app_local_get_ex",
              "390: assert",
              "393: dup",
              "394: len",
              "395: itob",
              "396: extract 6 2",
              "397: swap",
              "398: concat",
              "399: bytec 6",
              "400: swap",
              "401: concat",
              "402: log",
              "403: intc_1",
              "404: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 12",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "17: main_switch_case_next@4:",
              "21: txn OnCompletion",
              "22: !",
              "23: assert",
              "24: txn ApplicationID",
              "25: assert",
              "26: pushbytess 0xd0013fc5 0xa6b79c3d 0x2793c249 0x213631f5 0x5e58051a",
              "27: txna ApplicationArgs 0",
              "28: match readLocalState writeLocalState writeDynamicLocalState readDynamicLocalState clearLocalState"
            ],
            [
              "408: clearLocalState:",
              "411: txn Sender",
              "414: dup",
              "415: global CurrentApplicationID",
              "416: app_opted_in",
              "417: assert",
              "420: dup",
              "423: bytec_3",
              "426: app_local_del",
              "429: dup",
              "432: bytec 4",
              "435: app_local_del",
              "438: dup",
              "441: bytec 5",
              "444: app_local_del",
              "447: dup",
              "450: bytec_0",
              "453: app_local_del",
              "456: dup",
              "459: bytec_1",
              "462: app_local_del",
              "465: bytec_2",
              "468: app_local_del",
              "471: intc_1",
              "472: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 5 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "13: pushbytes 0x01a3a3ff",
              "14: txna ApplicationArgs 0",
              "15: match main_optInToApplication_route@3"
            ],
            [
              "31: main_optInToApplication_route@3:",
              "34: txn OnCompletion",
              "35: intc_1",
              "36: ==",
              "37: txn ApplicationID",
              "38: &&",
              "39: assert",
              "40: b optInToApplication"
            ],
            [
              "55: optInToApplication:",
              "58: txn Sender",
              "61: bytec_3",
              "64: pushint 100",
              "65: app_local_put",
              "68: txn Sender",
              "71: bytec 4",
              "74: pushint 200",
              "75: app_local_put",
              "78: txn Sender",
              "81: bytec 5",
              "84: pushbytes \"Silvio\"",
              "85: app_local_put",
              "88: txn Sender",
              "91: bytec_0",
              "94: pushbytes \"Micali\"",
              "95: app_local_put",
              "98: txn Sender",
              "101: bytec_1",
              "104: intc_1",
              "105: app_local_put",
              "108: txn Sender",
              "111: bytec_2",
              "114: txn Sender",
              "115: app_local_put",
              "118: intc_1",
              "119: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 6",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"localString\" \"localBool\" \"localAccount\" \"int\" \"localIntNoDefault\" \"localBytes\" 0x151f7c75",
              "11: txn NumAppArgs",
              "12: bz main___algots__.defaultCreate@14"
            ],
            [
              "42: main___algots__.defaultCreate@14:",
              "46: txn OnCompletion",
              "47: !",
              "48: txn ApplicationID",
              "49: !",
              "50: &&",
              "51: return"
            ]
          ]
        }
      ]
    }
  ]
}