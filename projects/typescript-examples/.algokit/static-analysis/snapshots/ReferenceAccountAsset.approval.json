{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0x6d68e54d 0x6acd0ce2",
              "13: txna ApplicationArgs 0",
              "14: match main_getAssetBalance_route@3 main_getAssetBalanceWithArg_route@4"
            ],
            [
              "43: main_getAssetBalance_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: callsub getAssetBalance"
            ],
            [
              "73: getAssetBalance:",
              "76: bytec_1",
              "79: intc_1",
              "82: asset_holding_get AssetBalance",
              "83: bury 1",
              "84: assert",
              "87: bytec_1",
              "90: intc_1",
              "93: asset_holding_get AssetBalance",
              "94: assert",
              "95: retsub"
            ],
            [
              "52: itob",
              "53: bytec_0",
              "54: swap",
              "55: concat",
              "56: log",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0x6d68e54d 0x6acd0ce2",
              "13: txna ApplicationArgs 0",
              "14: match main_getAssetBalance_route@3 main_getAssetBalanceWithArg_route@4"
            ],
            [
              "19: main_getAssetBalanceWithArg_route@4:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "29: txna ApplicationArgs 1",
              "30: txna ApplicationArgs 2",
              "31: btoi",
              "34: callsub getAssetBalanceWithArg"
            ],
            [
              "99: getAssetBalanceWithArg:",
              "103: proto 2 1",
              "106: frame_dig -2",
              "107: frame_dig -1",
              "108: asset_holding_get AssetBalance",
              "109: bury 1",
              "110: assert",
              "113: frame_dig -2",
              "114: frame_dig -1",
              "115: asset_holding_get AssetBalance",
              "116: assert",
              "117: retsub"
            ],
            [
              "35: itob",
              "36: bytec_0",
              "37: swap",
              "38: concat",
              "39: log",
              "40: intc_0",
              "41: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0x6d68e54d 0x6acd0ce2",
              "13: txna ApplicationArgs 0",
              "14: match main_getAssetBalance_route@3 main_getAssetBalanceWithArg_route@4"
            ],
            [
              "43: main_getAssetBalance_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: callsub getAssetBalance"
            ],
            [
              "73: getAssetBalance:",
              "76: bytec_1",
              "79: intc_1",
              "82: asset_holding_get AssetBalance",
              "83: bury 1",
              "84: assert",
              "87: bytec_1",
              "90: intc_1",
              "93: asset_holding_get AssetBalance",
              "94: assert",
              "95: retsub"
            ],
            [
              "52: itob",
              "53: bytec_0",
              "54: swap",
              "55: concat",
              "56: log",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0x6d68e54d 0x6acd0ce2",
              "13: txna ApplicationArgs 0",
              "14: match main_getAssetBalance_route@3 main_getAssetBalanceWithArg_route@4"
            ],
            [
              "19: main_getAssetBalanceWithArg_route@4:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "29: txna ApplicationArgs 1",
              "30: txna ApplicationArgs 2",
              "31: btoi",
              "34: callsub getAssetBalanceWithArg"
            ],
            [
              "99: getAssetBalanceWithArg:",
              "103: proto 2 1",
              "106: frame_dig -2",
              "107: frame_dig -1",
              "108: asset_holding_get AssetBalance",
              "109: bury 1",
              "110: assert",
              "113: frame_dig -2",
              "114: frame_dig -1",
              "115: asset_holding_get AssetBalance",
              "116: assert",
              "117: retsub"
            ],
            [
              "35: itob",
              "36: bytec_0",
              "37: swap",
              "38: concat",
              "39: log",
              "40: intc_0",
              "41: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0x6d68e54d 0x6acd0ce2",
              "13: txna ApplicationArgs 0",
              "14: match main_getAssetBalance_route@3 main_getAssetBalanceWithArg_route@4"
            ],
            [
              "43: main_getAssetBalance_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: callsub getAssetBalance"
            ],
            [
              "73: getAssetBalance:",
              "76: bytec_1",
              "79: intc_1",
              "82: asset_holding_get AssetBalance",
              "83: bury 1",
              "84: assert",
              "87: bytec_1",
              "90: intc_1",
              "93: asset_holding_get AssetBalance",
              "94: assert",
              "95: retsub"
            ],
            [
              "52: itob",
              "53: bytec_0",
              "54: swap",
              "55: concat",
              "56: log",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0x6d68e54d 0x6acd0ce2",
              "13: txna ApplicationArgs 0",
              "14: match main_getAssetBalance_route@3 main_getAssetBalanceWithArg_route@4"
            ],
            [
              "19: main_getAssetBalanceWithArg_route@4:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "29: txna ApplicationArgs 1",
              "30: txna ApplicationArgs 2",
              "31: btoi",
              "34: callsub getAssetBalanceWithArg"
            ],
            [
              "99: getAssetBalanceWithArg:",
              "103: proto 2 1",
              "106: frame_dig -2",
              "107: frame_dig -1",
              "108: asset_holding_get AssetBalance",
              "109: bury 1",
              "110: assert",
              "113: frame_dig -2",
              "114: frame_dig -1",
              "115: asset_holding_get AssetBalance",
              "116: assert",
              "117: retsub"
            ],
            [
              "35: itob",
              "36: bytec_0",
              "37: swap",
              "38: concat",
              "39: log",
              "40: intc_0",
              "41: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0x6d68e54d 0x6acd0ce2",
              "13: txna ApplicationArgs 0",
              "14: match main_getAssetBalance_route@3 main_getAssetBalanceWithArg_route@4"
            ],
            [
              "43: main_getAssetBalance_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: callsub getAssetBalance"
            ],
            [
              "73: getAssetBalance:",
              "76: bytec_1",
              "79: intc_1",
              "82: asset_holding_get AssetBalance",
              "83: bury 1",
              "84: assert",
              "87: bytec_1",
              "90: intc_1",
              "93: asset_holding_get AssetBalance",
              "94: assert",
              "95: retsub"
            ],
            [
              "52: itob",
              "53: bytec_0",
              "54: swap",
              "55: concat",
              "56: log",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0x6d68e54d 0x6acd0ce2",
              "13: txna ApplicationArgs 0",
              "14: match main_getAssetBalance_route@3 main_getAssetBalanceWithArg_route@4"
            ],
            [
              "19: main_getAssetBalanceWithArg_route@4:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "29: txna ApplicationArgs 1",
              "30: txna ApplicationArgs 2",
              "31: btoi",
              "34: callsub getAssetBalanceWithArg"
            ],
            [
              "99: getAssetBalanceWithArg:",
              "103: proto 2 1",
              "106: frame_dig -2",
              "107: frame_dig -1",
              "108: asset_holding_get AssetBalance",
              "109: bury 1",
              "110: assert",
              "113: frame_dig -2",
              "114: frame_dig -1",
              "115: asset_holding_get AssetBalance",
              "116: assert",
              "117: retsub"
            ],
            [
              "35: itob",
              "36: bytec_0",
              "37: swap",
              "38: concat",
              "39: log",
              "40: intc_0",
              "41: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 3,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0x6d68e54d 0x6acd0ce2",
              "13: txna ApplicationArgs 0",
              "14: match main_getAssetBalance_route@3 main_getAssetBalanceWithArg_route@4"
            ],
            [
              "43: main_getAssetBalance_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: callsub getAssetBalance"
            ],
            [
              "73: getAssetBalance:",
              "76: bytec_1",
              "79: intc_1",
              "82: asset_holding_get AssetBalance",
              "83: bury 1",
              "84: assert",
              "87: bytec_1",
              "90: intc_1",
              "93: asset_holding_get AssetBalance",
              "94: assert",
              "95: retsub"
            ],
            [
              "52: itob",
              "53: bytec_0",
              "54: swap",
              "55: concat",
              "56: log",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0x6d68e54d 0x6acd0ce2",
              "13: txna ApplicationArgs 0",
              "14: match main_getAssetBalance_route@3 main_getAssetBalanceWithArg_route@4"
            ],
            [
              "19: main_getAssetBalanceWithArg_route@4:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "29: txna ApplicationArgs 1",
              "30: txna ApplicationArgs 2",
              "31: btoi",
              "34: callsub getAssetBalanceWithArg"
            ],
            [
              "99: getAssetBalanceWithArg:",
              "103: proto 2 1",
              "106: frame_dig -2",
              "107: frame_dig -1",
              "108: asset_holding_get AssetBalance",
              "109: bury 1",
              "110: assert",
              "113: frame_dig -2",
              "114: frame_dig -1",
              "115: asset_holding_get AssetBalance",
              "116: assert",
              "117: retsub"
            ],
            [
              "35: itob",
              "36: bytec_0",
              "37: swap",
              "38: concat",
              "39: log",
              "40: intc_0",
              "41: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "60: main_bare_routing@7:",
              "63: txn OnCompletion",
              "64: bnz main_after_if_else@11"
            ],
            [
              "65: txn ApplicationID",
              "66: !",
              "67: assert",
              "68: intc_0",
              "69: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 3,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 6 -> 10 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0x6d68e54d 0x6acd0ce2",
              "13: txna ApplicationArgs 0",
              "14: match main_getAssetBalance_route@3 main_getAssetBalanceWithArg_route@4"
            ],
            [
              "43: main_getAssetBalance_route@3:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "51: callsub getAssetBalance"
            ],
            [
              "73: getAssetBalance:",
              "76: bytec_1",
              "79: intc_1",
              "82: asset_holding_get AssetBalance",
              "83: bury 1",
              "84: assert",
              "87: bytec_1",
              "90: intc_1",
              "93: asset_holding_get AssetBalance",
              "94: assert",
              "95: retsub"
            ],
            [
              "52: itob",
              "53: bytec_0",
              "54: swap",
              "55: concat",
              "56: log",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 11 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "12: pushbytess 0x6d68e54d 0x6acd0ce2",
              "13: txna ApplicationArgs 0",
              "14: match main_getAssetBalance_route@3 main_getAssetBalanceWithArg_route@4"
            ],
            [
              "19: main_getAssetBalanceWithArg_route@4:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "29: txna ApplicationArgs 1",
              "30: txna ApplicationArgs 2",
              "31: btoi",
              "34: callsub getAssetBalanceWithArg"
            ],
            [
              "99: getAssetBalanceWithArg:",
              "103: proto 2 1",
              "106: frame_dig -2",
              "107: frame_dig -1",
              "108: asset_holding_get AssetBalance",
              "109: bury 1",
              "110: assert",
              "113: frame_dig -2",
              "114: frame_dig -1",
              "115: asset_holding_get AssetBalance",
              "116: assert",
              "117: retsub"
            ],
            [
              "35: itob",
              "36: bytec_0",
              "37: swap",
              "38: concat",
              "39: log",
              "40: intc_0",
              "41: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 1472",
              "7: bytecblock 0x151f7c75 0x8ed3ff306f25e04b06ba5c3c55c38fc0b90bb4e77a17a0df4a9169cb51a94b06",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@7"
            ],
            [
              "60: main_bare_routing@7:",
              "63: txn OnCompletion",
              "64: bnz main_after_if_else@11"
            ],
            [
              "65: txn ApplicationID",
              "66: !",
              "67: assert",
              "68: intc_0",
              "69: return"
            ]
          ]
        }
      ]
    }
  ]
}