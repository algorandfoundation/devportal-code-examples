{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 6,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "110: main_getGlobalState_route@5:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "118: callsub getGlobalState"
            ],
            [
              "153: getGlobalState:",
              "157: proto 0 2",
              "160: intc_0",
              "163: bytec_0",
              "166: app_global_get_ex",
              "167: assert",
              "168: intc_0",
              "171: bytec_1",
              "174: app_global_get_ex",
              "175: assert",
              "176: retsub"
            ],
            [
              "119: swap",
              "120: itob",
              "121: dig 1",
              "122: len",
              "123: itob",
              "124: extract 6 2",
              "125: uncover 2",
              "126: concat",
              "127: swap",
              "128: pushbytes 0x000a",
              "129: concat",
              "130: swap",
              "131: concat",
              "132: bytec_2",
              "133: swap",
              "134: concat",
              "135: log",
              "136: intc_1",
              "137: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "87: main_hasGlobalState_route@6:",
              "90: txn OnCompletion",
              "91: !",
              "92: assert",
              "93: txn ApplicationID",
              "94: assert",
              "95: callsub hasGlobalState"
            ],
            [
              "180: hasGlobalState:",
              "184: proto 0 2",
              "187: intc_0",
              "190: bytec_0",
              "193: app_global_get_ex",
              "194: bury 1",
              "197: intc_0",
              "200: bytec_0",
              "203: app_global_get_ex",
              "204: assert",
              "207: swap",
              "208: retsub"
            ],
            [
              "96: swap",
              "97: itob",
              "98: pushbytes 0x00",
              "99: intc_0",
              "100: uncover 3",
              "101: setbit",
              "102: concat",
              "103: bytec_2",
              "104: swap",
              "105: concat",
              "106: log",
              "107: intc_1",
              "108: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "68: main_setGlobalState_route@7:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "83: callsub setGlobalState"
            ],
            [
              "212: setGlobalState:",
              "216: proto 1 0",
              "219: bytec_1",
              "222: frame_dig -1",
              "223: app_global_put",
              "224: retsub"
            ],
            [
              "84: intc_1",
              "85: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 19 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "43: main_setGlobalStateExample_route@8:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "54: txna ApplicationArgs 1",
              "55: extract 2 0",
              "56: txna ApplicationArgs 2",
              "57: btoi",
              "58: txnas Assets",
              "59: txna ApplicationArgs 3",
              "60: intc_0",
              "61: getbit",
              "64: callsub setGlobalStateExample"
            ],
            [
              "228: setGlobalStateExample:",
              "232: proto 3 0",
              "235: bytec_3",
              "238: frame_dig -3",
              "239: app_global_put",
              "242: intc_0",
              "245: bytec_3",
              "248: app_global_get_ex",
              "249: assert",
              "250: frame_dig -3",
              "251: ==",
              "252: assert",
              "255: bytec 4",
              "258: frame_dig -1",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec 4",
              "268: app_global_get_ex",
              "269: assert",
              "270: assert",
              "273: bytec 5",
              "276: frame_dig -2",
              "277: app_global_put",
              "280: intc_0",
              "283: bytec 5",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -2",
              "289: ==",
              "290: assert",
              "291: retsub"
            ],
            [
              "65: intc_1",
              "66: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 14 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "139: main_bare_routing@11:",
              "143: txn OnCompletion",
              "144: bnz main_after_if_else@15"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 6,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "110: main_getGlobalState_route@5:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "118: callsub getGlobalState"
            ],
            [
              "153: getGlobalState:",
              "157: proto 0 2",
              "160: intc_0",
              "163: bytec_0",
              "166: app_global_get_ex",
              "167: assert",
              "168: intc_0",
              "171: bytec_1",
              "174: app_global_get_ex",
              "175: assert",
              "176: retsub"
            ],
            [
              "119: swap",
              "120: itob",
              "121: dig 1",
              "122: len",
              "123: itob",
              "124: extract 6 2",
              "125: uncover 2",
              "126: concat",
              "127: swap",
              "128: pushbytes 0x000a",
              "129: concat",
              "130: swap",
              "131: concat",
              "132: bytec_2",
              "133: swap",
              "134: concat",
              "135: log",
              "136: intc_1",
              "137: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "87: main_hasGlobalState_route@6:",
              "90: txn OnCompletion",
              "91: !",
              "92: assert",
              "93: txn ApplicationID",
              "94: assert",
              "95: callsub hasGlobalState"
            ],
            [
              "180: hasGlobalState:",
              "184: proto 0 2",
              "187: intc_0",
              "190: bytec_0",
              "193: app_global_get_ex",
              "194: bury 1",
              "197: intc_0",
              "200: bytec_0",
              "203: app_global_get_ex",
              "204: assert",
              "207: swap",
              "208: retsub"
            ],
            [
              "96: swap",
              "97: itob",
              "98: pushbytes 0x00",
              "99: intc_0",
              "100: uncover 3",
              "101: setbit",
              "102: concat",
              "103: bytec_2",
              "104: swap",
              "105: concat",
              "106: log",
              "107: intc_1",
              "108: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "68: main_setGlobalState_route@7:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "83: callsub setGlobalState"
            ],
            [
              "212: setGlobalState:",
              "216: proto 1 0",
              "219: bytec_1",
              "222: frame_dig -1",
              "223: app_global_put",
              "224: retsub"
            ],
            [
              "84: intc_1",
              "85: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 19 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "43: main_setGlobalStateExample_route@8:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "54: txna ApplicationArgs 1",
              "55: extract 2 0",
              "56: txna ApplicationArgs 2",
              "57: btoi",
              "58: txnas Assets",
              "59: txna ApplicationArgs 3",
              "60: intc_0",
              "61: getbit",
              "64: callsub setGlobalStateExample"
            ],
            [
              "228: setGlobalStateExample:",
              "232: proto 3 0",
              "235: bytec_3",
              "238: frame_dig -3",
              "239: app_global_put",
              "242: intc_0",
              "245: bytec_3",
              "248: app_global_get_ex",
              "249: assert",
              "250: frame_dig -3",
              "251: ==",
              "252: assert",
              "255: bytec 4",
              "258: frame_dig -1",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec 4",
              "268: app_global_get_ex",
              "269: assert",
              "270: assert",
              "273: bytec 5",
              "276: frame_dig -2",
              "277: app_global_put",
              "280: intc_0",
              "283: bytec 5",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -2",
              "289: ==",
              "290: assert",
              "291: retsub"
            ],
            [
              "65: intc_1",
              "66: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 14 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "139: main_bare_routing@11:",
              "143: txn OnCompletion",
              "144: bnz main_after_if_else@15"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 6,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "110: main_getGlobalState_route@5:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "118: callsub getGlobalState"
            ],
            [
              "153: getGlobalState:",
              "157: proto 0 2",
              "160: intc_0",
              "163: bytec_0",
              "166: app_global_get_ex",
              "167: assert",
              "168: intc_0",
              "171: bytec_1",
              "174: app_global_get_ex",
              "175: assert",
              "176: retsub"
            ],
            [
              "119: swap",
              "120: itob",
              "121: dig 1",
              "122: len",
              "123: itob",
              "124: extract 6 2",
              "125: uncover 2",
              "126: concat",
              "127: swap",
              "128: pushbytes 0x000a",
              "129: concat",
              "130: swap",
              "131: concat",
              "132: bytec_2",
              "133: swap",
              "134: concat",
              "135: log",
              "136: intc_1",
              "137: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "87: main_hasGlobalState_route@6:",
              "90: txn OnCompletion",
              "91: !",
              "92: assert",
              "93: txn ApplicationID",
              "94: assert",
              "95: callsub hasGlobalState"
            ],
            [
              "180: hasGlobalState:",
              "184: proto 0 2",
              "187: intc_0",
              "190: bytec_0",
              "193: app_global_get_ex",
              "194: bury 1",
              "197: intc_0",
              "200: bytec_0",
              "203: app_global_get_ex",
              "204: assert",
              "207: swap",
              "208: retsub"
            ],
            [
              "96: swap",
              "97: itob",
              "98: pushbytes 0x00",
              "99: intc_0",
              "100: uncover 3",
              "101: setbit",
              "102: concat",
              "103: bytec_2",
              "104: swap",
              "105: concat",
              "106: log",
              "107: intc_1",
              "108: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "68: main_setGlobalState_route@7:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "83: callsub setGlobalState"
            ],
            [
              "212: setGlobalState:",
              "216: proto 1 0",
              "219: bytec_1",
              "222: frame_dig -1",
              "223: app_global_put",
              "224: retsub"
            ],
            [
              "84: intc_1",
              "85: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 19 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "43: main_setGlobalStateExample_route@8:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "54: txna ApplicationArgs 1",
              "55: extract 2 0",
              "56: txna ApplicationArgs 2",
              "57: btoi",
              "58: txnas Assets",
              "59: txna ApplicationArgs 3",
              "60: intc_0",
              "61: getbit",
              "64: callsub setGlobalStateExample"
            ],
            [
              "228: setGlobalStateExample:",
              "232: proto 3 0",
              "235: bytec_3",
              "238: frame_dig -3",
              "239: app_global_put",
              "242: intc_0",
              "245: bytec_3",
              "248: app_global_get_ex",
              "249: assert",
              "250: frame_dig -3",
              "251: ==",
              "252: assert",
              "255: bytec 4",
              "258: frame_dig -1",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec 4",
              "268: app_global_get_ex",
              "269: assert",
              "270: assert",
              "273: bytec 5",
              "276: frame_dig -2",
              "277: app_global_put",
              "280: intc_0",
              "283: bytec 5",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -2",
              "289: ==",
              "290: assert",
              "291: retsub"
            ],
            [
              "65: intc_1",
              "66: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 14 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "139: main_bare_routing@11:",
              "143: txn OnCompletion",
              "144: bnz main_after_if_else@15"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 6,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "110: main_getGlobalState_route@5:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "118: callsub getGlobalState"
            ],
            [
              "153: getGlobalState:",
              "157: proto 0 2",
              "160: intc_0",
              "163: bytec_0",
              "166: app_global_get_ex",
              "167: assert",
              "168: intc_0",
              "171: bytec_1",
              "174: app_global_get_ex",
              "175: assert",
              "176: retsub"
            ],
            [
              "119: swap",
              "120: itob",
              "121: dig 1",
              "122: len",
              "123: itob",
              "124: extract 6 2",
              "125: uncover 2",
              "126: concat",
              "127: swap",
              "128: pushbytes 0x000a",
              "129: concat",
              "130: swap",
              "131: concat",
              "132: bytec_2",
              "133: swap",
              "134: concat",
              "135: log",
              "136: intc_1",
              "137: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "87: main_hasGlobalState_route@6:",
              "90: txn OnCompletion",
              "91: !",
              "92: assert",
              "93: txn ApplicationID",
              "94: assert",
              "95: callsub hasGlobalState"
            ],
            [
              "180: hasGlobalState:",
              "184: proto 0 2",
              "187: intc_0",
              "190: bytec_0",
              "193: app_global_get_ex",
              "194: bury 1",
              "197: intc_0",
              "200: bytec_0",
              "203: app_global_get_ex",
              "204: assert",
              "207: swap",
              "208: retsub"
            ],
            [
              "96: swap",
              "97: itob",
              "98: pushbytes 0x00",
              "99: intc_0",
              "100: uncover 3",
              "101: setbit",
              "102: concat",
              "103: bytec_2",
              "104: swap",
              "105: concat",
              "106: log",
              "107: intc_1",
              "108: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "68: main_setGlobalState_route@7:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "83: callsub setGlobalState"
            ],
            [
              "212: setGlobalState:",
              "216: proto 1 0",
              "219: bytec_1",
              "222: frame_dig -1",
              "223: app_global_put",
              "224: retsub"
            ],
            [
              "84: intc_1",
              "85: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 19 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "43: main_setGlobalStateExample_route@8:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "54: txna ApplicationArgs 1",
              "55: extract 2 0",
              "56: txna ApplicationArgs 2",
              "57: btoi",
              "58: txnas Assets",
              "59: txna ApplicationArgs 3",
              "60: intc_0",
              "61: getbit",
              "64: callsub setGlobalStateExample"
            ],
            [
              "228: setGlobalStateExample:",
              "232: proto 3 0",
              "235: bytec_3",
              "238: frame_dig -3",
              "239: app_global_put",
              "242: intc_0",
              "245: bytec_3",
              "248: app_global_get_ex",
              "249: assert",
              "250: frame_dig -3",
              "251: ==",
              "252: assert",
              "255: bytec 4",
              "258: frame_dig -1",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec 4",
              "268: app_global_get_ex",
              "269: assert",
              "270: assert",
              "273: bytec 5",
              "276: frame_dig -2",
              "277: app_global_put",
              "280: intc_0",
              "283: bytec 5",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -2",
              "289: ==",
              "290: assert",
              "291: retsub"
            ],
            [
              "65: intc_1",
              "66: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 14 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "139: main_bare_routing@11:",
              "143: txn OnCompletion",
              "144: bnz main_after_if_else@15"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 14,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "110: main_getGlobalState_route@5:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "118: callsub getGlobalState"
            ],
            [
              "153: getGlobalState:",
              "157: proto 0 2",
              "160: intc_0",
              "163: bytec_0",
              "166: app_global_get_ex",
              "167: assert",
              "168: intc_0",
              "171: bytec_1",
              "174: app_global_get_ex",
              "175: assert",
              "176: retsub"
            ],
            [
              "119: swap",
              "120: itob",
              "121: dig 1",
              "122: len",
              "123: itob",
              "124: extract 6 2",
              "125: uncover 2",
              "126: concat",
              "127: swap",
              "128: pushbytes 0x000a",
              "129: concat",
              "130: swap",
              "131: concat",
              "132: bytec_2",
              "133: swap",
              "134: concat",
              "135: log",
              "136: intc_1",
              "137: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "87: main_hasGlobalState_route@6:",
              "90: txn OnCompletion",
              "91: !",
              "92: assert",
              "93: txn ApplicationID",
              "94: assert",
              "95: callsub hasGlobalState"
            ],
            [
              "180: hasGlobalState:",
              "184: proto 0 2",
              "187: intc_0",
              "190: bytec_0",
              "193: app_global_get_ex",
              "194: bury 1",
              "197: intc_0",
              "200: bytec_0",
              "203: app_global_get_ex",
              "204: assert",
              "207: swap",
              "208: retsub"
            ],
            [
              "96: swap",
              "97: itob",
              "98: pushbytes 0x00",
              "99: intc_0",
              "100: uncover 3",
              "101: setbit",
              "102: concat",
              "103: bytec_2",
              "104: swap",
              "105: concat",
              "106: log",
              "107: intc_1",
              "108: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "68: main_setGlobalState_route@7:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "83: callsub setGlobalState"
            ],
            [
              "212: setGlobalState:",
              "216: proto 1 0",
              "219: bytec_1",
              "222: frame_dig -1",
              "223: app_global_put",
              "224: retsub"
            ],
            [
              "84: intc_1",
              "85: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 6 -> 19 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "43: main_setGlobalStateExample_route@8:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "54: txna ApplicationArgs 1",
              "55: extract 2 0",
              "56: txna ApplicationArgs 2",
              "57: btoi",
              "58: txnas Assets",
              "59: txna ApplicationArgs 3",
              "60: intc_0",
              "61: getbit",
              "64: callsub setGlobalStateExample"
            ],
            [
              "228: setGlobalStateExample:",
              "232: proto 3 0",
              "235: bytec_3",
              "238: frame_dig -3",
              "239: app_global_put",
              "242: intc_0",
              "245: bytec_3",
              "248: app_global_get_ex",
              "249: assert",
              "250: frame_dig -3",
              "251: ==",
              "252: assert",
              "255: bytec 4",
              "258: frame_dig -1",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec 4",
              "268: app_global_get_ex",
              "269: assert",
              "270: assert",
              "273: bytec 5",
              "276: frame_dig -2",
              "277: app_global_put",
              "280: intc_0",
              "283: bytec 5",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -2",
              "289: ==",
              "290: assert",
              "291: retsub"
            ],
            [
              "65: intc_1",
              "66: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "139: main_bare_routing@11:",
              "143: txn OnCompletion",
              "144: bnz main_after_if_else@15"
            ],
            [
              "145: txn ApplicationID",
              "146: !",
              "147: assert",
              "148: intc_1",
              "149: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 14 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "139: main_bare_routing@11:",
              "143: txn OnCompletion",
              "144: bnz main_after_if_else@15"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "110: main_getGlobalState_route@5:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "118: callsub getGlobalState"
            ],
            [
              "153: getGlobalState:",
              "157: proto 0 2",
              "160: intc_0",
              "163: bytec_0",
              "166: app_global_get_ex",
              "167: assert",
              "168: intc_0",
              "171: bytec_1",
              "174: app_global_get_ex",
              "175: assert",
              "176: retsub"
            ],
            [
              "119: swap",
              "120: itob",
              "121: dig 1",
              "122: len",
              "123: itob",
              "124: extract 6 2",
              "125: uncover 2",
              "126: concat",
              "127: swap",
              "128: pushbytes 0x000a",
              "129: concat",
              "130: swap",
              "131: concat",
              "132: bytec_2",
              "133: swap",
              "134: concat",
              "135: log",
              "136: intc_1",
              "137: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "87: main_hasGlobalState_route@6:",
              "90: txn OnCompletion",
              "91: !",
              "92: assert",
              "93: txn ApplicationID",
              "94: assert",
              "95: callsub hasGlobalState"
            ],
            [
              "180: hasGlobalState:",
              "184: proto 0 2",
              "187: intc_0",
              "190: bytec_0",
              "193: app_global_get_ex",
              "194: bury 1",
              "197: intc_0",
              "200: bytec_0",
              "203: app_global_get_ex",
              "204: assert",
              "207: swap",
              "208: retsub"
            ],
            [
              "96: swap",
              "97: itob",
              "98: pushbytes 0x00",
              "99: intc_0",
              "100: uncover 3",
              "101: setbit",
              "102: concat",
              "103: bytec_2",
              "104: swap",
              "105: concat",
              "106: log",
              "107: intc_1",
              "108: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "68: main_setGlobalState_route@7:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "83: callsub setGlobalState"
            ],
            [
              "212: setGlobalState:",
              "216: proto 1 0",
              "219: bytec_1",
              "222: frame_dig -1",
              "223: app_global_put",
              "224: retsub"
            ],
            [
              "84: intc_1",
              "85: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 19 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "43: main_setGlobalStateExample_route@8:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "54: txna ApplicationArgs 1",
              "55: extract 2 0",
              "56: txna ApplicationArgs 2",
              "57: btoi",
              "58: txnas Assets",
              "59: txna ApplicationArgs 3",
              "60: intc_0",
              "61: getbit",
              "64: callsub setGlobalStateExample"
            ],
            [
              "228: setGlobalStateExample:",
              "232: proto 3 0",
              "235: bytec_3",
              "238: frame_dig -3",
              "239: app_global_put",
              "242: intc_0",
              "245: bytec_3",
              "248: app_global_get_ex",
              "249: assert",
              "250: frame_dig -3",
              "251: ==",
              "252: assert",
              "255: bytec 4",
              "258: frame_dig -1",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec 4",
              "268: app_global_get_ex",
              "269: assert",
              "270: assert",
              "273: bytec 5",
              "276: frame_dig -2",
              "277: app_global_put",
              "280: intc_0",
              "283: bytec 5",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -2",
              "289: ==",
              "290: assert",
              "291: retsub"
            ],
            [
              "65: intc_1",
              "66: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "139: main_bare_routing@11:",
              "143: txn OnCompletion",
              "144: bnz main_after_if_else@15"
            ],
            [
              "145: txn ApplicationID",
              "146: !",
              "147: assert",
              "148: intc_1",
              "149: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 14 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "139: main_bare_routing@11:",
              "143: txn OnCompletion",
              "144: bnz main_after_if_else@15"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 14,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "110: main_getGlobalState_route@5:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "118: callsub getGlobalState"
            ],
            [
              "153: getGlobalState:",
              "157: proto 0 2",
              "160: intc_0",
              "163: bytec_0",
              "166: app_global_get_ex",
              "167: assert",
              "168: intc_0",
              "171: bytec_1",
              "174: app_global_get_ex",
              "175: assert",
              "176: retsub"
            ],
            [
              "119: swap",
              "120: itob",
              "121: dig 1",
              "122: len",
              "123: itob",
              "124: extract 6 2",
              "125: uncover 2",
              "126: concat",
              "127: swap",
              "128: pushbytes 0x000a",
              "129: concat",
              "130: swap",
              "131: concat",
              "132: bytec_2",
              "133: swap",
              "134: concat",
              "135: log",
              "136: intc_1",
              "137: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "87: main_hasGlobalState_route@6:",
              "90: txn OnCompletion",
              "91: !",
              "92: assert",
              "93: txn ApplicationID",
              "94: assert",
              "95: callsub hasGlobalState"
            ],
            [
              "180: hasGlobalState:",
              "184: proto 0 2",
              "187: intc_0",
              "190: bytec_0",
              "193: app_global_get_ex",
              "194: bury 1",
              "197: intc_0",
              "200: bytec_0",
              "203: app_global_get_ex",
              "204: assert",
              "207: swap",
              "208: retsub"
            ],
            [
              "96: swap",
              "97: itob",
              "98: pushbytes 0x00",
              "99: intc_0",
              "100: uncover 3",
              "101: setbit",
              "102: concat",
              "103: bytec_2",
              "104: swap",
              "105: concat",
              "106: log",
              "107: intc_1",
              "108: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "68: main_setGlobalState_route@7:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "83: callsub setGlobalState"
            ],
            [
              "212: setGlobalState:",
              "216: proto 1 0",
              "219: bytec_1",
              "222: frame_dig -1",
              "223: app_global_put",
              "224: retsub"
            ],
            [
              "84: intc_1",
              "85: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 6 -> 19 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "43: main_setGlobalStateExample_route@8:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "54: txna ApplicationArgs 1",
              "55: extract 2 0",
              "56: txna ApplicationArgs 2",
              "57: btoi",
              "58: txnas Assets",
              "59: txna ApplicationArgs 3",
              "60: intc_0",
              "61: getbit",
              "64: callsub setGlobalStateExample"
            ],
            [
              "228: setGlobalStateExample:",
              "232: proto 3 0",
              "235: bytec_3",
              "238: frame_dig -3",
              "239: app_global_put",
              "242: intc_0",
              "245: bytec_3",
              "248: app_global_get_ex",
              "249: assert",
              "250: frame_dig -3",
              "251: ==",
              "252: assert",
              "255: bytec 4",
              "258: frame_dig -1",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec 4",
              "268: app_global_get_ex",
              "269: assert",
              "270: assert",
              "273: bytec 5",
              "276: frame_dig -2",
              "277: app_global_put",
              "280: intc_0",
              "283: bytec 5",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -2",
              "289: ==",
              "290: assert",
              "291: retsub"
            ],
            [
              "65: intc_1",
              "66: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "139: main_bare_routing@11:",
              "143: txn OnCompletion",
              "144: bnz main_after_if_else@15"
            ],
            [
              "145: txn ApplicationID",
              "146: !",
              "147: assert",
              "148: intc_1",
              "149: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 14 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushbytes \"Hello\"",
              "19: app_global_put",
              "22: pushbytes \"globalBool\"",
              "23: intc_1",
              "24: app_global_put"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "139: main_bare_routing@11:",
              "143: txn OnCompletion",
              "144: bnz main_after_if_else@15"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "110: main_getGlobalState_route@5:",
              "113: txn OnCompletion",
              "114: !",
              "115: assert",
              "116: txn ApplicationID",
              "117: assert",
              "118: callsub getGlobalState"
            ],
            [
              "153: getGlobalState:",
              "157: proto 0 2",
              "160: intc_0",
              "163: bytec_0",
              "166: app_global_get_ex",
              "167: assert",
              "168: intc_0",
              "171: bytec_1",
              "174: app_global_get_ex",
              "175: assert",
              "176: retsub"
            ],
            [
              "119: swap",
              "120: itob",
              "121: dig 1",
              "122: len",
              "123: itob",
              "124: extract 6 2",
              "125: uncover 2",
              "126: concat",
              "127: swap",
              "128: pushbytes 0x000a",
              "129: concat",
              "130: swap",
              "131: concat",
              "132: bytec_2",
              "133: swap",
              "134: concat",
              "135: log",
              "136: intc_1",
              "137: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "87: main_hasGlobalState_route@6:",
              "90: txn OnCompletion",
              "91: !",
              "92: assert",
              "93: txn ApplicationID",
              "94: assert",
              "95: callsub hasGlobalState"
            ],
            [
              "180: hasGlobalState:",
              "184: proto 0 2",
              "187: intc_0",
              "190: bytec_0",
              "193: app_global_get_ex",
              "194: bury 1",
              "197: intc_0",
              "200: bytec_0",
              "203: app_global_get_ex",
              "204: assert",
              "207: swap",
              "208: retsub"
            ],
            [
              "96: swap",
              "97: itob",
              "98: pushbytes 0x00",
              "99: intc_0",
              "100: uncover 3",
              "101: setbit",
              "102: concat",
              "103: bytec_2",
              "104: swap",
              "105: concat",
              "106: log",
              "107: intc_1",
              "108: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "68: main_setGlobalState_route@7:",
              "71: txn OnCompletion",
              "72: !",
              "73: assert",
              "74: txn ApplicationID",
              "75: assert",
              "79: txna ApplicationArgs 1",
              "80: extract 2 0",
              "83: callsub setGlobalState"
            ],
            [
              "212: setGlobalState:",
              "216: proto 1 0",
              "219: bytec_1",
              "222: frame_dig -1",
              "223: app_global_put",
              "224: retsub"
            ],
            [
              "84: intc_1",
              "85: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 19 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "32: pushbytess 0xd4035ec3 0x47b45cd1 0xd4c4fbd9 0xf5b1f705",
              "33: txna ApplicationArgs 0",
              "34: match main_getGlobalState_route@5 main_hasGlobalState_route@6 main_setGlobalState_route@7 main_setGlobalStateExample_route@8"
            ],
            [
              "43: main_setGlobalStateExample_route@8:",
              "46: txn OnCompletion",
              "47: !",
              "48: assert",
              "49: txn ApplicationID",
              "50: assert",
              "54: txna ApplicationArgs 1",
              "55: extract 2 0",
              "56: txna ApplicationArgs 2",
              "57: btoi",
              "58: txnas Assets",
              "59: txna ApplicationArgs 3",
              "60: intc_0",
              "61: getbit",
              "64: callsub setGlobalStateExample"
            ],
            [
              "228: setGlobalStateExample:",
              "232: proto 3 0",
              "235: bytec_3",
              "238: frame_dig -3",
              "239: app_global_put",
              "242: intc_0",
              "245: bytec_3",
              "248: app_global_get_ex",
              "249: assert",
              "250: frame_dig -3",
              "251: ==",
              "252: assert",
              "255: bytec 4",
              "258: frame_dig -1",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec 4",
              "268: app_global_get_ex",
              "269: assert",
              "270: assert",
              "273: bytec 5",
              "276: frame_dig -2",
              "277: app_global_put",
              "280: intc_0",
              "283: bytec 5",
              "286: app_global_get_ex",
              "287: assert",
              "288: frame_dig -2",
              "289: ==",
              "290: assert",
              "291: retsub"
            ],
            [
              "65: intc_1",
              "66: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "139: main_bare_routing@11:",
              "143: txn OnCompletion",
              "144: bnz main_after_if_else@15"
            ],
            [
              "145: txn ApplicationID",
              "146: !",
              "147: assert",
              "148: intc_1",
              "149: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 14 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalInt\" \"globalBytes\" 0x151f7c75 \"globalBytesNoDefault\" \"globalBoolNoDefault\" \"globalAsset\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "26: main_after_if_else@2:",
              "30: txn NumAppArgs",
              "31: bz main_bare_routing@11"
            ],
            [
              "139: main_bare_routing@11:",
              "143: txn OnCompletion",
              "144: bnz main_after_if_else@15"
            ],
            [
              "36: main_after_if_else@15:",
              "40: intc_0",
              "41: return"
            ]
          ]
        }
      ]
    }
  ]
}