{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "148: main_readGlobalState_route@5:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "156: callsub readGlobalState"
            ],
            [
              "178: readGlobalState:",
              "181: intc_0",
              "184: bytec 4",
              "187: app_global_get_ex",
              "188: assert",
              "191: intc_0",
              "194: bytec_2",
              "197: app_global_get_ex",
              "198: assert",
              "201: intc_0",
              "204: bytec_3",
              "207: app_global_get_ex",
              "208: assert",
              "211: intc_0",
              "214: bytec 6",
              "217: app_global_get_ex",
              "218: assert",
              "221: intc_0",
              "224: bytec_0",
              "227: app_global_get_ex",
              "228: assert",
              "231: intc_0",
              "234: bytec_1",
              "237: app_global_get_ex",
              "238: assert",
              "248: uncover 4",
              "249: itob",
              "250: uncover 4",
              "251: itob",
              "252: concat",
              "253: dig 3",
              "254: len",
              "255: itob",
              "256: extract 6 2",
              "257: uncover 4",
              "258: concat",
              "259: swap",
              "260: pushbytes 0x0035",
              "261: concat",
              "262: dig 1",
              "263: len",
              "264: pushint 53",
              "265: +",
              "266: dig 4",
              "267: len",
              "268: itob",
              "269: extract 6 2",
              "270: uncover 5",
              "271: concat",
              "272: swap",
              "273: itob",
              "274: extract 6 2",
              "275: uncover 2",
              "276: swap",
              "277: concat",
              "278: pushbytes 0x00",
              "279: intc_0",
              "280: uncover 5",
              "281: setbit",
              "282: concat",
              "283: uncover 3",
              "284: concat",
              "285: uncover 2",
              "286: concat",
              "287: swap",
              "288: concat",
              "289: retsub"
            ],
            [
              "157: bytec 5",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_1",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "132: main_hasGlobalState_route@6:",
              "135: txn OnCompletion",
              "136: !",
              "137: assert",
              "138: txn ApplicationID",
              "139: assert",
              "140: callsub hasGlobalState"
            ],
            [
              "293: hasGlobalState:",
              "296: intc_0",
              "299: bytec_3",
              "302: app_global_get_ex",
              "305: dup",
              "306: assert",
              "309: swap",
              "310: itob",
              "311: pushbytes 0x00",
              "312: intc_0",
              "313: uncover 3",
              "314: setbit",
              "315: concat",
              "316: retsub"
            ],
            [
              "141: bytec 5",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "109: main_writeGlobalState_route@7:",
              "112: txn OnCompletion",
              "113: !",
              "114: assert",
              "115: txn ApplicationID",
              "116: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: intc_0",
              "124: getbit",
              "125: txna ApplicationArgs 3",
              "128: callsub writeGlobalState"
            ],
            [
              "320: writeGlobalState:",
              "323: proto 3 0",
              "326: bytec_0",
              "329: frame_dig -3",
              "330: app_global_put",
              "333: bytec_1",
              "336: frame_dig -2",
              "337: app_global_put",
              "340: bytec 4",
              "343: frame_dig -1",
              "344: app_global_put",
              "347: intc_0",
              "350: bytec_0",
              "353: app_global_get_ex",
              "354: assert",
              "355: frame_dig -3",
              "356: ==",
              "357: assert",
              "360: intc_0",
              "363: bytec_1",
              "366: app_global_get_ex",
              "367: assert",
              "368: frame_dig -2",
              "369: ==",
              "370: assert",
              "371: retsub"
            ],
            [
              "129: intc_1",
              "130: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "79: main_writeDynamicGlobalState_route@8:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: extract 2 0",
              "92: txna ApplicationArgs 2",
              "93: dup",
              "94: extract 2 0",
              "97: uncover 2",
              "98: swap",
              "99: app_global_put",
              "102: bytec 5",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "58: main_deleteGlobalState_route@9:",
              "61: txn OnCompletion",
              "62: !",
              "63: assert",
              "64: txn ApplicationID",
              "65: assert",
              "68: bytec_2",
              "71: app_global_del",
              "74: pushbytes 0x151f7c7580",
              "75: log",
              "76: intc_1",
              "77: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "148: main_readGlobalState_route@5:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "156: callsub readGlobalState"
            ],
            [
              "178: readGlobalState:",
              "181: intc_0",
              "184: bytec 4",
              "187: app_global_get_ex",
              "188: assert",
              "191: intc_0",
              "194: bytec_2",
              "197: app_global_get_ex",
              "198: assert",
              "201: intc_0",
              "204: bytec_3",
              "207: app_global_get_ex",
              "208: assert",
              "211: intc_0",
              "214: bytec 6",
              "217: app_global_get_ex",
              "218: assert",
              "221: intc_0",
              "224: bytec_0",
              "227: app_global_get_ex",
              "228: assert",
              "231: intc_0",
              "234: bytec_1",
              "237: app_global_get_ex",
              "238: assert",
              "248: uncover 4",
              "249: itob",
              "250: uncover 4",
              "251: itob",
              "252: concat",
              "253: dig 3",
              "254: len",
              "255: itob",
              "256: extract 6 2",
              "257: uncover 4",
              "258: concat",
              "259: swap",
              "260: pushbytes 0x0035",
              "261: concat",
              "262: dig 1",
              "263: len",
              "264: pushint 53",
              "265: +",
              "266: dig 4",
              "267: len",
              "268: itob",
              "269: extract 6 2",
              "270: uncover 5",
              "271: concat",
              "272: swap",
              "273: itob",
              "274: extract 6 2",
              "275: uncover 2",
              "276: swap",
              "277: concat",
              "278: pushbytes 0x00",
              "279: intc_0",
              "280: uncover 5",
              "281: setbit",
              "282: concat",
              "283: uncover 3",
              "284: concat",
              "285: uncover 2",
              "286: concat",
              "287: swap",
              "288: concat",
              "289: retsub"
            ],
            [
              "157: bytec 5",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_1",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "132: main_hasGlobalState_route@6:",
              "135: txn OnCompletion",
              "136: !",
              "137: assert",
              "138: txn ApplicationID",
              "139: assert",
              "140: callsub hasGlobalState"
            ],
            [
              "293: hasGlobalState:",
              "296: intc_0",
              "299: bytec_3",
              "302: app_global_get_ex",
              "305: dup",
              "306: assert",
              "309: swap",
              "310: itob",
              "311: pushbytes 0x00",
              "312: intc_0",
              "313: uncover 3",
              "314: setbit",
              "315: concat",
              "316: retsub"
            ],
            [
              "141: bytec 5",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "109: main_writeGlobalState_route@7:",
              "112: txn OnCompletion",
              "113: !",
              "114: assert",
              "115: txn ApplicationID",
              "116: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: intc_0",
              "124: getbit",
              "125: txna ApplicationArgs 3",
              "128: callsub writeGlobalState"
            ],
            [
              "320: writeGlobalState:",
              "323: proto 3 0",
              "326: bytec_0",
              "329: frame_dig -3",
              "330: app_global_put",
              "333: bytec_1",
              "336: frame_dig -2",
              "337: app_global_put",
              "340: bytec 4",
              "343: frame_dig -1",
              "344: app_global_put",
              "347: intc_0",
              "350: bytec_0",
              "353: app_global_get_ex",
              "354: assert",
              "355: frame_dig -3",
              "356: ==",
              "357: assert",
              "360: intc_0",
              "363: bytec_1",
              "366: app_global_get_ex",
              "367: assert",
              "368: frame_dig -2",
              "369: ==",
              "370: assert",
              "371: retsub"
            ],
            [
              "129: intc_1",
              "130: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "79: main_writeDynamicGlobalState_route@8:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: extract 2 0",
              "92: txna ApplicationArgs 2",
              "93: dup",
              "94: extract 2 0",
              "97: uncover 2",
              "98: swap",
              "99: app_global_put",
              "102: bytec 5",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "58: main_deleteGlobalState_route@9:",
              "61: txn OnCompletion",
              "62: !",
              "63: assert",
              "64: txn ApplicationID",
              "65: assert",
              "68: bytec_2",
              "71: app_global_del",
              "74: pushbytes 0x151f7c7580",
              "75: log",
              "76: intc_1",
              "77: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "148: main_readGlobalState_route@5:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "156: callsub readGlobalState"
            ],
            [
              "178: readGlobalState:",
              "181: intc_0",
              "184: bytec 4",
              "187: app_global_get_ex",
              "188: assert",
              "191: intc_0",
              "194: bytec_2",
              "197: app_global_get_ex",
              "198: assert",
              "201: intc_0",
              "204: bytec_3",
              "207: app_global_get_ex",
              "208: assert",
              "211: intc_0",
              "214: bytec 6",
              "217: app_global_get_ex",
              "218: assert",
              "221: intc_0",
              "224: bytec_0",
              "227: app_global_get_ex",
              "228: assert",
              "231: intc_0",
              "234: bytec_1",
              "237: app_global_get_ex",
              "238: assert",
              "248: uncover 4",
              "249: itob",
              "250: uncover 4",
              "251: itob",
              "252: concat",
              "253: dig 3",
              "254: len",
              "255: itob",
              "256: extract 6 2",
              "257: uncover 4",
              "258: concat",
              "259: swap",
              "260: pushbytes 0x0035",
              "261: concat",
              "262: dig 1",
              "263: len",
              "264: pushint 53",
              "265: +",
              "266: dig 4",
              "267: len",
              "268: itob",
              "269: extract 6 2",
              "270: uncover 5",
              "271: concat",
              "272: swap",
              "273: itob",
              "274: extract 6 2",
              "275: uncover 2",
              "276: swap",
              "277: concat",
              "278: pushbytes 0x00",
              "279: intc_0",
              "280: uncover 5",
              "281: setbit",
              "282: concat",
              "283: uncover 3",
              "284: concat",
              "285: uncover 2",
              "286: concat",
              "287: swap",
              "288: concat",
              "289: retsub"
            ],
            [
              "157: bytec 5",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_1",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "132: main_hasGlobalState_route@6:",
              "135: txn OnCompletion",
              "136: !",
              "137: assert",
              "138: txn ApplicationID",
              "139: assert",
              "140: callsub hasGlobalState"
            ],
            [
              "293: hasGlobalState:",
              "296: intc_0",
              "299: bytec_3",
              "302: app_global_get_ex",
              "305: dup",
              "306: assert",
              "309: swap",
              "310: itob",
              "311: pushbytes 0x00",
              "312: intc_0",
              "313: uncover 3",
              "314: setbit",
              "315: concat",
              "316: retsub"
            ],
            [
              "141: bytec 5",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "109: main_writeGlobalState_route@7:",
              "112: txn OnCompletion",
              "113: !",
              "114: assert",
              "115: txn ApplicationID",
              "116: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: intc_0",
              "124: getbit",
              "125: txna ApplicationArgs 3",
              "128: callsub writeGlobalState"
            ],
            [
              "320: writeGlobalState:",
              "323: proto 3 0",
              "326: bytec_0",
              "329: frame_dig -3",
              "330: app_global_put",
              "333: bytec_1",
              "336: frame_dig -2",
              "337: app_global_put",
              "340: bytec 4",
              "343: frame_dig -1",
              "344: app_global_put",
              "347: intc_0",
              "350: bytec_0",
              "353: app_global_get_ex",
              "354: assert",
              "355: frame_dig -3",
              "356: ==",
              "357: assert",
              "360: intc_0",
              "363: bytec_1",
              "366: app_global_get_ex",
              "367: assert",
              "368: frame_dig -2",
              "369: ==",
              "370: assert",
              "371: retsub"
            ],
            [
              "129: intc_1",
              "130: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "79: main_writeDynamicGlobalState_route@8:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: extract 2 0",
              "92: txna ApplicationArgs 2",
              "93: dup",
              "94: extract 2 0",
              "97: uncover 2",
              "98: swap",
              "99: app_global_put",
              "102: bytec 5",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "58: main_deleteGlobalState_route@9:",
              "61: txn OnCompletion",
              "62: !",
              "63: assert",
              "64: txn ApplicationID",
              "65: assert",
              "68: bytec_2",
              "71: app_global_del",
              "74: pushbytes 0x151f7c7580",
              "75: log",
              "76: intc_1",
              "77: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "148: main_readGlobalState_route@5:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "156: callsub readGlobalState"
            ],
            [
              "178: readGlobalState:",
              "181: intc_0",
              "184: bytec 4",
              "187: app_global_get_ex",
              "188: assert",
              "191: intc_0",
              "194: bytec_2",
              "197: app_global_get_ex",
              "198: assert",
              "201: intc_0",
              "204: bytec_3",
              "207: app_global_get_ex",
              "208: assert",
              "211: intc_0",
              "214: bytec 6",
              "217: app_global_get_ex",
              "218: assert",
              "221: intc_0",
              "224: bytec_0",
              "227: app_global_get_ex",
              "228: assert",
              "231: intc_0",
              "234: bytec_1",
              "237: app_global_get_ex",
              "238: assert",
              "248: uncover 4",
              "249: itob",
              "250: uncover 4",
              "251: itob",
              "252: concat",
              "253: dig 3",
              "254: len",
              "255: itob",
              "256: extract 6 2",
              "257: uncover 4",
              "258: concat",
              "259: swap",
              "260: pushbytes 0x0035",
              "261: concat",
              "262: dig 1",
              "263: len",
              "264: pushint 53",
              "265: +",
              "266: dig 4",
              "267: len",
              "268: itob",
              "269: extract 6 2",
              "270: uncover 5",
              "271: concat",
              "272: swap",
              "273: itob",
              "274: extract 6 2",
              "275: uncover 2",
              "276: swap",
              "277: concat",
              "278: pushbytes 0x00",
              "279: intc_0",
              "280: uncover 5",
              "281: setbit",
              "282: concat",
              "283: uncover 3",
              "284: concat",
              "285: uncover 2",
              "286: concat",
              "287: swap",
              "288: concat",
              "289: retsub"
            ],
            [
              "157: bytec 5",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_1",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "132: main_hasGlobalState_route@6:",
              "135: txn OnCompletion",
              "136: !",
              "137: assert",
              "138: txn ApplicationID",
              "139: assert",
              "140: callsub hasGlobalState"
            ],
            [
              "293: hasGlobalState:",
              "296: intc_0",
              "299: bytec_3",
              "302: app_global_get_ex",
              "305: dup",
              "306: assert",
              "309: swap",
              "310: itob",
              "311: pushbytes 0x00",
              "312: intc_0",
              "313: uncover 3",
              "314: setbit",
              "315: concat",
              "316: retsub"
            ],
            [
              "141: bytec 5",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "109: main_writeGlobalState_route@7:",
              "112: txn OnCompletion",
              "113: !",
              "114: assert",
              "115: txn ApplicationID",
              "116: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: intc_0",
              "124: getbit",
              "125: txna ApplicationArgs 3",
              "128: callsub writeGlobalState"
            ],
            [
              "320: writeGlobalState:",
              "323: proto 3 0",
              "326: bytec_0",
              "329: frame_dig -3",
              "330: app_global_put",
              "333: bytec_1",
              "336: frame_dig -2",
              "337: app_global_put",
              "340: bytec 4",
              "343: frame_dig -1",
              "344: app_global_put",
              "347: intc_0",
              "350: bytec_0",
              "353: app_global_get_ex",
              "354: assert",
              "355: frame_dig -3",
              "356: ==",
              "357: assert",
              "360: intc_0",
              "363: bytec_1",
              "366: app_global_get_ex",
              "367: assert",
              "368: frame_dig -2",
              "369: ==",
              "370: assert",
              "371: retsub"
            ],
            [
              "129: intc_1",
              "130: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "79: main_writeDynamicGlobalState_route@8:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: extract 2 0",
              "92: txna ApplicationArgs 2",
              "93: dup",
              "94: extract 2 0",
              "97: uncover 2",
              "98: swap",
              "99: app_global_put",
              "102: bytec 5",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "58: main_deleteGlobalState_route@9:",
              "61: txn OnCompletion",
              "62: !",
              "63: assert",
              "64: txn ApplicationID",
              "65: assert",
              "68: bytec_2",
              "71: app_global_del",
              "74: pushbytes 0x151f7c7580",
              "75: log",
              "76: intc_1",
              "77: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 12,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "148: main_readGlobalState_route@5:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "156: callsub readGlobalState"
            ],
            [
              "178: readGlobalState:",
              "181: intc_0",
              "184: bytec 4",
              "187: app_global_get_ex",
              "188: assert",
              "191: intc_0",
              "194: bytec_2",
              "197: app_global_get_ex",
              "198: assert",
              "201: intc_0",
              "204: bytec_3",
              "207: app_global_get_ex",
              "208: assert",
              "211: intc_0",
              "214: bytec 6",
              "217: app_global_get_ex",
              "218: assert",
              "221: intc_0",
              "224: bytec_0",
              "227: app_global_get_ex",
              "228: assert",
              "231: intc_0",
              "234: bytec_1",
              "237: app_global_get_ex",
              "238: assert",
              "248: uncover 4",
              "249: itob",
              "250: uncover 4",
              "251: itob",
              "252: concat",
              "253: dig 3",
              "254: len",
              "255: itob",
              "256: extract 6 2",
              "257: uncover 4",
              "258: concat",
              "259: swap",
              "260: pushbytes 0x0035",
              "261: concat",
              "262: dig 1",
              "263: len",
              "264: pushint 53",
              "265: +",
              "266: dig 4",
              "267: len",
              "268: itob",
              "269: extract 6 2",
              "270: uncover 5",
              "271: concat",
              "272: swap",
              "273: itob",
              "274: extract 6 2",
              "275: uncover 2",
              "276: swap",
              "277: concat",
              "278: pushbytes 0x00",
              "279: intc_0",
              "280: uncover 5",
              "281: setbit",
              "282: concat",
              "283: uncover 3",
              "284: concat",
              "285: uncover 2",
              "286: concat",
              "287: swap",
              "288: concat",
              "289: retsub"
            ],
            [
              "157: bytec 5",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_1",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "132: main_hasGlobalState_route@6:",
              "135: txn OnCompletion",
              "136: !",
              "137: assert",
              "138: txn ApplicationID",
              "139: assert",
              "140: callsub hasGlobalState"
            ],
            [
              "293: hasGlobalState:",
              "296: intc_0",
              "299: bytec_3",
              "302: app_global_get_ex",
              "305: dup",
              "306: assert",
              "309: swap",
              "310: itob",
              "311: pushbytes 0x00",
              "312: intc_0",
              "313: uncover 3",
              "314: setbit",
              "315: concat",
              "316: retsub"
            ],
            [
              "141: bytec 5",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "109: main_writeGlobalState_route@7:",
              "112: txn OnCompletion",
              "113: !",
              "114: assert",
              "115: txn ApplicationID",
              "116: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: intc_0",
              "124: getbit",
              "125: txna ApplicationArgs 3",
              "128: callsub writeGlobalState"
            ],
            [
              "320: writeGlobalState:",
              "323: proto 3 0",
              "326: bytec_0",
              "329: frame_dig -3",
              "330: app_global_put",
              "333: bytec_1",
              "336: frame_dig -2",
              "337: app_global_put",
              "340: bytec 4",
              "343: frame_dig -1",
              "344: app_global_put",
              "347: intc_0",
              "350: bytec_0",
              "353: app_global_get_ex",
              "354: assert",
              "355: frame_dig -3",
              "356: ==",
              "357: assert",
              "360: intc_0",
              "363: bytec_1",
              "366: app_global_get_ex",
              "367: assert",
              "368: frame_dig -2",
              "369: ==",
              "370: assert",
              "371: retsub"
            ],
            [
              "129: intc_1",
              "130: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "79: main_writeDynamicGlobalState_route@8:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: extract 2 0",
              "92: txna ApplicationArgs 2",
              "93: dup",
              "94: extract 2 0",
              "97: uncover 2",
              "98: swap",
              "99: app_global_put",
              "102: bytec 5",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "58: main_deleteGlobalState_route@9:",
              "61: txn OnCompletion",
              "62: !",
              "63: assert",
              "64: txn ApplicationID",
              "65: assert",
              "68: bytec_2",
              "71: app_global_del",
              "74: pushbytes 0x151f7c7580",
              "75: log",
              "76: intc_1",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "164: main_bare_routing@12:",
              "168: txn OnCompletion",
              "169: bnz main_after_if_else@16"
            ],
            [
              "170: txn ApplicationID",
              "171: !",
              "172: assert",
              "173: intc_1",
              "174: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "148: main_readGlobalState_route@5:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "156: callsub readGlobalState"
            ],
            [
              "178: readGlobalState:",
              "181: intc_0",
              "184: bytec 4",
              "187: app_global_get_ex",
              "188: assert",
              "191: intc_0",
              "194: bytec_2",
              "197: app_global_get_ex",
              "198: assert",
              "201: intc_0",
              "204: bytec_3",
              "207: app_global_get_ex",
              "208: assert",
              "211: intc_0",
              "214: bytec 6",
              "217: app_global_get_ex",
              "218: assert",
              "221: intc_0",
              "224: bytec_0",
              "227: app_global_get_ex",
              "228: assert",
              "231: intc_0",
              "234: bytec_1",
              "237: app_global_get_ex",
              "238: assert",
              "248: uncover 4",
              "249: itob",
              "250: uncover 4",
              "251: itob",
              "252: concat",
              "253: dig 3",
              "254: len",
              "255: itob",
              "256: extract 6 2",
              "257: uncover 4",
              "258: concat",
              "259: swap",
              "260: pushbytes 0x0035",
              "261: concat",
              "262: dig 1",
              "263: len",
              "264: pushint 53",
              "265: +",
              "266: dig 4",
              "267: len",
              "268: itob",
              "269: extract 6 2",
              "270: uncover 5",
              "271: concat",
              "272: swap",
              "273: itob",
              "274: extract 6 2",
              "275: uncover 2",
              "276: swap",
              "277: concat",
              "278: pushbytes 0x00",
              "279: intc_0",
              "280: uncover 5",
              "281: setbit",
              "282: concat",
              "283: uncover 3",
              "284: concat",
              "285: uncover 2",
              "286: concat",
              "287: swap",
              "288: concat",
              "289: retsub"
            ],
            [
              "157: bytec 5",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_1",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "132: main_hasGlobalState_route@6:",
              "135: txn OnCompletion",
              "136: !",
              "137: assert",
              "138: txn ApplicationID",
              "139: assert",
              "140: callsub hasGlobalState"
            ],
            [
              "293: hasGlobalState:",
              "296: intc_0",
              "299: bytec_3",
              "302: app_global_get_ex",
              "305: dup",
              "306: assert",
              "309: swap",
              "310: itob",
              "311: pushbytes 0x00",
              "312: intc_0",
              "313: uncover 3",
              "314: setbit",
              "315: concat",
              "316: retsub"
            ],
            [
              "141: bytec 5",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "109: main_writeGlobalState_route@7:",
              "112: txn OnCompletion",
              "113: !",
              "114: assert",
              "115: txn ApplicationID",
              "116: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: intc_0",
              "124: getbit",
              "125: txna ApplicationArgs 3",
              "128: callsub writeGlobalState"
            ],
            [
              "320: writeGlobalState:",
              "323: proto 3 0",
              "326: bytec_0",
              "329: frame_dig -3",
              "330: app_global_put",
              "333: bytec_1",
              "336: frame_dig -2",
              "337: app_global_put",
              "340: bytec 4",
              "343: frame_dig -1",
              "344: app_global_put",
              "347: intc_0",
              "350: bytec_0",
              "353: app_global_get_ex",
              "354: assert",
              "355: frame_dig -3",
              "356: ==",
              "357: assert",
              "360: intc_0",
              "363: bytec_1",
              "366: app_global_get_ex",
              "367: assert",
              "368: frame_dig -2",
              "369: ==",
              "370: assert",
              "371: retsub"
            ],
            [
              "129: intc_1",
              "130: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "79: main_writeDynamicGlobalState_route@8:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: extract 2 0",
              "92: txna ApplicationArgs 2",
              "93: dup",
              "94: extract 2 0",
              "97: uncover 2",
              "98: swap",
              "99: app_global_put",
              "102: bytec 5",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "58: main_deleteGlobalState_route@9:",
              "61: txn OnCompletion",
              "62: !",
              "63: assert",
              "64: txn ApplicationID",
              "65: assert",
              "68: bytec_2",
              "71: app_global_del",
              "74: pushbytes 0x151f7c7580",
              "75: log",
              "76: intc_1",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "164: main_bare_routing@12:",
              "168: txn OnCompletion",
              "169: bnz main_after_if_else@16"
            ],
            [
              "170: txn ApplicationID",
              "171: !",
              "172: assert",
              "173: intc_1",
              "174: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 12,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "148: main_readGlobalState_route@5:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "156: callsub readGlobalState"
            ],
            [
              "178: readGlobalState:",
              "181: intc_0",
              "184: bytec 4",
              "187: app_global_get_ex",
              "188: assert",
              "191: intc_0",
              "194: bytec_2",
              "197: app_global_get_ex",
              "198: assert",
              "201: intc_0",
              "204: bytec_3",
              "207: app_global_get_ex",
              "208: assert",
              "211: intc_0",
              "214: bytec 6",
              "217: app_global_get_ex",
              "218: assert",
              "221: intc_0",
              "224: bytec_0",
              "227: app_global_get_ex",
              "228: assert",
              "231: intc_0",
              "234: bytec_1",
              "237: app_global_get_ex",
              "238: assert",
              "248: uncover 4",
              "249: itob",
              "250: uncover 4",
              "251: itob",
              "252: concat",
              "253: dig 3",
              "254: len",
              "255: itob",
              "256: extract 6 2",
              "257: uncover 4",
              "258: concat",
              "259: swap",
              "260: pushbytes 0x0035",
              "261: concat",
              "262: dig 1",
              "263: len",
              "264: pushint 53",
              "265: +",
              "266: dig 4",
              "267: len",
              "268: itob",
              "269: extract 6 2",
              "270: uncover 5",
              "271: concat",
              "272: swap",
              "273: itob",
              "274: extract 6 2",
              "275: uncover 2",
              "276: swap",
              "277: concat",
              "278: pushbytes 0x00",
              "279: intc_0",
              "280: uncover 5",
              "281: setbit",
              "282: concat",
              "283: uncover 3",
              "284: concat",
              "285: uncover 2",
              "286: concat",
              "287: swap",
              "288: concat",
              "289: retsub"
            ],
            [
              "157: bytec 5",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_1",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "132: main_hasGlobalState_route@6:",
              "135: txn OnCompletion",
              "136: !",
              "137: assert",
              "138: txn ApplicationID",
              "139: assert",
              "140: callsub hasGlobalState"
            ],
            [
              "293: hasGlobalState:",
              "296: intc_0",
              "299: bytec_3",
              "302: app_global_get_ex",
              "305: dup",
              "306: assert",
              "309: swap",
              "310: itob",
              "311: pushbytes 0x00",
              "312: intc_0",
              "313: uncover 3",
              "314: setbit",
              "315: concat",
              "316: retsub"
            ],
            [
              "141: bytec 5",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "109: main_writeGlobalState_route@7:",
              "112: txn OnCompletion",
              "113: !",
              "114: assert",
              "115: txn ApplicationID",
              "116: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: intc_0",
              "124: getbit",
              "125: txna ApplicationArgs 3",
              "128: callsub writeGlobalState"
            ],
            [
              "320: writeGlobalState:",
              "323: proto 3 0",
              "326: bytec_0",
              "329: frame_dig -3",
              "330: app_global_put",
              "333: bytec_1",
              "336: frame_dig -2",
              "337: app_global_put",
              "340: bytec 4",
              "343: frame_dig -1",
              "344: app_global_put",
              "347: intc_0",
              "350: bytec_0",
              "353: app_global_get_ex",
              "354: assert",
              "355: frame_dig -3",
              "356: ==",
              "357: assert",
              "360: intc_0",
              "363: bytec_1",
              "366: app_global_get_ex",
              "367: assert",
              "368: frame_dig -2",
              "369: ==",
              "370: assert",
              "371: retsub"
            ],
            [
              "129: intc_1",
              "130: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "79: main_writeDynamicGlobalState_route@8:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: extract 2 0",
              "92: txna ApplicationArgs 2",
              "93: dup",
              "94: extract 2 0",
              "97: uncover 2",
              "98: swap",
              "99: app_global_put",
              "102: bytec 5",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "58: main_deleteGlobalState_route@9:",
              "61: txn OnCompletion",
              "62: !",
              "63: assert",
              "64: txn ApplicationID",
              "65: assert",
              "68: bytec_2",
              "71: app_global_del",
              "74: pushbytes 0x151f7c7580",
              "75: log",
              "76: intc_1",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "164: main_bare_routing@12:",
              "168: txn OnCompletion",
              "169: bnz main_after_if_else@16"
            ],
            [
              "170: txn ApplicationID",
              "171: !",
              "172: assert",
              "173: intc_1",
              "174: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 16 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "148: main_readGlobalState_route@5:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "156: callsub readGlobalState"
            ],
            [
              "178: readGlobalState:",
              "181: intc_0",
              "184: bytec 4",
              "187: app_global_get_ex",
              "188: assert",
              "191: intc_0",
              "194: bytec_2",
              "197: app_global_get_ex",
              "198: assert",
              "201: intc_0",
              "204: bytec_3",
              "207: app_global_get_ex",
              "208: assert",
              "211: intc_0",
              "214: bytec 6",
              "217: app_global_get_ex",
              "218: assert",
              "221: intc_0",
              "224: bytec_0",
              "227: app_global_get_ex",
              "228: assert",
              "231: intc_0",
              "234: bytec_1",
              "237: app_global_get_ex",
              "238: assert",
              "248: uncover 4",
              "249: itob",
              "250: uncover 4",
              "251: itob",
              "252: concat",
              "253: dig 3",
              "254: len",
              "255: itob",
              "256: extract 6 2",
              "257: uncover 4",
              "258: concat",
              "259: swap",
              "260: pushbytes 0x0035",
              "261: concat",
              "262: dig 1",
              "263: len",
              "264: pushint 53",
              "265: +",
              "266: dig 4",
              "267: len",
              "268: itob",
              "269: extract 6 2",
              "270: uncover 5",
              "271: concat",
              "272: swap",
              "273: itob",
              "274: extract 6 2",
              "275: uncover 2",
              "276: swap",
              "277: concat",
              "278: pushbytes 0x00",
              "279: intc_0",
              "280: uncover 5",
              "281: setbit",
              "282: concat",
              "283: uncover 3",
              "284: concat",
              "285: uncover 2",
              "286: concat",
              "287: swap",
              "288: concat",
              "289: retsub"
            ],
            [
              "157: bytec 5",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_1",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 17 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "132: main_hasGlobalState_route@6:",
              "135: txn OnCompletion",
              "136: !",
              "137: assert",
              "138: txn ApplicationID",
              "139: assert",
              "140: callsub hasGlobalState"
            ],
            [
              "293: hasGlobalState:",
              "296: intc_0",
              "299: bytec_3",
              "302: app_global_get_ex",
              "305: dup",
              "306: assert",
              "309: swap",
              "310: itob",
              "311: pushbytes 0x00",
              "312: intc_0",
              "313: uncover 3",
              "314: setbit",
              "315: concat",
              "316: retsub"
            ],
            [
              "141: bytec 5",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 18 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "109: main_writeGlobalState_route@7:",
              "112: txn OnCompletion",
              "113: !",
              "114: assert",
              "115: txn ApplicationID",
              "116: assert",
              "120: txna ApplicationArgs 1",
              "121: extract 2 0",
              "122: txna ApplicationArgs 2",
              "123: intc_0",
              "124: getbit",
              "125: txna ApplicationArgs 3",
              "128: callsub writeGlobalState"
            ],
            [
              "320: writeGlobalState:",
              "323: proto 3 0",
              "326: bytec_0",
              "329: frame_dig -3",
              "330: app_global_put",
              "333: bytec_1",
              "336: frame_dig -2",
              "337: app_global_put",
              "340: bytec 4",
              "343: frame_dig -1",
              "344: app_global_put",
              "347: intc_0",
              "350: bytec_0",
              "353: app_global_get_ex",
              "354: assert",
              "355: frame_dig -3",
              "356: ==",
              "357: assert",
              "360: intc_0",
              "363: bytec_1",
              "366: app_global_get_ex",
              "367: assert",
              "368: frame_dig -2",
              "369: ==",
              "370: assert",
              "371: retsub"
            ],
            [
              "129: intc_1",
              "130: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "79: main_writeDynamicGlobalState_route@8:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: extract 2 0",
              "92: txna ApplicationArgs 2",
              "93: dup",
              "94: extract 2 0",
              "97: uncover 2",
              "98: swap",
              "99: app_global_put",
              "102: bytec 5",
              "103: swap",
              "104: concat",
              "105: log",
              "106: intc_1",
              "107: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "51: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "52: txna ApplicationArgs 0",
              "53: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7 main_writeDynamicGlobalState_route@8 main_deleteGlobalState_route@9"
            ],
            [
              "58: main_deleteGlobalState_route@9:",
              "61: txn OnCompletion",
              "62: !",
              "63: assert",
              "64: txn ApplicationID",
              "65: assert",
              "68: bytec_2",
              "71: app_global_del",
              "74: pushbytes 0x151f7c7580",
              "75: log",
              "76: intc_1",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 14 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main_bare_routing@12"
            ],
            [
              "164: main_bare_routing@12:",
              "168: txn OnCompletion",
              "169: bnz main_after_if_else@16"
            ],
            [
              "170: txn ApplicationID",
              "171: !",
              "172: assert",
              "173: intc_1",
              "174: return"
            ]
          ]
        }
      ]
    }
  ]
}