{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 14 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "107: main_readGlobalState_route@5:",
              "110: txn OnCompletion",
              "111: !",
              "112: assert",
              "113: txn ApplicationID",
              "114: assert",
              "115: callsub readGlobalState"
            ],
            [
              "176: readGlobalState:",
              "180: proto 0 6",
              "183: intc_0",
              "186: bytec_3",
              "189: app_global_get_ex",
              "190: assert",
              "193: intc_0",
              "196: bytec 4",
              "199: app_global_get_ex",
              "200: assert",
              "203: intc_0",
              "206: bytec_2",
              "209: app_global_get_ex",
              "210: assert",
              "213: intc_0",
              "216: bytec 5",
              "219: app_global_get_ex",
              "220: assert",
              "223: intc_0",
              "226: bytec_0",
              "229: app_global_get_ex",
              "230: assert",
              "233: intc_0",
              "236: bytec_1",
              "239: app_global_get_ex",
              "240: assert",
              "250: uncover 5",
              "251: retsub"
            ],
            [
              "116: uncover 5",
              "117: itob",
              "118: uncover 5",
              "119: itob",
              "120: dig 5",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: uncover 6",
              "125: concat",
              "126: dig 5",
              "127: len",
              "128: itob",
              "129: extract 6 2",
              "130: uncover 6",
              "131: concat",
              "132: pushbytes 0x00",
              "133: intc_0",
              "134: uncover 7",
              "135: setbit",
              "136: uncover 4",
              "137: uncover 4",
              "138: concat",
              "139: pushbytes 0x0035",
              "140: concat",
              "141: dig 3",
              "142: len",
              "143: pushint 53",
              "144: +",
              "145: itob",
              "146: extract 6 2",
              "147: concat",
              "148: swap",
              "149: concat",
              "150: uncover 3",
              "151: concat",
              "152: uncover 2",
              "153: concat",
              "154: swap",
              "155: concat",
              "156: bytec 6",
              "157: swap",
              "158: concat",
              "159: log",
              "160: intc_1",
              "161: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 15 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "84: main_hasGlobalState_route@6:",
              "87: txn OnCompletion",
              "88: !",
              "89: assert",
              "90: txn ApplicationID",
              "91: assert",
              "92: callsub hasGlobalState"
            ],
            [
              "255: hasGlobalState:",
              "259: proto 0 2",
              "262: intc_0",
              "265: bytec_2",
              "268: app_global_get_ex",
              "269: bury 1",
              "272: intc_0",
              "275: bytec_2",
              "278: app_global_get_ex",
              "279: assert",
              "282: dig 1",
              "283: assert",
              "286: swap",
              "287: retsub"
            ],
            [
              "93: swap",
              "94: itob",
              "95: pushbytes 0x00",
              "96: intc_0",
              "97: uncover 3",
              "98: setbit",
              "99: concat",
              "100: bytec 6",
              "101: swap",
              "102: concat",
              "103: log",
              "104: intc_1",
              "105: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 16 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "60: main_writeGlobalState_route@7:",
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "70: txna ApplicationArgs 1",
              "71: extract 2 0",
              "72: txna ApplicationArgs 2",
              "73: intc_0",
              "74: getbit",
              "75: txna ApplicationArgs 3",
              "76: btoi",
              "77: txnas Accounts",
              "80: callsub writeGlobalState"
            ],
            [
              "291: writeGlobalState:",
              "295: proto 3 0",
              "298: bytec_0",
              "301: frame_dig -3",
              "302: app_global_put",
              "305: bytec_1",
              "308: frame_dig -2",
              "309: app_global_put",
              "312: bytec_3",
              "315: frame_dig -1",
              "316: app_global_put",
              "319: intc_0",
              "322: bytec_0",
              "325: app_global_get_ex",
              "326: assert",
              "327: frame_dig -3",
              "328: ==",
              "329: assert",
              "332: intc_0",
              "335: bytec_1",
              "338: app_global_get_ex",
              "339: assert",
              "340: frame_dig -2",
              "341: ==",
              "342: assert",
              "345: intc_0",
              "348: bytec_3",
              "351: app_global_get_ex",
              "352: assert",
              "353: frame_dig -1",
              "354: ==",
              "355: assert",
              "356: retsub"
            ],
            [
              "81: intc_1",
              "82: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 12 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "163: main_bare_routing@10:",
              "166: txn OnCompletion",
              "167: bnz main_after_if_else@14"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 14 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "107: main_readGlobalState_route@5:",
              "110: txn OnCompletion",
              "111: !",
              "112: assert",
              "113: txn ApplicationID",
              "114: assert",
              "115: callsub readGlobalState"
            ],
            [
              "176: readGlobalState:",
              "180: proto 0 6",
              "183: intc_0",
              "186: bytec_3",
              "189: app_global_get_ex",
              "190: assert",
              "193: intc_0",
              "196: bytec 4",
              "199: app_global_get_ex",
              "200: assert",
              "203: intc_0",
              "206: bytec_2",
              "209: app_global_get_ex",
              "210: assert",
              "213: intc_0",
              "216: bytec 5",
              "219: app_global_get_ex",
              "220: assert",
              "223: intc_0",
              "226: bytec_0",
              "229: app_global_get_ex",
              "230: assert",
              "233: intc_0",
              "236: bytec_1",
              "239: app_global_get_ex",
              "240: assert",
              "250: uncover 5",
              "251: retsub"
            ],
            [
              "116: uncover 5",
              "117: itob",
              "118: uncover 5",
              "119: itob",
              "120: dig 5",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: uncover 6",
              "125: concat",
              "126: dig 5",
              "127: len",
              "128: itob",
              "129: extract 6 2",
              "130: uncover 6",
              "131: concat",
              "132: pushbytes 0x00",
              "133: intc_0",
              "134: uncover 7",
              "135: setbit",
              "136: uncover 4",
              "137: uncover 4",
              "138: concat",
              "139: pushbytes 0x0035",
              "140: concat",
              "141: dig 3",
              "142: len",
              "143: pushint 53",
              "144: +",
              "145: itob",
              "146: extract 6 2",
              "147: concat",
              "148: swap",
              "149: concat",
              "150: uncover 3",
              "151: concat",
              "152: uncover 2",
              "153: concat",
              "154: swap",
              "155: concat",
              "156: bytec 6",
              "157: swap",
              "158: concat",
              "159: log",
              "160: intc_1",
              "161: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 15 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "84: main_hasGlobalState_route@6:",
              "87: txn OnCompletion",
              "88: !",
              "89: assert",
              "90: txn ApplicationID",
              "91: assert",
              "92: callsub hasGlobalState"
            ],
            [
              "255: hasGlobalState:",
              "259: proto 0 2",
              "262: intc_0",
              "265: bytec_2",
              "268: app_global_get_ex",
              "269: bury 1",
              "272: intc_0",
              "275: bytec_2",
              "278: app_global_get_ex",
              "279: assert",
              "282: dig 1",
              "283: assert",
              "286: swap",
              "287: retsub"
            ],
            [
              "93: swap",
              "94: itob",
              "95: pushbytes 0x00",
              "96: intc_0",
              "97: uncover 3",
              "98: setbit",
              "99: concat",
              "100: bytec 6",
              "101: swap",
              "102: concat",
              "103: log",
              "104: intc_1",
              "105: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 16 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "60: main_writeGlobalState_route@7:",
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "70: txna ApplicationArgs 1",
              "71: extract 2 0",
              "72: txna ApplicationArgs 2",
              "73: intc_0",
              "74: getbit",
              "75: txna ApplicationArgs 3",
              "76: btoi",
              "77: txnas Accounts",
              "80: callsub writeGlobalState"
            ],
            [
              "291: writeGlobalState:",
              "295: proto 3 0",
              "298: bytec_0",
              "301: frame_dig -3",
              "302: app_global_put",
              "305: bytec_1",
              "308: frame_dig -2",
              "309: app_global_put",
              "312: bytec_3",
              "315: frame_dig -1",
              "316: app_global_put",
              "319: intc_0",
              "322: bytec_0",
              "325: app_global_get_ex",
              "326: assert",
              "327: frame_dig -3",
              "328: ==",
              "329: assert",
              "332: intc_0",
              "335: bytec_1",
              "338: app_global_get_ex",
              "339: assert",
              "340: frame_dig -2",
              "341: ==",
              "342: assert",
              "345: intc_0",
              "348: bytec_3",
              "351: app_global_get_ex",
              "352: assert",
              "353: frame_dig -1",
              "354: ==",
              "355: assert",
              "356: retsub"
            ],
            [
              "81: intc_1",
              "82: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 12 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "163: main_bare_routing@10:",
              "166: txn OnCompletion",
              "167: bnz main_after_if_else@14"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 14 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "107: main_readGlobalState_route@5:",
              "110: txn OnCompletion",
              "111: !",
              "112: assert",
              "113: txn ApplicationID",
              "114: assert",
              "115: callsub readGlobalState"
            ],
            [
              "176: readGlobalState:",
              "180: proto 0 6",
              "183: intc_0",
              "186: bytec_3",
              "189: app_global_get_ex",
              "190: assert",
              "193: intc_0",
              "196: bytec 4",
              "199: app_global_get_ex",
              "200: assert",
              "203: intc_0",
              "206: bytec_2",
              "209: app_global_get_ex",
              "210: assert",
              "213: intc_0",
              "216: bytec 5",
              "219: app_global_get_ex",
              "220: assert",
              "223: intc_0",
              "226: bytec_0",
              "229: app_global_get_ex",
              "230: assert",
              "233: intc_0",
              "236: bytec_1",
              "239: app_global_get_ex",
              "240: assert",
              "250: uncover 5",
              "251: retsub"
            ],
            [
              "116: uncover 5",
              "117: itob",
              "118: uncover 5",
              "119: itob",
              "120: dig 5",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: uncover 6",
              "125: concat",
              "126: dig 5",
              "127: len",
              "128: itob",
              "129: extract 6 2",
              "130: uncover 6",
              "131: concat",
              "132: pushbytes 0x00",
              "133: intc_0",
              "134: uncover 7",
              "135: setbit",
              "136: uncover 4",
              "137: uncover 4",
              "138: concat",
              "139: pushbytes 0x0035",
              "140: concat",
              "141: dig 3",
              "142: len",
              "143: pushint 53",
              "144: +",
              "145: itob",
              "146: extract 6 2",
              "147: concat",
              "148: swap",
              "149: concat",
              "150: uncover 3",
              "151: concat",
              "152: uncover 2",
              "153: concat",
              "154: swap",
              "155: concat",
              "156: bytec 6",
              "157: swap",
              "158: concat",
              "159: log",
              "160: intc_1",
              "161: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 15 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "84: main_hasGlobalState_route@6:",
              "87: txn OnCompletion",
              "88: !",
              "89: assert",
              "90: txn ApplicationID",
              "91: assert",
              "92: callsub hasGlobalState"
            ],
            [
              "255: hasGlobalState:",
              "259: proto 0 2",
              "262: intc_0",
              "265: bytec_2",
              "268: app_global_get_ex",
              "269: bury 1",
              "272: intc_0",
              "275: bytec_2",
              "278: app_global_get_ex",
              "279: assert",
              "282: dig 1",
              "283: assert",
              "286: swap",
              "287: retsub"
            ],
            [
              "93: swap",
              "94: itob",
              "95: pushbytes 0x00",
              "96: intc_0",
              "97: uncover 3",
              "98: setbit",
              "99: concat",
              "100: bytec 6",
              "101: swap",
              "102: concat",
              "103: log",
              "104: intc_1",
              "105: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 16 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "60: main_writeGlobalState_route@7:",
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "70: txna ApplicationArgs 1",
              "71: extract 2 0",
              "72: txna ApplicationArgs 2",
              "73: intc_0",
              "74: getbit",
              "75: txna ApplicationArgs 3",
              "76: btoi",
              "77: txnas Accounts",
              "80: callsub writeGlobalState"
            ],
            [
              "291: writeGlobalState:",
              "295: proto 3 0",
              "298: bytec_0",
              "301: frame_dig -3",
              "302: app_global_put",
              "305: bytec_1",
              "308: frame_dig -2",
              "309: app_global_put",
              "312: bytec_3",
              "315: frame_dig -1",
              "316: app_global_put",
              "319: intc_0",
              "322: bytec_0",
              "325: app_global_get_ex",
              "326: assert",
              "327: frame_dig -3",
              "328: ==",
              "329: assert",
              "332: intc_0",
              "335: bytec_1",
              "338: app_global_get_ex",
              "339: assert",
              "340: frame_dig -2",
              "341: ==",
              "342: assert",
              "345: intc_0",
              "348: bytec_3",
              "351: app_global_get_ex",
              "352: assert",
              "353: frame_dig -1",
              "354: ==",
              "355: assert",
              "356: retsub"
            ],
            [
              "81: intc_1",
              "82: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 12 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "163: main_bare_routing@10:",
              "166: txn OnCompletion",
              "167: bnz main_after_if_else@14"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 14 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "107: main_readGlobalState_route@5:",
              "110: txn OnCompletion",
              "111: !",
              "112: assert",
              "113: txn ApplicationID",
              "114: assert",
              "115: callsub readGlobalState"
            ],
            [
              "176: readGlobalState:",
              "180: proto 0 6",
              "183: intc_0",
              "186: bytec_3",
              "189: app_global_get_ex",
              "190: assert",
              "193: intc_0",
              "196: bytec 4",
              "199: app_global_get_ex",
              "200: assert",
              "203: intc_0",
              "206: bytec_2",
              "209: app_global_get_ex",
              "210: assert",
              "213: intc_0",
              "216: bytec 5",
              "219: app_global_get_ex",
              "220: assert",
              "223: intc_0",
              "226: bytec_0",
              "229: app_global_get_ex",
              "230: assert",
              "233: intc_0",
              "236: bytec_1",
              "239: app_global_get_ex",
              "240: assert",
              "250: uncover 5",
              "251: retsub"
            ],
            [
              "116: uncover 5",
              "117: itob",
              "118: uncover 5",
              "119: itob",
              "120: dig 5",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: uncover 6",
              "125: concat",
              "126: dig 5",
              "127: len",
              "128: itob",
              "129: extract 6 2",
              "130: uncover 6",
              "131: concat",
              "132: pushbytes 0x00",
              "133: intc_0",
              "134: uncover 7",
              "135: setbit",
              "136: uncover 4",
              "137: uncover 4",
              "138: concat",
              "139: pushbytes 0x0035",
              "140: concat",
              "141: dig 3",
              "142: len",
              "143: pushint 53",
              "144: +",
              "145: itob",
              "146: extract 6 2",
              "147: concat",
              "148: swap",
              "149: concat",
              "150: uncover 3",
              "151: concat",
              "152: uncover 2",
              "153: concat",
              "154: swap",
              "155: concat",
              "156: bytec 6",
              "157: swap",
              "158: concat",
              "159: log",
              "160: intc_1",
              "161: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 15 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "84: main_hasGlobalState_route@6:",
              "87: txn OnCompletion",
              "88: !",
              "89: assert",
              "90: txn ApplicationID",
              "91: assert",
              "92: callsub hasGlobalState"
            ],
            [
              "255: hasGlobalState:",
              "259: proto 0 2",
              "262: intc_0",
              "265: bytec_2",
              "268: app_global_get_ex",
              "269: bury 1",
              "272: intc_0",
              "275: bytec_2",
              "278: app_global_get_ex",
              "279: assert",
              "282: dig 1",
              "283: assert",
              "286: swap",
              "287: retsub"
            ],
            [
              "93: swap",
              "94: itob",
              "95: pushbytes 0x00",
              "96: intc_0",
              "97: uncover 3",
              "98: setbit",
              "99: concat",
              "100: bytec 6",
              "101: swap",
              "102: concat",
              "103: log",
              "104: intc_1",
              "105: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 16 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "60: main_writeGlobalState_route@7:",
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "70: txna ApplicationArgs 1",
              "71: extract 2 0",
              "72: txna ApplicationArgs 2",
              "73: intc_0",
              "74: getbit",
              "75: txna ApplicationArgs 3",
              "76: btoi",
              "77: txnas Accounts",
              "80: callsub writeGlobalState"
            ],
            [
              "291: writeGlobalState:",
              "295: proto 3 0",
              "298: bytec_0",
              "301: frame_dig -3",
              "302: app_global_put",
              "305: bytec_1",
              "308: frame_dig -2",
              "309: app_global_put",
              "312: bytec_3",
              "315: frame_dig -1",
              "316: app_global_put",
              "319: intc_0",
              "322: bytec_0",
              "325: app_global_get_ex",
              "326: assert",
              "327: frame_dig -3",
              "328: ==",
              "329: assert",
              "332: intc_0",
              "335: bytec_1",
              "338: app_global_get_ex",
              "339: assert",
              "340: frame_dig -2",
              "341: ==",
              "342: assert",
              "345: intc_0",
              "348: bytec_3",
              "351: app_global_get_ex",
              "352: assert",
              "353: frame_dig -1",
              "354: ==",
              "355: assert",
              "356: retsub"
            ],
            [
              "81: intc_1",
              "82: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 12 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "163: main_bare_routing@10:",
              "166: txn OnCompletion",
              "167: bnz main_after_if_else@14"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 12,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec 4",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 5",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_2",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec_3",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 10 -> 14 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec 4",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 5",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_2",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec_3",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "107: main_readGlobalState_route@5:",
              "110: txn OnCompletion",
              "111: !",
              "112: assert",
              "113: txn ApplicationID",
              "114: assert",
              "115: callsub readGlobalState"
            ],
            [
              "176: readGlobalState:",
              "180: proto 0 6",
              "183: intc_0",
              "186: bytec_3",
              "189: app_global_get_ex",
              "190: assert",
              "193: intc_0",
              "196: bytec 4",
              "199: app_global_get_ex",
              "200: assert",
              "203: intc_0",
              "206: bytec_2",
              "209: app_global_get_ex",
              "210: assert",
              "213: intc_0",
              "216: bytec 5",
              "219: app_global_get_ex",
              "220: assert",
              "223: intc_0",
              "226: bytec_0",
              "229: app_global_get_ex",
              "230: assert",
              "233: intc_0",
              "236: bytec_1",
              "239: app_global_get_ex",
              "240: assert",
              "250: uncover 5",
              "251: retsub"
            ],
            [
              "116: uncover 5",
              "117: itob",
              "118: uncover 5",
              "119: itob",
              "120: dig 5",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: uncover 6",
              "125: concat",
              "126: dig 5",
              "127: len",
              "128: itob",
              "129: extract 6 2",
              "130: uncover 6",
              "131: concat",
              "132: pushbytes 0x00",
              "133: intc_0",
              "134: uncover 7",
              "135: setbit",
              "136: uncover 4",
              "137: uncover 4",
              "138: concat",
              "139: pushbytes 0x0035",
              "140: concat",
              "141: dig 3",
              "142: len",
              "143: pushint 53",
              "144: +",
              "145: itob",
              "146: extract 6 2",
              "147: concat",
              "148: swap",
              "149: concat",
              "150: uncover 3",
              "151: concat",
              "152: uncover 2",
              "153: concat",
              "154: swap",
              "155: concat",
              "156: bytec 6",
              "157: swap",
              "158: concat",
              "159: log",
              "160: intc_1",
              "161: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8 -> 15 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec 4",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 5",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_2",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec_3",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "84: main_hasGlobalState_route@6:",
              "87: txn OnCompletion",
              "88: !",
              "89: assert",
              "90: txn ApplicationID",
              "91: assert",
              "92: callsub hasGlobalState"
            ],
            [
              "255: hasGlobalState:",
              "259: proto 0 2",
              "262: intc_0",
              "265: bytec_2",
              "268: app_global_get_ex",
              "269: bury 1",
              "272: intc_0",
              "275: bytec_2",
              "278: app_global_get_ex",
              "279: assert",
              "282: dig 1",
              "283: assert",
              "286: swap",
              "287: retsub"
            ],
            [
              "93: swap",
              "94: itob",
              "95: pushbytes 0x00",
              "96: intc_0",
              "97: uncover 3",
              "98: setbit",
              "99: concat",
              "100: bytec 6",
              "101: swap",
              "102: concat",
              "103: log",
              "104: intc_1",
              "105: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 6 -> 16 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec 4",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 5",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_2",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec_3",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "60: main_writeGlobalState_route@7:",
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "70: txna ApplicationArgs 1",
              "71: extract 2 0",
              "72: txna ApplicationArgs 2",
              "73: intc_0",
              "74: getbit",
              "75: txna ApplicationArgs 3",
              "76: btoi",
              "77: txnas Accounts",
              "80: callsub writeGlobalState"
            ],
            [
              "291: writeGlobalState:",
              "295: proto 3 0",
              "298: bytec_0",
              "301: frame_dig -3",
              "302: app_global_put",
              "305: bytec_1",
              "308: frame_dig -2",
              "309: app_global_put",
              "312: bytec_3",
              "315: frame_dig -1",
              "316: app_global_put",
              "319: intc_0",
              "322: bytec_0",
              "325: app_global_get_ex",
              "326: assert",
              "327: frame_dig -3",
              "328: ==",
              "329: assert",
              "332: intc_0",
              "335: bytec_1",
              "338: app_global_get_ex",
              "339: assert",
              "340: frame_dig -2",
              "341: ==",
              "342: assert",
              "345: intc_0",
              "348: bytec_3",
              "351: app_global_get_ex",
              "352: assert",
              "353: frame_dig -1",
              "354: ==",
              "355: assert",
              "356: retsub"
            ],
            [
              "81: intc_1",
              "82: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 12 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec 4",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 5",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_2",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec_3",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "163: main_bare_routing@10:",
              "166: txn OnCompletion",
              "167: bnz main_after_if_else@14"
            ],
            [
              "168: txn ApplicationID",
              "169: !",
              "170: assert",
              "171: intc_1",
              "172: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 12 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec 4",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 5",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_2",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec_3",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "163: main_bare_routing@10:",
              "166: txn OnCompletion",
              "167: bnz main_after_if_else@14"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 14 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "107: main_readGlobalState_route@5:",
              "110: txn OnCompletion",
              "111: !",
              "112: assert",
              "113: txn ApplicationID",
              "114: assert",
              "115: callsub readGlobalState"
            ],
            [
              "176: readGlobalState:",
              "180: proto 0 6",
              "183: intc_0",
              "186: bytec_3",
              "189: app_global_get_ex",
              "190: assert",
              "193: intc_0",
              "196: bytec 4",
              "199: app_global_get_ex",
              "200: assert",
              "203: intc_0",
              "206: bytec_2",
              "209: app_global_get_ex",
              "210: assert",
              "213: intc_0",
              "216: bytec 5",
              "219: app_global_get_ex",
              "220: assert",
              "223: intc_0",
              "226: bytec_0",
              "229: app_global_get_ex",
              "230: assert",
              "233: intc_0",
              "236: bytec_1",
              "239: app_global_get_ex",
              "240: assert",
              "250: uncover 5",
              "251: retsub"
            ],
            [
              "116: uncover 5",
              "117: itob",
              "118: uncover 5",
              "119: itob",
              "120: dig 5",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: uncover 6",
              "125: concat",
              "126: dig 5",
              "127: len",
              "128: itob",
              "129: extract 6 2",
              "130: uncover 6",
              "131: concat",
              "132: pushbytes 0x00",
              "133: intc_0",
              "134: uncover 7",
              "135: setbit",
              "136: uncover 4",
              "137: uncover 4",
              "138: concat",
              "139: pushbytes 0x0035",
              "140: concat",
              "141: dig 3",
              "142: len",
              "143: pushint 53",
              "144: +",
              "145: itob",
              "146: extract 6 2",
              "147: concat",
              "148: swap",
              "149: concat",
              "150: uncover 3",
              "151: concat",
              "152: uncover 2",
              "153: concat",
              "154: swap",
              "155: concat",
              "156: bytec 6",
              "157: swap",
              "158: concat",
              "159: log",
              "160: intc_1",
              "161: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 15 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "84: main_hasGlobalState_route@6:",
              "87: txn OnCompletion",
              "88: !",
              "89: assert",
              "90: txn ApplicationID",
              "91: assert",
              "92: callsub hasGlobalState"
            ],
            [
              "255: hasGlobalState:",
              "259: proto 0 2",
              "262: intc_0",
              "265: bytec_2",
              "268: app_global_get_ex",
              "269: bury 1",
              "272: intc_0",
              "275: bytec_2",
              "278: app_global_get_ex",
              "279: assert",
              "282: dig 1",
              "283: assert",
              "286: swap",
              "287: retsub"
            ],
            [
              "93: swap",
              "94: itob",
              "95: pushbytes 0x00",
              "96: intc_0",
              "97: uncover 3",
              "98: setbit",
              "99: concat",
              "100: bytec 6",
              "101: swap",
              "102: concat",
              "103: log",
              "104: intc_1",
              "105: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 16 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "60: main_writeGlobalState_route@7:",
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "70: txna ApplicationArgs 1",
              "71: extract 2 0",
              "72: txna ApplicationArgs 2",
              "73: intc_0",
              "74: getbit",
              "75: txna ApplicationArgs 3",
              "76: btoi",
              "77: txnas Accounts",
              "80: callsub writeGlobalState"
            ],
            [
              "291: writeGlobalState:",
              "295: proto 3 0",
              "298: bytec_0",
              "301: frame_dig -3",
              "302: app_global_put",
              "305: bytec_1",
              "308: frame_dig -2",
              "309: app_global_put",
              "312: bytec_3",
              "315: frame_dig -1",
              "316: app_global_put",
              "319: intc_0",
              "322: bytec_0",
              "325: app_global_get_ex",
              "326: assert",
              "327: frame_dig -3",
              "328: ==",
              "329: assert",
              "332: intc_0",
              "335: bytec_1",
              "338: app_global_get_ex",
              "339: assert",
              "340: frame_dig -2",
              "341: ==",
              "342: assert",
              "345: intc_0",
              "348: bytec_3",
              "351: app_global_get_ex",
              "352: assert",
              "353: frame_dig -1",
              "354: ==",
              "355: assert",
              "356: retsub"
            ],
            [
              "81: intc_1",
              "82: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 12 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "163: main_bare_routing@10:",
              "166: txn OnCompletion",
              "167: bnz main_after_if_else@14"
            ],
            [
              "168: txn ApplicationID",
              "169: !",
              "170: assert",
              "171: intc_1",
              "172: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 12 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "163: main_bare_routing@10:",
              "166: txn OnCompletion",
              "167: bnz main_after_if_else@14"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 12,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec 4",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 5",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_2",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec_3",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 10 -> 14 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec 4",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 5",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_2",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec_3",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "107: main_readGlobalState_route@5:",
              "110: txn OnCompletion",
              "111: !",
              "112: assert",
              "113: txn ApplicationID",
              "114: assert",
              "115: callsub readGlobalState"
            ],
            [
              "176: readGlobalState:",
              "180: proto 0 6",
              "183: intc_0",
              "186: bytec_3",
              "189: app_global_get_ex",
              "190: assert",
              "193: intc_0",
              "196: bytec 4",
              "199: app_global_get_ex",
              "200: assert",
              "203: intc_0",
              "206: bytec_2",
              "209: app_global_get_ex",
              "210: assert",
              "213: intc_0",
              "216: bytec 5",
              "219: app_global_get_ex",
              "220: assert",
              "223: intc_0",
              "226: bytec_0",
              "229: app_global_get_ex",
              "230: assert",
              "233: intc_0",
              "236: bytec_1",
              "239: app_global_get_ex",
              "240: assert",
              "250: uncover 5",
              "251: retsub"
            ],
            [
              "116: uncover 5",
              "117: itob",
              "118: uncover 5",
              "119: itob",
              "120: dig 5",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: uncover 6",
              "125: concat",
              "126: dig 5",
              "127: len",
              "128: itob",
              "129: extract 6 2",
              "130: uncover 6",
              "131: concat",
              "132: pushbytes 0x00",
              "133: intc_0",
              "134: uncover 7",
              "135: setbit",
              "136: uncover 4",
              "137: uncover 4",
              "138: concat",
              "139: pushbytes 0x0035",
              "140: concat",
              "141: dig 3",
              "142: len",
              "143: pushint 53",
              "144: +",
              "145: itob",
              "146: extract 6 2",
              "147: concat",
              "148: swap",
              "149: concat",
              "150: uncover 3",
              "151: concat",
              "152: uncover 2",
              "153: concat",
              "154: swap",
              "155: concat",
              "156: bytec 6",
              "157: swap",
              "158: concat",
              "159: log",
              "160: intc_1",
              "161: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8 -> 15 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec 4",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 5",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_2",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec_3",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "84: main_hasGlobalState_route@6:",
              "87: txn OnCompletion",
              "88: !",
              "89: assert",
              "90: txn ApplicationID",
              "91: assert",
              "92: callsub hasGlobalState"
            ],
            [
              "255: hasGlobalState:",
              "259: proto 0 2",
              "262: intc_0",
              "265: bytec_2",
              "268: app_global_get_ex",
              "269: bury 1",
              "272: intc_0",
              "275: bytec_2",
              "278: app_global_get_ex",
              "279: assert",
              "282: dig 1",
              "283: assert",
              "286: swap",
              "287: retsub"
            ],
            [
              "93: swap",
              "94: itob",
              "95: pushbytes 0x00",
              "96: intc_0",
              "97: uncover 3",
              "98: setbit",
              "99: concat",
              "100: bytec 6",
              "101: swap",
              "102: concat",
              "103: log",
              "104: intc_1",
              "105: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 6 -> 16 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec 4",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 5",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_2",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec_3",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "60: main_writeGlobalState_route@7:",
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "70: txna ApplicationArgs 1",
              "71: extract 2 0",
              "72: txna ApplicationArgs 2",
              "73: intc_0",
              "74: getbit",
              "75: txna ApplicationArgs 3",
              "76: btoi",
              "77: txnas Accounts",
              "80: callsub writeGlobalState"
            ],
            [
              "291: writeGlobalState:",
              "295: proto 3 0",
              "298: bytec_0",
              "301: frame_dig -3",
              "302: app_global_put",
              "305: bytec_1",
              "308: frame_dig -2",
              "309: app_global_put",
              "312: bytec_3",
              "315: frame_dig -1",
              "316: app_global_put",
              "319: intc_0",
              "322: bytec_0",
              "325: app_global_get_ex",
              "326: assert",
              "327: frame_dig -3",
              "328: ==",
              "329: assert",
              "332: intc_0",
              "335: bytec_1",
              "338: app_global_get_ex",
              "339: assert",
              "340: frame_dig -2",
              "341: ==",
              "342: assert",
              "345: intc_0",
              "348: bytec_3",
              "351: app_global_get_ex",
              "352: assert",
              "353: frame_dig -1",
              "354: ==",
              "355: assert",
              "356: retsub"
            ],
            [
              "81: intc_1",
              "82: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 12 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec 4",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 5",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_2",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec_3",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "163: main_bare_routing@10:",
              "166: txn OnCompletion",
              "167: bnz main_after_if_else@14"
            ],
            [
              "168: txn ApplicationID",
              "169: !",
              "170: assert",
              "171: intc_1",
              "172: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 12 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec 4",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 5",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_2",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec_3",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "163: main_bare_routing@10:",
              "166: txn OnCompletion",
              "167: bnz main_after_if_else@14"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 14 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "107: main_readGlobalState_route@5:",
              "110: txn OnCompletion",
              "111: !",
              "112: assert",
              "113: txn ApplicationID",
              "114: assert",
              "115: callsub readGlobalState"
            ],
            [
              "176: readGlobalState:",
              "180: proto 0 6",
              "183: intc_0",
              "186: bytec_3",
              "189: app_global_get_ex",
              "190: assert",
              "193: intc_0",
              "196: bytec 4",
              "199: app_global_get_ex",
              "200: assert",
              "203: intc_0",
              "206: bytec_2",
              "209: app_global_get_ex",
              "210: assert",
              "213: intc_0",
              "216: bytec 5",
              "219: app_global_get_ex",
              "220: assert",
              "223: intc_0",
              "226: bytec_0",
              "229: app_global_get_ex",
              "230: assert",
              "233: intc_0",
              "236: bytec_1",
              "239: app_global_get_ex",
              "240: assert",
              "250: uncover 5",
              "251: retsub"
            ],
            [
              "116: uncover 5",
              "117: itob",
              "118: uncover 5",
              "119: itob",
              "120: dig 5",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: uncover 6",
              "125: concat",
              "126: dig 5",
              "127: len",
              "128: itob",
              "129: extract 6 2",
              "130: uncover 6",
              "131: concat",
              "132: pushbytes 0x00",
              "133: intc_0",
              "134: uncover 7",
              "135: setbit",
              "136: uncover 4",
              "137: uncover 4",
              "138: concat",
              "139: pushbytes 0x0035",
              "140: concat",
              "141: dig 3",
              "142: len",
              "143: pushint 53",
              "144: +",
              "145: itob",
              "146: extract 6 2",
              "147: concat",
              "148: swap",
              "149: concat",
              "150: uncover 3",
              "151: concat",
              "152: uncover 2",
              "153: concat",
              "154: swap",
              "155: concat",
              "156: bytec 6",
              "157: swap",
              "158: concat",
              "159: log",
              "160: intc_1",
              "161: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 15 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "84: main_hasGlobalState_route@6:",
              "87: txn OnCompletion",
              "88: !",
              "89: assert",
              "90: txn ApplicationID",
              "91: assert",
              "92: callsub hasGlobalState"
            ],
            [
              "255: hasGlobalState:",
              "259: proto 0 2",
              "262: intc_0",
              "265: bytec_2",
              "268: app_global_get_ex",
              "269: bury 1",
              "272: intc_0",
              "275: bytec_2",
              "278: app_global_get_ex",
              "279: assert",
              "282: dig 1",
              "283: assert",
              "286: swap",
              "287: retsub"
            ],
            [
              "93: swap",
              "94: itob",
              "95: pushbytes 0x00",
              "96: intc_0",
              "97: uncover 3",
              "98: setbit",
              "99: concat",
              "100: bytec 6",
              "101: swap",
              "102: concat",
              "103: log",
              "104: intc_1",
              "105: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 16 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "50: pushbytess 0xd38f6072 0x47b45cd1 0xf7a04ede",
              "51: txna ApplicationArgs 0",
              "52: match main_readGlobalState_route@5 main_hasGlobalState_route@6 main_writeGlobalState_route@7"
            ],
            [
              "60: main_writeGlobalState_route@7:",
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "70: txna ApplicationArgs 1",
              "71: extract 2 0",
              "72: txna ApplicationArgs 2",
              "73: intc_0",
              "74: getbit",
              "75: txna ApplicationArgs 3",
              "76: btoi",
              "77: txnas Accounts",
              "80: callsub writeGlobalState"
            ],
            [
              "291: writeGlobalState:",
              "295: proto 3 0",
              "298: bytec_0",
              "301: frame_dig -3",
              "302: app_global_put",
              "305: bytec_1",
              "308: frame_dig -2",
              "309: app_global_put",
              "312: bytec_3",
              "315: frame_dig -1",
              "316: app_global_put",
              "319: intc_0",
              "322: bytec_0",
              "325: app_global_get_ex",
              "326: assert",
              "327: frame_dig -3",
              "328: ==",
              "329: assert",
              "332: intc_0",
              "335: bytec_1",
              "338: app_global_get_ex",
              "339: assert",
              "340: frame_dig -2",
              "341: ==",
              "342: assert",
              "345: intc_0",
              "348: bytec_3",
              "351: app_global_get_ex",
              "352: assert",
              "353: frame_dig -1",
              "354: ==",
              "355: assert",
              "356: retsub"
            ],
            [
              "81: intc_1",
              "82: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 12 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "163: main_bare_routing@10:",
              "166: txn OnCompletion",
              "167: bnz main_after_if_else@14"
            ],
            [
              "168: txn ApplicationID",
              "169: !",
              "170: assert",
              "171: intc_1",
              "172: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 12 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalIntNoDefault\" \"globalAccount\" \"globalInt\" \"globalBytes\" 0x151f7c75",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "48: txn NumAppArgs",
              "49: bz main_bare_routing@10"
            ],
            [
              "163: main_bare_routing@10:",
              "166: txn OnCompletion",
              "167: bnz main_after_if_else@14"
            ],
            [
              "54: main_after_if_else@14:",
              "57: intc_0",
              "58: return"
            ]
          ]
        }
      ]
    }
  ]
}