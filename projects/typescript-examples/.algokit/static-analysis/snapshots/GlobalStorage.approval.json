{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "74: readGlobalState:",
              "77: intc_0",
              "80: bytec 4",
              "83: app_global_get_ex",
              "84: assert",
              "87: intc_0",
              "90: bytec_2",
              "93: app_global_get_ex",
              "94: assert",
              "97: intc_0",
              "100: bytec_3",
              "103: app_global_get_ex",
              "104: assert",
              "107: intc_0",
              "110: bytec 6",
              "113: app_global_get_ex",
              "114: assert",
              "117: intc_0",
              "120: bytec_0",
              "123: app_global_get_ex",
              "124: assert",
              "127: intc_0",
              "130: bytec_1",
              "133: app_global_get_ex",
              "134: assert",
              "144: uncover 4",
              "145: itob",
              "146: uncover 4",
              "147: itob",
              "148: concat",
              "149: dig 3",
              "150: len",
              "151: itob",
              "152: extract 6 2",
              "153: uncover 4",
              "154: concat",
              "155: swap",
              "156: pushbytes 0x0035",
              "157: concat",
              "158: dig 1",
              "159: len",
              "160: pushint 53",
              "161: +",
              "162: dig 4",
              "163: len",
              "164: itob",
              "165: extract 6 2",
              "166: uncover 5",
              "167: concat",
              "168: swap",
              "169: itob",
              "170: extract 6 2",
              "171: uncover 2",
              "172: swap",
              "173: concat",
              "174: pushbytes 0x00",
              "175: intc_0",
              "176: uncover 5",
              "177: setbit",
              "178: concat",
              "179: uncover 3",
              "180: concat",
              "181: uncover 2",
              "182: concat",
              "183: swap",
              "184: concat",
              "187: bytec 5",
              "188: swap",
              "189: concat",
              "190: log",
              "191: intc_1",
              "192: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "196: hasGlobalState:",
              "199: intc_0",
              "202: bytec_3",
              "205: app_global_get_ex",
              "208: dup",
              "209: assert",
              "212: swap",
              "213: itob",
              "214: pushbytes 0x00",
              "215: intc_0",
              "216: uncover 3",
              "217: setbit",
              "218: concat",
              "221: bytec 5",
              "222: swap",
              "223: concat",
              "224: log",
              "225: intc_1",
              "226: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "230: writeGlobalState:",
              "233: txna ApplicationArgs 1",
              "234: extract 2 0",
              "235: txna ApplicationArgs 2",
              "236: intc_0",
              "237: getbit",
              "238: txna ApplicationArgs 3",
              "241: bytec_0",
              "244: dig 3",
              "245: app_global_put",
              "248: bytec_1",
              "251: dig 2",
              "252: app_global_put",
              "255: bytec 4",
              "258: swap",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec_0",
              "268: app_global_get_ex",
              "269: assert",
              "270: uncover 2",
              "271: ==",
              "272: assert",
              "275: intc_0",
              "278: bytec_1",
              "281: app_global_get_ex",
              "282: assert",
              "283: ==",
              "286: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "290: writeDynamicGlobalState:",
              "293: txna ApplicationArgs 1",
              "294: extract 2 0",
              "295: txna ApplicationArgs 2",
              "296: extract 2 0",
              "299: swap",
              "300: dig 1",
              "301: app_global_put",
              "304: dup",
              "305: len",
              "306: itob",
              "307: extract 6 2",
              "308: swap",
              "309: concat",
              "310: bytec 5",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_1",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "319: deleteGlobalState:",
              "322: bytec_2",
              "325: app_global_del",
              "328: pushbytes 0x151f7c7580",
              "329: log",
              "330: intc_1",
              "331: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "74: readGlobalState:",
              "77: intc_0",
              "80: bytec 4",
              "83: app_global_get_ex",
              "84: assert",
              "87: intc_0",
              "90: bytec_2",
              "93: app_global_get_ex",
              "94: assert",
              "97: intc_0",
              "100: bytec_3",
              "103: app_global_get_ex",
              "104: assert",
              "107: intc_0",
              "110: bytec 6",
              "113: app_global_get_ex",
              "114: assert",
              "117: intc_0",
              "120: bytec_0",
              "123: app_global_get_ex",
              "124: assert",
              "127: intc_0",
              "130: bytec_1",
              "133: app_global_get_ex",
              "134: assert",
              "144: uncover 4",
              "145: itob",
              "146: uncover 4",
              "147: itob",
              "148: concat",
              "149: dig 3",
              "150: len",
              "151: itob",
              "152: extract 6 2",
              "153: uncover 4",
              "154: concat",
              "155: swap",
              "156: pushbytes 0x0035",
              "157: concat",
              "158: dig 1",
              "159: len",
              "160: pushint 53",
              "161: +",
              "162: dig 4",
              "163: len",
              "164: itob",
              "165: extract 6 2",
              "166: uncover 5",
              "167: concat",
              "168: swap",
              "169: itob",
              "170: extract 6 2",
              "171: uncover 2",
              "172: swap",
              "173: concat",
              "174: pushbytes 0x00",
              "175: intc_0",
              "176: uncover 5",
              "177: setbit",
              "178: concat",
              "179: uncover 3",
              "180: concat",
              "181: uncover 2",
              "182: concat",
              "183: swap",
              "184: concat",
              "187: bytec 5",
              "188: swap",
              "189: concat",
              "190: log",
              "191: intc_1",
              "192: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "196: hasGlobalState:",
              "199: intc_0",
              "202: bytec_3",
              "205: app_global_get_ex",
              "208: dup",
              "209: assert",
              "212: swap",
              "213: itob",
              "214: pushbytes 0x00",
              "215: intc_0",
              "216: uncover 3",
              "217: setbit",
              "218: concat",
              "221: bytec 5",
              "222: swap",
              "223: concat",
              "224: log",
              "225: intc_1",
              "226: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "230: writeGlobalState:",
              "233: txna ApplicationArgs 1",
              "234: extract 2 0",
              "235: txna ApplicationArgs 2",
              "236: intc_0",
              "237: getbit",
              "238: txna ApplicationArgs 3",
              "241: bytec_0",
              "244: dig 3",
              "245: app_global_put",
              "248: bytec_1",
              "251: dig 2",
              "252: app_global_put",
              "255: bytec 4",
              "258: swap",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec_0",
              "268: app_global_get_ex",
              "269: assert",
              "270: uncover 2",
              "271: ==",
              "272: assert",
              "275: intc_0",
              "278: bytec_1",
              "281: app_global_get_ex",
              "282: assert",
              "283: ==",
              "286: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "290: writeDynamicGlobalState:",
              "293: txna ApplicationArgs 1",
              "294: extract 2 0",
              "295: txna ApplicationArgs 2",
              "296: extract 2 0",
              "299: swap",
              "300: dig 1",
              "301: app_global_put",
              "304: dup",
              "305: len",
              "306: itob",
              "307: extract 6 2",
              "308: swap",
              "309: concat",
              "310: bytec 5",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_1",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "319: deleteGlobalState:",
              "322: bytec_2",
              "325: app_global_del",
              "328: pushbytes 0x151f7c7580",
              "329: log",
              "330: intc_1",
              "331: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "74: readGlobalState:",
              "77: intc_0",
              "80: bytec 4",
              "83: app_global_get_ex",
              "84: assert",
              "87: intc_0",
              "90: bytec_2",
              "93: app_global_get_ex",
              "94: assert",
              "97: intc_0",
              "100: bytec_3",
              "103: app_global_get_ex",
              "104: assert",
              "107: intc_0",
              "110: bytec 6",
              "113: app_global_get_ex",
              "114: assert",
              "117: intc_0",
              "120: bytec_0",
              "123: app_global_get_ex",
              "124: assert",
              "127: intc_0",
              "130: bytec_1",
              "133: app_global_get_ex",
              "134: assert",
              "144: uncover 4",
              "145: itob",
              "146: uncover 4",
              "147: itob",
              "148: concat",
              "149: dig 3",
              "150: len",
              "151: itob",
              "152: extract 6 2",
              "153: uncover 4",
              "154: concat",
              "155: swap",
              "156: pushbytes 0x0035",
              "157: concat",
              "158: dig 1",
              "159: len",
              "160: pushint 53",
              "161: +",
              "162: dig 4",
              "163: len",
              "164: itob",
              "165: extract 6 2",
              "166: uncover 5",
              "167: concat",
              "168: swap",
              "169: itob",
              "170: extract 6 2",
              "171: uncover 2",
              "172: swap",
              "173: concat",
              "174: pushbytes 0x00",
              "175: intc_0",
              "176: uncover 5",
              "177: setbit",
              "178: concat",
              "179: uncover 3",
              "180: concat",
              "181: uncover 2",
              "182: concat",
              "183: swap",
              "184: concat",
              "187: bytec 5",
              "188: swap",
              "189: concat",
              "190: log",
              "191: intc_1",
              "192: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "196: hasGlobalState:",
              "199: intc_0",
              "202: bytec_3",
              "205: app_global_get_ex",
              "208: dup",
              "209: assert",
              "212: swap",
              "213: itob",
              "214: pushbytes 0x00",
              "215: intc_0",
              "216: uncover 3",
              "217: setbit",
              "218: concat",
              "221: bytec 5",
              "222: swap",
              "223: concat",
              "224: log",
              "225: intc_1",
              "226: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "230: writeGlobalState:",
              "233: txna ApplicationArgs 1",
              "234: extract 2 0",
              "235: txna ApplicationArgs 2",
              "236: intc_0",
              "237: getbit",
              "238: txna ApplicationArgs 3",
              "241: bytec_0",
              "244: dig 3",
              "245: app_global_put",
              "248: bytec_1",
              "251: dig 2",
              "252: app_global_put",
              "255: bytec 4",
              "258: swap",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec_0",
              "268: app_global_get_ex",
              "269: assert",
              "270: uncover 2",
              "271: ==",
              "272: assert",
              "275: intc_0",
              "278: bytec_1",
              "281: app_global_get_ex",
              "282: assert",
              "283: ==",
              "286: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "290: writeDynamicGlobalState:",
              "293: txna ApplicationArgs 1",
              "294: extract 2 0",
              "295: txna ApplicationArgs 2",
              "296: extract 2 0",
              "299: swap",
              "300: dig 1",
              "301: app_global_put",
              "304: dup",
              "305: len",
              "306: itob",
              "307: extract 6 2",
              "308: swap",
              "309: concat",
              "310: bytec 5",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_1",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "319: deleteGlobalState:",
              "322: bytec_2",
              "325: app_global_del",
              "328: pushbytes 0x151f7c7580",
              "329: log",
              "330: intc_1",
              "331: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 5,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "74: readGlobalState:",
              "77: intc_0",
              "80: bytec 4",
              "83: app_global_get_ex",
              "84: assert",
              "87: intc_0",
              "90: bytec_2",
              "93: app_global_get_ex",
              "94: assert",
              "97: intc_0",
              "100: bytec_3",
              "103: app_global_get_ex",
              "104: assert",
              "107: intc_0",
              "110: bytec 6",
              "113: app_global_get_ex",
              "114: assert",
              "117: intc_0",
              "120: bytec_0",
              "123: app_global_get_ex",
              "124: assert",
              "127: intc_0",
              "130: bytec_1",
              "133: app_global_get_ex",
              "134: assert",
              "144: uncover 4",
              "145: itob",
              "146: uncover 4",
              "147: itob",
              "148: concat",
              "149: dig 3",
              "150: len",
              "151: itob",
              "152: extract 6 2",
              "153: uncover 4",
              "154: concat",
              "155: swap",
              "156: pushbytes 0x0035",
              "157: concat",
              "158: dig 1",
              "159: len",
              "160: pushint 53",
              "161: +",
              "162: dig 4",
              "163: len",
              "164: itob",
              "165: extract 6 2",
              "166: uncover 5",
              "167: concat",
              "168: swap",
              "169: itob",
              "170: extract 6 2",
              "171: uncover 2",
              "172: swap",
              "173: concat",
              "174: pushbytes 0x00",
              "175: intc_0",
              "176: uncover 5",
              "177: setbit",
              "178: concat",
              "179: uncover 3",
              "180: concat",
              "181: uncover 2",
              "182: concat",
              "183: swap",
              "184: concat",
              "187: bytec 5",
              "188: swap",
              "189: concat",
              "190: log",
              "191: intc_1",
              "192: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "196: hasGlobalState:",
              "199: intc_0",
              "202: bytec_3",
              "205: app_global_get_ex",
              "208: dup",
              "209: assert",
              "212: swap",
              "213: itob",
              "214: pushbytes 0x00",
              "215: intc_0",
              "216: uncover 3",
              "217: setbit",
              "218: concat",
              "221: bytec 5",
              "222: swap",
              "223: concat",
              "224: log",
              "225: intc_1",
              "226: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "230: writeGlobalState:",
              "233: txna ApplicationArgs 1",
              "234: extract 2 0",
              "235: txna ApplicationArgs 2",
              "236: intc_0",
              "237: getbit",
              "238: txna ApplicationArgs 3",
              "241: bytec_0",
              "244: dig 3",
              "245: app_global_put",
              "248: bytec_1",
              "251: dig 2",
              "252: app_global_put",
              "255: bytec 4",
              "258: swap",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec_0",
              "268: app_global_get_ex",
              "269: assert",
              "270: uncover 2",
              "271: ==",
              "272: assert",
              "275: intc_0",
              "278: bytec_1",
              "281: app_global_get_ex",
              "282: assert",
              "283: ==",
              "286: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "290: writeDynamicGlobalState:",
              "293: txna ApplicationArgs 1",
              "294: extract 2 0",
              "295: txna ApplicationArgs 2",
              "296: extract 2 0",
              "299: swap",
              "300: dig 1",
              "301: app_global_put",
              "304: dup",
              "305: len",
              "306: itob",
              "307: extract 6 2",
              "308: swap",
              "309: concat",
              "310: bytec 5",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_1",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "319: deleteGlobalState:",
              "322: bytec_2",
              "325: app_global_del",
              "328: pushbytes 0x151f7c7580",
              "329: log",
              "330: intc_1",
              "331: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 12,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "74: readGlobalState:",
              "77: intc_0",
              "80: bytec 4",
              "83: app_global_get_ex",
              "84: assert",
              "87: intc_0",
              "90: bytec_2",
              "93: app_global_get_ex",
              "94: assert",
              "97: intc_0",
              "100: bytec_3",
              "103: app_global_get_ex",
              "104: assert",
              "107: intc_0",
              "110: bytec 6",
              "113: app_global_get_ex",
              "114: assert",
              "117: intc_0",
              "120: bytec_0",
              "123: app_global_get_ex",
              "124: assert",
              "127: intc_0",
              "130: bytec_1",
              "133: app_global_get_ex",
              "134: assert",
              "144: uncover 4",
              "145: itob",
              "146: uncover 4",
              "147: itob",
              "148: concat",
              "149: dig 3",
              "150: len",
              "151: itob",
              "152: extract 6 2",
              "153: uncover 4",
              "154: concat",
              "155: swap",
              "156: pushbytes 0x0035",
              "157: concat",
              "158: dig 1",
              "159: len",
              "160: pushint 53",
              "161: +",
              "162: dig 4",
              "163: len",
              "164: itob",
              "165: extract 6 2",
              "166: uncover 5",
              "167: concat",
              "168: swap",
              "169: itob",
              "170: extract 6 2",
              "171: uncover 2",
              "172: swap",
              "173: concat",
              "174: pushbytes 0x00",
              "175: intc_0",
              "176: uncover 5",
              "177: setbit",
              "178: concat",
              "179: uncover 3",
              "180: concat",
              "181: uncover 2",
              "182: concat",
              "183: swap",
              "184: concat",
              "187: bytec 5",
              "188: swap",
              "189: concat",
              "190: log",
              "191: intc_1",
              "192: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "196: hasGlobalState:",
              "199: intc_0",
              "202: bytec_3",
              "205: app_global_get_ex",
              "208: dup",
              "209: assert",
              "212: swap",
              "213: itob",
              "214: pushbytes 0x00",
              "215: intc_0",
              "216: uncover 3",
              "217: setbit",
              "218: concat",
              "221: bytec 5",
              "222: swap",
              "223: concat",
              "224: log",
              "225: intc_1",
              "226: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "230: writeGlobalState:",
              "233: txna ApplicationArgs 1",
              "234: extract 2 0",
              "235: txna ApplicationArgs 2",
              "236: intc_0",
              "237: getbit",
              "238: txna ApplicationArgs 3",
              "241: bytec_0",
              "244: dig 3",
              "245: app_global_put",
              "248: bytec_1",
              "251: dig 2",
              "252: app_global_put",
              "255: bytec 4",
              "258: swap",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec_0",
              "268: app_global_get_ex",
              "269: assert",
              "270: uncover 2",
              "271: ==",
              "272: assert",
              "275: intc_0",
              "278: bytec_1",
              "281: app_global_get_ex",
              "282: assert",
              "283: ==",
              "286: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "290: writeDynamicGlobalState:",
              "293: txna ApplicationArgs 1",
              "294: extract 2 0",
              "295: txna ApplicationArgs 2",
              "296: extract 2 0",
              "299: swap",
              "300: dig 1",
              "301: app_global_put",
              "304: dup",
              "305: len",
              "306: itob",
              "307: extract 6 2",
              "308: swap",
              "309: concat",
              "310: bytec 5",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_1",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "319: deleteGlobalState:",
              "322: bytec_2",
              "325: app_global_del",
              "328: pushbytes 0x151f7c7580",
              "329: log",
              "330: intc_1",
              "331: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 6",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "61: main___algots__.defaultCreate@14:",
              "65: txn OnCompletion",
              "66: !",
              "67: txn ApplicationID",
              "68: !",
              "69: &&",
              "70: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "74: readGlobalState:",
              "77: intc_0",
              "80: bytec 4",
              "83: app_global_get_ex",
              "84: assert",
              "87: intc_0",
              "90: bytec_2",
              "93: app_global_get_ex",
              "94: assert",
              "97: intc_0",
              "100: bytec_3",
              "103: app_global_get_ex",
              "104: assert",
              "107: intc_0",
              "110: bytec 6",
              "113: app_global_get_ex",
              "114: assert",
              "117: intc_0",
              "120: bytec_0",
              "123: app_global_get_ex",
              "124: assert",
              "127: intc_0",
              "130: bytec_1",
              "133: app_global_get_ex",
              "134: assert",
              "144: uncover 4",
              "145: itob",
              "146: uncover 4",
              "147: itob",
              "148: concat",
              "149: dig 3",
              "150: len",
              "151: itob",
              "152: extract 6 2",
              "153: uncover 4",
              "154: concat",
              "155: swap",
              "156: pushbytes 0x0035",
              "157: concat",
              "158: dig 1",
              "159: len",
              "160: pushint 53",
              "161: +",
              "162: dig 4",
              "163: len",
              "164: itob",
              "165: extract 6 2",
              "166: uncover 5",
              "167: concat",
              "168: swap",
              "169: itob",
              "170: extract 6 2",
              "171: uncover 2",
              "172: swap",
              "173: concat",
              "174: pushbytes 0x00",
              "175: intc_0",
              "176: uncover 5",
              "177: setbit",
              "178: concat",
              "179: uncover 3",
              "180: concat",
              "181: uncover 2",
              "182: concat",
              "183: swap",
              "184: concat",
              "187: bytec 5",
              "188: swap",
              "189: concat",
              "190: log",
              "191: intc_1",
              "192: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "196: hasGlobalState:",
              "199: intc_0",
              "202: bytec_3",
              "205: app_global_get_ex",
              "208: dup",
              "209: assert",
              "212: swap",
              "213: itob",
              "214: pushbytes 0x00",
              "215: intc_0",
              "216: uncover 3",
              "217: setbit",
              "218: concat",
              "221: bytec 5",
              "222: swap",
              "223: concat",
              "224: log",
              "225: intc_1",
              "226: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "230: writeGlobalState:",
              "233: txna ApplicationArgs 1",
              "234: extract 2 0",
              "235: txna ApplicationArgs 2",
              "236: intc_0",
              "237: getbit",
              "238: txna ApplicationArgs 3",
              "241: bytec_0",
              "244: dig 3",
              "245: app_global_put",
              "248: bytec_1",
              "251: dig 2",
              "252: app_global_put",
              "255: bytec 4",
              "258: swap",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec_0",
              "268: app_global_get_ex",
              "269: assert",
              "270: uncover 2",
              "271: ==",
              "272: assert",
              "275: intc_0",
              "278: bytec_1",
              "281: app_global_get_ex",
              "282: assert",
              "283: ==",
              "286: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "290: writeDynamicGlobalState:",
              "293: txna ApplicationArgs 1",
              "294: extract 2 0",
              "295: txna ApplicationArgs 2",
              "296: extract 2 0",
              "299: swap",
              "300: dig 1",
              "301: app_global_put",
              "304: dup",
              "305: len",
              "306: itob",
              "307: extract 6 2",
              "308: swap",
              "309: concat",
              "310: bytec 5",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_1",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "319: deleteGlobalState:",
              "322: bytec_2",
              "325: app_global_del",
              "328: pushbytes 0x151f7c7580",
              "329: log",
              "330: intc_1",
              "331: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 6",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "61: main___algots__.defaultCreate@14:",
              "65: txn OnCompletion",
              "66: !",
              "67: txn ApplicationID",
              "68: !",
              "69: &&",
              "70: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 12,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "74: readGlobalState:",
              "77: intc_0",
              "80: bytec 4",
              "83: app_global_get_ex",
              "84: assert",
              "87: intc_0",
              "90: bytec_2",
              "93: app_global_get_ex",
              "94: assert",
              "97: intc_0",
              "100: bytec_3",
              "103: app_global_get_ex",
              "104: assert",
              "107: intc_0",
              "110: bytec 6",
              "113: app_global_get_ex",
              "114: assert",
              "117: intc_0",
              "120: bytec_0",
              "123: app_global_get_ex",
              "124: assert",
              "127: intc_0",
              "130: bytec_1",
              "133: app_global_get_ex",
              "134: assert",
              "144: uncover 4",
              "145: itob",
              "146: uncover 4",
              "147: itob",
              "148: concat",
              "149: dig 3",
              "150: len",
              "151: itob",
              "152: extract 6 2",
              "153: uncover 4",
              "154: concat",
              "155: swap",
              "156: pushbytes 0x0035",
              "157: concat",
              "158: dig 1",
              "159: len",
              "160: pushint 53",
              "161: +",
              "162: dig 4",
              "163: len",
              "164: itob",
              "165: extract 6 2",
              "166: uncover 5",
              "167: concat",
              "168: swap",
              "169: itob",
              "170: extract 6 2",
              "171: uncover 2",
              "172: swap",
              "173: concat",
              "174: pushbytes 0x00",
              "175: intc_0",
              "176: uncover 5",
              "177: setbit",
              "178: concat",
              "179: uncover 3",
              "180: concat",
              "181: uncover 2",
              "182: concat",
              "183: swap",
              "184: concat",
              "187: bytec 5",
              "188: swap",
              "189: concat",
              "190: log",
              "191: intc_1",
              "192: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "196: hasGlobalState:",
              "199: intc_0",
              "202: bytec_3",
              "205: app_global_get_ex",
              "208: dup",
              "209: assert",
              "212: swap",
              "213: itob",
              "214: pushbytes 0x00",
              "215: intc_0",
              "216: uncover 3",
              "217: setbit",
              "218: concat",
              "221: bytec 5",
              "222: swap",
              "223: concat",
              "224: log",
              "225: intc_1",
              "226: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "230: writeGlobalState:",
              "233: txna ApplicationArgs 1",
              "234: extract 2 0",
              "235: txna ApplicationArgs 2",
              "236: intc_0",
              "237: getbit",
              "238: txna ApplicationArgs 3",
              "241: bytec_0",
              "244: dig 3",
              "245: app_global_put",
              "248: bytec_1",
              "251: dig 2",
              "252: app_global_put",
              "255: bytec 4",
              "258: swap",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec_0",
              "268: app_global_get_ex",
              "269: assert",
              "270: uncover 2",
              "271: ==",
              "272: assert",
              "275: intc_0",
              "278: bytec_1",
              "281: app_global_get_ex",
              "282: assert",
              "283: ==",
              "286: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "290: writeDynamicGlobalState:",
              "293: txna ApplicationArgs 1",
              "294: extract 2 0",
              "295: txna ApplicationArgs 2",
              "296: extract 2 0",
              "299: swap",
              "300: dig 1",
              "301: app_global_put",
              "304: dup",
              "305: len",
              "306: itob",
              "307: extract 6 2",
              "308: swap",
              "309: concat",
              "310: bytec 5",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_1",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "319: deleteGlobalState:",
              "322: bytec_2",
              "325: app_global_del",
              "328: pushbytes 0x151f7c7580",
              "329: log",
              "330: intc_1",
              "331: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 6",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_2",
              "13: pushint 50",
              "14: app_global_put",
              "17: bytec 6",
              "18: pushbytes \"Silvio\"",
              "19: app_global_put",
              "22: bytec_0",
              "23: pushbytes \"Micali\"",
              "24: app_global_put",
              "27: bytec_1",
              "28: intc_1",
              "29: app_global_put",
              "32: bytec_3",
              "35: intc_0",
              "36: app_global_put",
              "39: bytec 4",
              "42: txn Sender",
              "43: app_global_put"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "61: main___algots__.defaultCreate@14:",
              "65: txn OnCompletion",
              "66: !",
              "67: txn ApplicationID",
              "68: !",
              "69: &&",
              "70: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "74: readGlobalState:",
              "77: intc_0",
              "80: bytec 4",
              "83: app_global_get_ex",
              "84: assert",
              "87: intc_0",
              "90: bytec_2",
              "93: app_global_get_ex",
              "94: assert",
              "97: intc_0",
              "100: bytec_3",
              "103: app_global_get_ex",
              "104: assert",
              "107: intc_0",
              "110: bytec 6",
              "113: app_global_get_ex",
              "114: assert",
              "117: intc_0",
              "120: bytec_0",
              "123: app_global_get_ex",
              "124: assert",
              "127: intc_0",
              "130: bytec_1",
              "133: app_global_get_ex",
              "134: assert",
              "144: uncover 4",
              "145: itob",
              "146: uncover 4",
              "147: itob",
              "148: concat",
              "149: dig 3",
              "150: len",
              "151: itob",
              "152: extract 6 2",
              "153: uncover 4",
              "154: concat",
              "155: swap",
              "156: pushbytes 0x0035",
              "157: concat",
              "158: dig 1",
              "159: len",
              "160: pushint 53",
              "161: +",
              "162: dig 4",
              "163: len",
              "164: itob",
              "165: extract 6 2",
              "166: uncover 5",
              "167: concat",
              "168: swap",
              "169: itob",
              "170: extract 6 2",
              "171: uncover 2",
              "172: swap",
              "173: concat",
              "174: pushbytes 0x00",
              "175: intc_0",
              "176: uncover 5",
              "177: setbit",
              "178: concat",
              "179: uncover 3",
              "180: concat",
              "181: uncover 2",
              "182: concat",
              "183: swap",
              "184: concat",
              "187: bytec 5",
              "188: swap",
              "189: concat",
              "190: log",
              "191: intc_1",
              "192: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "196: hasGlobalState:",
              "199: intc_0",
              "202: bytec_3",
              "205: app_global_get_ex",
              "208: dup",
              "209: assert",
              "212: swap",
              "213: itob",
              "214: pushbytes 0x00",
              "215: intc_0",
              "216: uncover 3",
              "217: setbit",
              "218: concat",
              "221: bytec 5",
              "222: swap",
              "223: concat",
              "224: log",
              "225: intc_1",
              "226: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "230: writeGlobalState:",
              "233: txna ApplicationArgs 1",
              "234: extract 2 0",
              "235: txna ApplicationArgs 2",
              "236: intc_0",
              "237: getbit",
              "238: txna ApplicationArgs 3",
              "241: bytec_0",
              "244: dig 3",
              "245: app_global_put",
              "248: bytec_1",
              "251: dig 2",
              "252: app_global_put",
              "255: bytec 4",
              "258: swap",
              "259: app_global_put",
              "262: intc_0",
              "265: bytec_0",
              "268: app_global_get_ex",
              "269: assert",
              "270: uncover 2",
              "271: ==",
              "272: assert",
              "275: intc_0",
              "278: bytec_1",
              "281: app_global_get_ex",
              "282: assert",
              "283: ==",
              "286: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "290: writeDynamicGlobalState:",
              "293: txna ApplicationArgs 1",
              "294: extract 2 0",
              "295: txna ApplicationArgs 2",
              "296: extract 2 0",
              "299: swap",
              "300: dig 1",
              "301: app_global_put",
              "304: dup",
              "305: len",
              "306: itob",
              "307: extract 6 2",
              "308: swap",
              "309: concat",
              "310: bytec 5",
              "311: swap",
              "312: concat",
              "313: log",
              "314: intc_1",
              "315: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "51: txn OnCompletion",
              "52: !",
              "53: assert",
              "54: txn ApplicationID",
              "55: assert",
              "56: pushbytess 0xd38f6072 0x47b45cd1 0xba7953dc 0x4a4c6bf6 0x3c7b1f00",
              "57: txna ApplicationArgs 0",
              "58: match readGlobalState hasGlobalState writeGlobalState writeDynamicGlobalState deleteGlobalState"
            ],
            [
              "319: deleteGlobalState:",
              "322: bytec_2",
              "325: app_global_del",
              "328: pushbytes 0x151f7c7580",
              "329: log",
              "330: intc_1",
              "331: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 6",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1",
              "7: bytecblock \"globalString\" \"globalBool\" \"globalInt\" \"globalIntNoDefault\" \"globalAccount\" 0x151f7c75 \"globalBytes\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "45: main_after_if_else@2:",
              "49: txn NumAppArgs",
              "50: bz main___algots__.defaultCreate@14"
            ],
            [
              "61: main___algots__.defaultCreate@14:",
              "65: txn OnCompletion",
              "66: !",
              "67: txn ApplicationID",
              "68: !",
              "69: &&",
              "70: return"
            ]
          ]
        }
      ]
    }
  ]
}