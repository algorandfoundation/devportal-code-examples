{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 9,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "137: dup",
              "138: intc_0",
              "139: +",
              "142: bytec_2",
              "145: txn Sender",
              "148: concat",
              "151: dig 1",
              "152: itob",
              "153: box_put"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7 -> 10 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "166: incrementBoxCounter_else_body@3:",
              "169: bytec_2",
              "172: txn Sender",
              "175: concat",
              "178: intc_0",
              "179: itob",
              "180: box_put",
              "183: intc_0",
              "186: b incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11 -> 12 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11 -> 14 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "222: getBoxCounter_after_if_else@3:",
              "225: intc_1",
              "228: b getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 15 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "251: dup"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 15 -> 18 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "264: getBoxCounterForAccount_after_if_else@3:",
              "267: intc_1",
              "270: b getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "274: getBoxMbr:",
              "277: intc_1",
              "280: bytec_1",
              "283: app_global_get_ex",
              "284: assert",
              "287: itob",
              "288: bytec_3",
              "289: swap",
              "290: concat",
              "291: log",
              "292: intc_0",
              "293: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "297: getBoxConfiguration:",
              "300: intc_1",
              "303: bytec_0",
              "306: app_global_get_ex",
              "307: assert",
              "308: intc_1",
              "311: bytec 4",
              "314: app_global_get_ex",
              "315: assert",
              "316: intc_1",
              "319: bytec 5",
              "322: app_global_get_ex",
              "323: assert",
              "324: intc_1",
              "327: bytec_1",
              "330: app_global_get_ex",
              "331: assert",
              "332: uncover 3",
              "333: itob",
              "334: uncover 3",
              "335: itob",
              "336: concat",
              "337: uncover 2",
              "338: itob",
              "339: concat",
              "340: swap",
              "341: itob",
              "342: concat",
              "345: bytec_3",
              "346: swap",
              "347: concat",
              "348: log",
              "349: intc_0",
              "350: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "354: updateBoxConfiguration:",
              "357: txna ApplicationArgs 1",
              "358: btoi",
              "359: txna ApplicationArgs 2",
              "360: btoi",
              "363: bytec_0",
              "366: uncover 2",
              "367: app_global_put",
              "370: bytec 4",
              "373: dig 1",
              "374: app_global_put",
              "377: intc_1",
              "380: bytec_0",
              "383: app_global_get_ex",
              "384: assert",
              "385: +",
              "388: bytec 5",
              "391: dig 1",
              "392: app_global_put",
              "395: intc_3",
              "396: *",
              "397: pushint 2500",
              "398: +",
              "401: bytec_1",
              "404: swap",
              "405: app_global_put",
              "408: intc_0",
              "409: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 9,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "137: dup",
              "138: intc_0",
              "139: +",
              "142: bytec_2",
              "145: txn Sender",
              "148: concat",
              "151: dig 1",
              "152: itob",
              "153: box_put"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7 -> 10 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "166: incrementBoxCounter_else_body@3:",
              "169: bytec_2",
              "172: txn Sender",
              "175: concat",
              "178: intc_0",
              "179: itob",
              "180: box_put",
              "183: intc_0",
              "186: b incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11 -> 12 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11 -> 14 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "222: getBoxCounter_after_if_else@3:",
              "225: intc_1",
              "228: b getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 15 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "251: dup"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 15 -> 18 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "264: getBoxCounterForAccount_after_if_else@3:",
              "267: intc_1",
              "270: b getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "274: getBoxMbr:",
              "277: intc_1",
              "280: bytec_1",
              "283: app_global_get_ex",
              "284: assert",
              "287: itob",
              "288: bytec_3",
              "289: swap",
              "290: concat",
              "291: log",
              "292: intc_0",
              "293: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "297: getBoxConfiguration:",
              "300: intc_1",
              "303: bytec_0",
              "306: app_global_get_ex",
              "307: assert",
              "308: intc_1",
              "311: bytec 4",
              "314: app_global_get_ex",
              "315: assert",
              "316: intc_1",
              "319: bytec 5",
              "322: app_global_get_ex",
              "323: assert",
              "324: intc_1",
              "327: bytec_1",
              "330: app_global_get_ex",
              "331: assert",
              "332: uncover 3",
              "333: itob",
              "334: uncover 3",
              "335: itob",
              "336: concat",
              "337: uncover 2",
              "338: itob",
              "339: concat",
              "340: swap",
              "341: itob",
              "342: concat",
              "345: bytec_3",
              "346: swap",
              "347: concat",
              "348: log",
              "349: intc_0",
              "350: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "354: updateBoxConfiguration:",
              "357: txna ApplicationArgs 1",
              "358: btoi",
              "359: txna ApplicationArgs 2",
              "360: btoi",
              "363: bytec_0",
              "366: uncover 2",
              "367: app_global_put",
              "370: bytec 4",
              "373: dig 1",
              "374: app_global_put",
              "377: intc_1",
              "380: bytec_0",
              "383: app_global_get_ex",
              "384: assert",
              "385: +",
              "388: bytec 5",
              "391: dig 1",
              "392: app_global_put",
              "395: intc_3",
              "396: *",
              "397: pushint 2500",
              "398: +",
              "401: bytec_1",
              "404: swap",
              "405: app_global_put",
              "408: intc_0",
              "409: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 9,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "137: dup",
              "138: intc_0",
              "139: +",
              "142: bytec_2",
              "145: txn Sender",
              "148: concat",
              "151: dig 1",
              "152: itob",
              "153: box_put"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7 -> 10 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "166: incrementBoxCounter_else_body@3:",
              "169: bytec_2",
              "172: txn Sender",
              "175: concat",
              "178: intc_0",
              "179: itob",
              "180: box_put",
              "183: intc_0",
              "186: b incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11 -> 12 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11 -> 14 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "222: getBoxCounter_after_if_else@3:",
              "225: intc_1",
              "228: b getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 15 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "251: dup"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 15 -> 18 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "264: getBoxCounterForAccount_after_if_else@3:",
              "267: intc_1",
              "270: b getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "274: getBoxMbr:",
              "277: intc_1",
              "280: bytec_1",
              "283: app_global_get_ex",
              "284: assert",
              "287: itob",
              "288: bytec_3",
              "289: swap",
              "290: concat",
              "291: log",
              "292: intc_0",
              "293: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "297: getBoxConfiguration:",
              "300: intc_1",
              "303: bytec_0",
              "306: app_global_get_ex",
              "307: assert",
              "308: intc_1",
              "311: bytec 4",
              "314: app_global_get_ex",
              "315: assert",
              "316: intc_1",
              "319: bytec 5",
              "322: app_global_get_ex",
              "323: assert",
              "324: intc_1",
              "327: bytec_1",
              "330: app_global_get_ex",
              "331: assert",
              "332: uncover 3",
              "333: itob",
              "334: uncover 3",
              "335: itob",
              "336: concat",
              "337: uncover 2",
              "338: itob",
              "339: concat",
              "340: swap",
              "341: itob",
              "342: concat",
              "345: bytec_3",
              "346: swap",
              "347: concat",
              "348: log",
              "349: intc_0",
              "350: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "354: updateBoxConfiguration:",
              "357: txna ApplicationArgs 1",
              "358: btoi",
              "359: txna ApplicationArgs 2",
              "360: btoi",
              "363: bytec_0",
              "366: uncover 2",
              "367: app_global_put",
              "370: bytec 4",
              "373: dig 1",
              "374: app_global_put",
              "377: intc_1",
              "380: bytec_0",
              "383: app_global_get_ex",
              "384: assert",
              "385: +",
              "388: bytec 5",
              "391: dig 1",
              "392: app_global_put",
              "395: intc_3",
              "396: *",
              "397: pushint 2500",
              "398: +",
              "401: bytec_1",
              "404: swap",
              "405: app_global_put",
              "408: intc_0",
              "409: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 9,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "137: dup",
              "138: intc_0",
              "139: +",
              "142: bytec_2",
              "145: txn Sender",
              "148: concat",
              "151: dig 1",
              "152: itob",
              "153: box_put"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7 -> 10 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "166: incrementBoxCounter_else_body@3:",
              "169: bytec_2",
              "172: txn Sender",
              "175: concat",
              "178: intc_0",
              "179: itob",
              "180: box_put",
              "183: intc_0",
              "186: b incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11 -> 12 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11 -> 14 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "222: getBoxCounter_after_if_else@3:",
              "225: intc_1",
              "228: b getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 15 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "251: dup"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 15 -> 18 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "264: getBoxCounterForAccount_after_if_else@3:",
              "267: intc_1",
              "270: b getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "274: getBoxMbr:",
              "277: intc_1",
              "280: bytec_1",
              "283: app_global_get_ex",
              "284: assert",
              "287: itob",
              "288: bytec_3",
              "289: swap",
              "290: concat",
              "291: log",
              "292: intc_0",
              "293: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "297: getBoxConfiguration:",
              "300: intc_1",
              "303: bytec_0",
              "306: app_global_get_ex",
              "307: assert",
              "308: intc_1",
              "311: bytec 4",
              "314: app_global_get_ex",
              "315: assert",
              "316: intc_1",
              "319: bytec 5",
              "322: app_global_get_ex",
              "323: assert",
              "324: intc_1",
              "327: bytec_1",
              "330: app_global_get_ex",
              "331: assert",
              "332: uncover 3",
              "333: itob",
              "334: uncover 3",
              "335: itob",
              "336: concat",
              "337: uncover 2",
              "338: itob",
              "339: concat",
              "340: swap",
              "341: itob",
              "342: concat",
              "345: bytec_3",
              "346: swap",
              "347: concat",
              "348: log",
              "349: intc_0",
              "350: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "354: updateBoxConfiguration:",
              "357: txna ApplicationArgs 1",
              "358: btoi",
              "359: txna ApplicationArgs 2",
              "360: btoi",
              "363: bytec_0",
              "366: uncover 2",
              "367: app_global_put",
              "370: bytec 4",
              "373: dig 1",
              "374: app_global_put",
              "377: intc_1",
              "380: bytec_0",
              "383: app_global_get_ex",
              "384: assert",
              "385: +",
              "388: bytec 5",
              "391: dig 1",
              "392: app_global_put",
              "395: intc_3",
              "396: *",
              "397: pushint 2500",
              "398: +",
              "401: bytec_1",
              "404: swap",
              "405: app_global_put",
              "408: intc_0",
              "409: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 20,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 7 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "137: dup",
              "138: intc_0",
              "139: +",
              "142: bytec_2",
              "145: txn Sender",
              "148: concat",
              "151: dig 1",
              "152: itob",
              "153: box_put"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 7 -> 10 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "166: incrementBoxCounter_else_body@3:",
              "169: bytec_2",
              "172: txn Sender",
              "175: concat",
              "178: intc_0",
              "179: itob",
              "180: box_put",
              "183: intc_0",
              "186: b incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 11 -> 12 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 11 -> 14 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "222: getBoxCounter_after_if_else@3:",
              "225: intc_1",
              "228: b getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 15 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "251: dup"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 15 -> 18 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "264: getBoxCounterForAccount_after_if_else@3:",
              "267: intc_1",
              "270: b getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "274: getBoxMbr:",
              "277: intc_1",
              "280: bytec_1",
              "283: app_global_get_ex",
              "284: assert",
              "287: itob",
              "288: bytec_3",
              "289: swap",
              "290: concat",
              "291: log",
              "292: intc_0",
              "293: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 20",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "297: getBoxConfiguration:",
              "300: intc_1",
              "303: bytec_0",
              "306: app_global_get_ex",
              "307: assert",
              "308: intc_1",
              "311: bytec 4",
              "314: app_global_get_ex",
              "315: assert",
              "316: intc_1",
              "319: bytec 5",
              "322: app_global_get_ex",
              "323: assert",
              "324: intc_1",
              "327: bytec_1",
              "330: app_global_get_ex",
              "331: assert",
              "332: uncover 3",
              "333: itob",
              "334: uncover 3",
              "335: itob",
              "336: concat",
              "337: uncover 2",
              "338: itob",
              "339: concat",
              "340: swap",
              "341: itob",
              "342: concat",
              "345: bytec_3",
              "346: swap",
              "347: concat",
              "348: log",
              "349: intc_0",
              "350: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "354: updateBoxConfiguration:",
              "357: txna ApplicationArgs 1",
              "358: btoi",
              "359: txna ApplicationArgs 2",
              "360: btoi",
              "363: bytec_0",
              "366: uncover 2",
              "367: app_global_put",
              "370: bytec 4",
              "373: dig 1",
              "374: app_global_put",
              "377: intc_1",
              "380: bytec_0",
              "383: app_global_get_ex",
              "384: assert",
              "385: +",
              "388: bytec 5",
              "391: dig 1",
              "392: app_global_put",
              "395: intc_3",
              "396: *",
              "397: pushint 2500",
              "398: +",
              "401: bytec_1",
              "404: swap",
              "405: app_global_put",
              "408: intc_0",
              "409: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 6",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "73: main___algots__.defaultCreate@15:",
              "77: txn OnCompletion",
              "78: !",
              "79: txn ApplicationID",
              "80: !",
              "81: &&",
              "82: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "137: dup",
              "138: intc_0",
              "139: +",
              "142: bytec_2",
              "145: txn Sender",
              "148: concat",
              "151: dig 1",
              "152: itob",
              "153: box_put"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7 -> 10 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "166: incrementBoxCounter_else_body@3:",
              "169: bytec_2",
              "172: txn Sender",
              "175: concat",
              "178: intc_0",
              "179: itob",
              "180: box_put",
              "183: intc_0",
              "186: b incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11 -> 12 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11 -> 14 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "222: getBoxCounter_after_if_else@3:",
              "225: intc_1",
              "228: b getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 15 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "251: dup"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 15 -> 18 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "264: getBoxCounterForAccount_after_if_else@3:",
              "267: intc_1",
              "270: b getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "274: getBoxMbr:",
              "277: intc_1",
              "280: bytec_1",
              "283: app_global_get_ex",
              "284: assert",
              "287: itob",
              "288: bytec_3",
              "289: swap",
              "290: concat",
              "291: log",
              "292: intc_0",
              "293: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "297: getBoxConfiguration:",
              "300: intc_1",
              "303: bytec_0",
              "306: app_global_get_ex",
              "307: assert",
              "308: intc_1",
              "311: bytec 4",
              "314: app_global_get_ex",
              "315: assert",
              "316: intc_1",
              "319: bytec 5",
              "322: app_global_get_ex",
              "323: assert",
              "324: intc_1",
              "327: bytec_1",
              "330: app_global_get_ex",
              "331: assert",
              "332: uncover 3",
              "333: itob",
              "334: uncover 3",
              "335: itob",
              "336: concat",
              "337: uncover 2",
              "338: itob",
              "339: concat",
              "340: swap",
              "341: itob",
              "342: concat",
              "345: bytec_3",
              "346: swap",
              "347: concat",
              "348: log",
              "349: intc_0",
              "350: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "354: updateBoxConfiguration:",
              "357: txna ApplicationArgs 1",
              "358: btoi",
              "359: txna ApplicationArgs 2",
              "360: btoi",
              "363: bytec_0",
              "366: uncover 2",
              "367: app_global_put",
              "370: bytec 4",
              "373: dig 1",
              "374: app_global_put",
              "377: intc_1",
              "380: bytec_0",
              "383: app_global_get_ex",
              "384: assert",
              "385: +",
              "388: bytec 5",
              "391: dig 1",
              "392: app_global_put",
              "395: intc_3",
              "396: *",
              "397: pushint 2500",
              "398: +",
              "401: bytec_1",
              "404: swap",
              "405: app_global_put",
              "408: intc_0",
              "409: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 6",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "73: main___algots__.defaultCreate@15:",
              "77: txn OnCompletion",
              "78: !",
              "79: txn ApplicationID",
              "80: !",
              "81: &&",
              "82: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 20,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 7 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "137: dup",
              "138: intc_0",
              "139: +",
              "142: bytec_2",
              "145: txn Sender",
              "148: concat",
              "151: dig 1",
              "152: itob",
              "153: box_put"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 7 -> 10 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "166: incrementBoxCounter_else_body@3:",
              "169: bytec_2",
              "172: txn Sender",
              "175: concat",
              "178: intc_0",
              "179: itob",
              "180: box_put",
              "183: intc_0",
              "186: b incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 11 -> 12 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 11 -> 14 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "222: getBoxCounter_after_if_else@3:",
              "225: intc_1",
              "228: b getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 15 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "251: dup"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 15 -> 18 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "264: getBoxCounterForAccount_after_if_else@3:",
              "267: intc_1",
              "270: b getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "274: getBoxMbr:",
              "277: intc_1",
              "280: bytec_1",
              "283: app_global_get_ex",
              "284: assert",
              "287: itob",
              "288: bytec_3",
              "289: swap",
              "290: concat",
              "291: log",
              "292: intc_0",
              "293: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 20",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "297: getBoxConfiguration:",
              "300: intc_1",
              "303: bytec_0",
              "306: app_global_get_ex",
              "307: assert",
              "308: intc_1",
              "311: bytec 4",
              "314: app_global_get_ex",
              "315: assert",
              "316: intc_1",
              "319: bytec 5",
              "322: app_global_get_ex",
              "323: assert",
              "324: intc_1",
              "327: bytec_1",
              "330: app_global_get_ex",
              "331: assert",
              "332: uncover 3",
              "333: itob",
              "334: uncover 3",
              "335: itob",
              "336: concat",
              "337: uncover 2",
              "338: itob",
              "339: concat",
              "340: swap",
              "341: itob",
              "342: concat",
              "345: bytec_3",
              "346: swap",
              "347: concat",
              "348: log",
              "349: intc_0",
              "350: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "354: updateBoxConfiguration:",
              "357: txna ApplicationArgs 1",
              "358: btoi",
              "359: txna ApplicationArgs 2",
              "360: btoi",
              "363: bytec_0",
              "366: uncover 2",
              "367: app_global_put",
              "370: bytec 4",
              "373: dig 1",
              "374: app_global_put",
              "377: intc_1",
              "380: bytec_0",
              "383: app_global_get_ex",
              "384: assert",
              "385: +",
              "388: bytec 5",
              "391: dig 1",
              "392: app_global_put",
              "395: intc_3",
              "396: *",
              "397: pushint 2500",
              "398: +",
              "401: bytec_1",
              "404: swap",
              "405: app_global_put",
              "408: intc_0",
              "409: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 6",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec 4",
              "18: intc_2",
              "19: app_global_put",
              "22: intc_1",
              "25: bytec_0",
              "28: app_global_get_ex",
              "29: assert",
              "32: intc_2",
              "35: +",
              "38: bytec 5",
              "41: dig 1",
              "42: app_global_put",
              "45: intc_3",
              "46: *",
              "47: pushint 2500",
              "48: +",
              "51: bytec_1",
              "54: swap",
              "55: app_global_put"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "73: main___algots__.defaultCreate@15:",
              "77: txn OnCompletion",
              "78: !",
              "79: txn ApplicationID",
              "80: !",
              "81: &&",
              "82: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7 -> 8 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "137: dup",
              "138: intc_0",
              "139: +",
              "142: bytec_2",
              "145: txn Sender",
              "148: concat",
              "151: dig 1",
              "152: itob",
              "153: box_put"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 7 -> 10 -> 9",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "86: incrementBoxCounter:",
              "89: txn GroupIndex",
              "90: intc_0",
              "91: -",
              "92: dup",
              "93: Gtxns TypeEnum",
              "94: intc_0",
              "95: ==",
              "96: assert",
              "99: dup",
              "100: Gtxns Amount",
              "101: intc_1",
              "104: bytec_1",
              "107: app_global_get_ex",
              "108: assert",
              "109: ==",
              "110: assert",
              "113: Gtxns Receiver",
              "114: global CurrentApplicationAddress",
              "115: ==",
              "116: assert",
              "119: bytec_2",
              "122: txn Sender",
              "125: concat",
              "128: box_get",
              "129: swap",
              "130: btoi",
              "131: swap",
              "134: bz incrementBoxCounter_else_body@3"
            ],
            [
              "166: incrementBoxCounter_else_body@3:",
              "169: bytec_2",
              "172: txn Sender",
              "175: concat",
              "178: intc_0",
              "179: itob",
              "180: box_put",
              "183: intc_0",
              "186: b incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4"
            ],
            [
              "155: incrementBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.incrementBoxCounter@4:",
              "158: itob",
              "159: bytec_3",
              "160: swap",
              "161: concat",
              "162: log",
              "163: intc_0",
              "164: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11 -> 12 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "209: dup"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 11 -> 14 -> 13",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "190: getBoxCounter:",
              "193: bytec_2",
              "196: txn Sender",
              "199: concat",
              "202: box_get",
              "203: swap",
              "204: btoi",
              "205: swap",
              "208: bz getBoxCounter_after_if_else@3"
            ],
            [
              "222: getBoxCounter_after_if_else@3:",
              "225: intc_1",
              "228: b getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4"
            ],
            [
              "211: getBoxCounter_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounter@4:",
              "214: itob",
              "215: bytec_3",
              "216: swap",
              "217: concat",
              "218: log",
              "219: intc_0",
              "220: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 15 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "251: dup"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 15 -> 18 -> 17",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "232: getBoxCounterForAccount:",
              "235: bytec_2",
              "238: txna ApplicationArgs 1",
              "241: concat",
              "244: box_get",
              "245: swap",
              "246: btoi",
              "247: swap",
              "250: bz getBoxCounterForAccount_after_if_else@3"
            ],
            [
              "264: getBoxCounterForAccount_after_if_else@3:",
              "267: intc_1",
              "270: b getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4"
            ],
            [
              "253: getBoxCounterForAccount_after_inlined_contracts/ReferenceAppBox/contract.algo.ts::ReferenceAppBox.getBoxCounterForAccount@4:",
              "256: itob",
              "257: bytec_3",
              "258: swap",
              "259: concat",
              "260: log",
              "261: intc_0",
              "262: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 19",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "274: getBoxMbr:",
              "277: intc_1",
              "280: bytec_1",
              "283: app_global_get_ex",
              "284: assert",
              "287: itob",
              "288: bytec_3",
              "289: swap",
              "290: concat",
              "291: log",
              "292: intc_0",
              "293: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 20",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "297: getBoxConfiguration:",
              "300: intc_1",
              "303: bytec_0",
              "306: app_global_get_ex",
              "307: assert",
              "308: intc_1",
              "311: bytec 4",
              "314: app_global_get_ex",
              "315: assert",
              "316: intc_1",
              "319: bytec 5",
              "322: app_global_get_ex",
              "323: assert",
              "324: intc_1",
              "327: bytec_1",
              "330: app_global_get_ex",
              "331: assert",
              "332: uncover 3",
              "333: itob",
              "334: uncover 3",
              "335: itob",
              "336: concat",
              "337: uncover 2",
              "338: itob",
              "339: concat",
              "340: swap",
              "341: itob",
              "342: concat",
              "345: bytec_3",
              "346: swap",
              "347: concat",
              "348: log",
              "349: intc_0",
              "350: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 21",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "63: txn OnCompletion",
              "64: !",
              "65: assert",
              "66: txn ApplicationID",
              "67: assert",
              "68: pushbytess 0x040a235e 0x5425a145 0xe924e5e0 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match incrementBoxCounter getBoxCounter getBoxCounterForAccount getBoxMbr getBoxConfiguration updateBoxConfiguration"
            ],
            [
              "354: updateBoxConfiguration:",
              "357: txna ApplicationArgs 1",
              "358: btoi",
              "359: txna ApplicationArgs 2",
              "360: btoi",
              "363: bytec_0",
              "366: uncover 2",
              "367: app_global_put",
              "370: bytec 4",
              "373: dig 1",
              "374: app_global_put",
              "377: intc_1",
              "380: bytec_0",
              "383: app_global_get_ex",
              "384: assert",
              "385: +",
              "388: bytec 5",
              "391: dig 1",
              "392: app_global_put",
              "395: intc_3",
              "396: *",
              "397: pushint 2500",
              "398: +",
              "401: bytec_1",
              "404: swap",
              "405: app_global_put",
              "408: intc_0",
              "409: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 6",
          "blocks": [
            [
              "1: #pragma version 11",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 400",
              "7: bytecblock \"keyLength\" \"boxMbr\" \"counter\" 0x151f7c75 \"valueLength\" \"boxSize\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "57: main_after_if_else@2:",
              "61: txn NumAppArgs",
              "62: bz main___algots__.defaultCreate@15"
            ],
            [
              "73: main___algots__.defaultCreate@15:",
              "77: txn OnCompletion",
              "78: !",
              "79: txn ApplicationID",
              "80: !",
              "81: &&",
              "82: return"
            ]
          ]
        }
      ]
    }
  ]
}