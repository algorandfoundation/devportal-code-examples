{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 11,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 20 -> 21 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "280: bytec 5",
              "283: txn Sender",
              "286: concat",
              "289: frame_dig 0",
              "290: intc_1",
              "291: +",
              "292: dup",
              "293: itob",
              "294: uncover 2",
              "295: swap",
              "296: box_put",
              "299: swap",
              "300: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 20 -> 22 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "302: incrementBoxCounter_else_body@2:",
              "305: bytec 5",
              "308: txn Sender",
              "311: concat",
              "314: intc_1",
              "315: itob",
              "316: box_put",
              "319: intc_1",
              "320: swap",
              "321: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 23 -> 24 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "350: frame_dig 0",
              "351: swap",
              "352: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 23 -> 25 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "354: getBoxCounter_after_if_else@2:",
              "357: intc_0",
              "358: swap",
              "359: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 26 -> 27 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "384: frame_dig 0",
              "385: swap",
              "386: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 26 -> 28 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "388: getBoxCounterForAccount_after_if_else@2:",
              "391: intc_0",
              "392: swap",
              "393: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 29 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "131: main_getBoxMbr_route@8:",
              "134: txn OnCompletion",
              "135: !",
              "136: assert",
              "137: txn ApplicationID",
              "138: assert",
              "139: callsub getBoxMbr"
            ],
            [
              "397: getBoxMbr:",
              "400: intc_0",
              "401: bytec_3",
              "402: app_global_get_ex",
              "403: assert",
              "406: retsub"
            ],
            [
              "140: itob",
              "141: bytec 4",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 30 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "100: main_getBoxConfiguration_route@9:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub getBoxConfiguration"
            ],
            [
              "410: getBoxConfiguration:",
              "413: intc_0",
              "414: bytec_0",
              "415: app_global_get_ex",
              "416: assert",
              "419: intc_0",
              "420: bytec_1",
              "421: app_global_get_ex",
              "422: assert",
              "425: intc_0",
              "426: bytec_2",
              "427: app_global_get_ex",
              "428: assert",
              "431: intc_0",
              "432: bytec_3",
              "433: app_global_get_ex",
              "434: assert",
              "437: retsub"
            ],
            [
              "109: uncover 3",
              "110: itob",
              "111: uncover 3",
              "112: itob",
              "113: uncover 3",
              "114: itob",
              "115: uncover 3",
              "116: itob",
              "117: uncover 3",
              "118: uncover 3",
              "119: concat",
              "120: uncover 2",
              "121: concat",
              "122: swap",
              "123: concat",
              "124: bytec 4",
              "125: swap",
              "126: concat",
              "127: log",
              "128: intc_1",
              "129: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 31 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "79: main_updateBoxConfiguration_route@10:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: btoi",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "96: callsub updateBoxConfiguration"
            ],
            [
              "441: updateBoxConfiguration:",
              "445: proto 2 0",
              "448: bytec_0",
              "451: frame_dig -2",
              "452: app_global_put",
              "455: bytec_1",
              "458: frame_dig -1",
              "459: app_global_put",
              "462: intc_0",
              "463: bytec_0",
              "464: app_global_get_ex",
              "465: assert",
              "468: intc_0",
              "469: bytec_1",
              "470: app_global_get_ex",
              "471: assert",
              "474: +",
              "477: bytec_2",
              "480: swap",
              "481: app_global_put",
              "484: intc_0",
              "485: bytec_2",
              "486: app_global_get_ex",
              "487: assert",
              "490: intc_2",
              "491: *",
              "492: intc_3",
              "493: +",
              "496: bytec_3",
              "499: swap",
              "500: app_global_put",
              "501: retsub"
            ],
            [
              "97: intc_1",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 18 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "220: main_bare_routing@13:",
              "224: txn OnCompletion",
              "225: bnz main_after_if_else@17"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 11,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 20 -> 21 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "280: bytec 5",
              "283: txn Sender",
              "286: concat",
              "289: frame_dig 0",
              "290: intc_1",
              "291: +",
              "292: dup",
              "293: itob",
              "294: uncover 2",
              "295: swap",
              "296: box_put",
              "299: swap",
              "300: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 20 -> 22 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "302: incrementBoxCounter_else_body@2:",
              "305: bytec 5",
              "308: txn Sender",
              "311: concat",
              "314: intc_1",
              "315: itob",
              "316: box_put",
              "319: intc_1",
              "320: swap",
              "321: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 23 -> 24 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "350: frame_dig 0",
              "351: swap",
              "352: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 23 -> 25 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "354: getBoxCounter_after_if_else@2:",
              "357: intc_0",
              "358: swap",
              "359: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 26 -> 27 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "384: frame_dig 0",
              "385: swap",
              "386: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 26 -> 28 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "388: getBoxCounterForAccount_after_if_else@2:",
              "391: intc_0",
              "392: swap",
              "393: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 29 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "131: main_getBoxMbr_route@8:",
              "134: txn OnCompletion",
              "135: !",
              "136: assert",
              "137: txn ApplicationID",
              "138: assert",
              "139: callsub getBoxMbr"
            ],
            [
              "397: getBoxMbr:",
              "400: intc_0",
              "401: bytec_3",
              "402: app_global_get_ex",
              "403: assert",
              "406: retsub"
            ],
            [
              "140: itob",
              "141: bytec 4",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 30 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "100: main_getBoxConfiguration_route@9:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub getBoxConfiguration"
            ],
            [
              "410: getBoxConfiguration:",
              "413: intc_0",
              "414: bytec_0",
              "415: app_global_get_ex",
              "416: assert",
              "419: intc_0",
              "420: bytec_1",
              "421: app_global_get_ex",
              "422: assert",
              "425: intc_0",
              "426: bytec_2",
              "427: app_global_get_ex",
              "428: assert",
              "431: intc_0",
              "432: bytec_3",
              "433: app_global_get_ex",
              "434: assert",
              "437: retsub"
            ],
            [
              "109: uncover 3",
              "110: itob",
              "111: uncover 3",
              "112: itob",
              "113: uncover 3",
              "114: itob",
              "115: uncover 3",
              "116: itob",
              "117: uncover 3",
              "118: uncover 3",
              "119: concat",
              "120: uncover 2",
              "121: concat",
              "122: swap",
              "123: concat",
              "124: bytec 4",
              "125: swap",
              "126: concat",
              "127: log",
              "128: intc_1",
              "129: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 31 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "79: main_updateBoxConfiguration_route@10:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: btoi",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "96: callsub updateBoxConfiguration"
            ],
            [
              "441: updateBoxConfiguration:",
              "445: proto 2 0",
              "448: bytec_0",
              "451: frame_dig -2",
              "452: app_global_put",
              "455: bytec_1",
              "458: frame_dig -1",
              "459: app_global_put",
              "462: intc_0",
              "463: bytec_0",
              "464: app_global_get_ex",
              "465: assert",
              "468: intc_0",
              "469: bytec_1",
              "470: app_global_get_ex",
              "471: assert",
              "474: +",
              "477: bytec_2",
              "480: swap",
              "481: app_global_put",
              "484: intc_0",
              "485: bytec_2",
              "486: app_global_get_ex",
              "487: assert",
              "490: intc_2",
              "491: *",
              "492: intc_3",
              "493: +",
              "496: bytec_3",
              "499: swap",
              "500: app_global_put",
              "501: retsub"
            ],
            [
              "97: intc_1",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 18 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "220: main_bare_routing@13:",
              "224: txn OnCompletion",
              "225: bnz main_after_if_else@17"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 11,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 20 -> 21 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "280: bytec 5",
              "283: txn Sender",
              "286: concat",
              "289: frame_dig 0",
              "290: intc_1",
              "291: +",
              "292: dup",
              "293: itob",
              "294: uncover 2",
              "295: swap",
              "296: box_put",
              "299: swap",
              "300: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 20 -> 22 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "302: incrementBoxCounter_else_body@2:",
              "305: bytec 5",
              "308: txn Sender",
              "311: concat",
              "314: intc_1",
              "315: itob",
              "316: box_put",
              "319: intc_1",
              "320: swap",
              "321: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 23 -> 24 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "350: frame_dig 0",
              "351: swap",
              "352: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 23 -> 25 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "354: getBoxCounter_after_if_else@2:",
              "357: intc_0",
              "358: swap",
              "359: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 26 -> 27 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "384: frame_dig 0",
              "385: swap",
              "386: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 26 -> 28 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "388: getBoxCounterForAccount_after_if_else@2:",
              "391: intc_0",
              "392: swap",
              "393: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 29 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "131: main_getBoxMbr_route@8:",
              "134: txn OnCompletion",
              "135: !",
              "136: assert",
              "137: txn ApplicationID",
              "138: assert",
              "139: callsub getBoxMbr"
            ],
            [
              "397: getBoxMbr:",
              "400: intc_0",
              "401: bytec_3",
              "402: app_global_get_ex",
              "403: assert",
              "406: retsub"
            ],
            [
              "140: itob",
              "141: bytec 4",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 30 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "100: main_getBoxConfiguration_route@9:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub getBoxConfiguration"
            ],
            [
              "410: getBoxConfiguration:",
              "413: intc_0",
              "414: bytec_0",
              "415: app_global_get_ex",
              "416: assert",
              "419: intc_0",
              "420: bytec_1",
              "421: app_global_get_ex",
              "422: assert",
              "425: intc_0",
              "426: bytec_2",
              "427: app_global_get_ex",
              "428: assert",
              "431: intc_0",
              "432: bytec_3",
              "433: app_global_get_ex",
              "434: assert",
              "437: retsub"
            ],
            [
              "109: uncover 3",
              "110: itob",
              "111: uncover 3",
              "112: itob",
              "113: uncover 3",
              "114: itob",
              "115: uncover 3",
              "116: itob",
              "117: uncover 3",
              "118: uncover 3",
              "119: concat",
              "120: uncover 2",
              "121: concat",
              "122: swap",
              "123: concat",
              "124: bytec 4",
              "125: swap",
              "126: concat",
              "127: log",
              "128: intc_1",
              "129: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 31 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "79: main_updateBoxConfiguration_route@10:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: btoi",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "96: callsub updateBoxConfiguration"
            ],
            [
              "441: updateBoxConfiguration:",
              "445: proto 2 0",
              "448: bytec_0",
              "451: frame_dig -2",
              "452: app_global_put",
              "455: bytec_1",
              "458: frame_dig -1",
              "459: app_global_put",
              "462: intc_0",
              "463: bytec_0",
              "464: app_global_get_ex",
              "465: assert",
              "468: intc_0",
              "469: bytec_1",
              "470: app_global_get_ex",
              "471: assert",
              "474: +",
              "477: bytec_2",
              "480: swap",
              "481: app_global_put",
              "484: intc_0",
              "485: bytec_2",
              "486: app_global_get_ex",
              "487: assert",
              "490: intc_2",
              "491: *",
              "492: intc_3",
              "493: +",
              "496: bytec_3",
              "499: swap",
              "500: app_global_put",
              "501: retsub"
            ],
            [
              "97: intc_1",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 18 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "220: main_bare_routing@13:",
              "224: txn OnCompletion",
              "225: bnz main_after_if_else@17"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 11,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 20 -> 21 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "280: bytec 5",
              "283: txn Sender",
              "286: concat",
              "289: frame_dig 0",
              "290: intc_1",
              "291: +",
              "292: dup",
              "293: itob",
              "294: uncover 2",
              "295: swap",
              "296: box_put",
              "299: swap",
              "300: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 20 -> 22 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "302: incrementBoxCounter_else_body@2:",
              "305: bytec 5",
              "308: txn Sender",
              "311: concat",
              "314: intc_1",
              "315: itob",
              "316: box_put",
              "319: intc_1",
              "320: swap",
              "321: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 23 -> 24 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "350: frame_dig 0",
              "351: swap",
              "352: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 23 -> 25 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "354: getBoxCounter_after_if_else@2:",
              "357: intc_0",
              "358: swap",
              "359: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 26 -> 27 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "384: frame_dig 0",
              "385: swap",
              "386: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 26 -> 28 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "388: getBoxCounterForAccount_after_if_else@2:",
              "391: intc_0",
              "392: swap",
              "393: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 29 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "131: main_getBoxMbr_route@8:",
              "134: txn OnCompletion",
              "135: !",
              "136: assert",
              "137: txn ApplicationID",
              "138: assert",
              "139: callsub getBoxMbr"
            ],
            [
              "397: getBoxMbr:",
              "400: intc_0",
              "401: bytec_3",
              "402: app_global_get_ex",
              "403: assert",
              "406: retsub"
            ],
            [
              "140: itob",
              "141: bytec 4",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 30 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "100: main_getBoxConfiguration_route@9:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub getBoxConfiguration"
            ],
            [
              "410: getBoxConfiguration:",
              "413: intc_0",
              "414: bytec_0",
              "415: app_global_get_ex",
              "416: assert",
              "419: intc_0",
              "420: bytec_1",
              "421: app_global_get_ex",
              "422: assert",
              "425: intc_0",
              "426: bytec_2",
              "427: app_global_get_ex",
              "428: assert",
              "431: intc_0",
              "432: bytec_3",
              "433: app_global_get_ex",
              "434: assert",
              "437: retsub"
            ],
            [
              "109: uncover 3",
              "110: itob",
              "111: uncover 3",
              "112: itob",
              "113: uncover 3",
              "114: itob",
              "115: uncover 3",
              "116: itob",
              "117: uncover 3",
              "118: uncover 3",
              "119: concat",
              "120: uncover 2",
              "121: concat",
              "122: swap",
              "123: concat",
              "124: bytec 4",
              "125: swap",
              "126: concat",
              "127: log",
              "128: intc_1",
              "129: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 31 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "79: main_updateBoxConfiguration_route@10:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: btoi",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "96: callsub updateBoxConfiguration"
            ],
            [
              "441: updateBoxConfiguration:",
              "445: proto 2 0",
              "448: bytec_0",
              "451: frame_dig -2",
              "452: app_global_put",
              "455: bytec_1",
              "458: frame_dig -1",
              "459: app_global_put",
              "462: intc_0",
              "463: bytec_0",
              "464: app_global_get_ex",
              "465: assert",
              "468: intc_0",
              "469: bytec_1",
              "470: app_global_get_ex",
              "471: assert",
              "474: +",
              "477: bytec_2",
              "480: swap",
              "481: app_global_put",
              "484: intc_0",
              "485: bytec_2",
              "486: app_global_get_ex",
              "487: assert",
              "490: intc_2",
              "491: *",
              "492: intc_3",
              "493: +",
              "496: bytec_3",
              "499: swap",
              "500: app_global_put",
              "501: retsub"
            ],
            [
              "97: intc_1",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 18 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "220: main_bare_routing@13:",
              "224: txn OnCompletion",
              "225: bnz main_after_if_else@17"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 16 -> 20 -> 21 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "280: bytec 5",
              "283: txn Sender",
              "286: concat",
              "289: frame_dig 0",
              "290: intc_1",
              "291: +",
              "292: dup",
              "293: itob",
              "294: uncover 2",
              "295: swap",
              "296: box_put",
              "299: swap",
              "300: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 16 -> 20 -> 22 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "302: incrementBoxCounter_else_body@2:",
              "305: bytec 5",
              "308: txn Sender",
              "311: concat",
              "314: intc_1",
              "315: itob",
              "316: box_put",
              "319: intc_1",
              "320: swap",
              "321: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 14 -> 23 -> 24 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "350: frame_dig 0",
              "351: swap",
              "352: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 14 -> 23 -> 25 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "354: getBoxCounter_after_if_else@2:",
              "357: intc_0",
              "358: swap",
              "359: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 12 -> 26 -> 27 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "384: frame_dig 0",
              "385: swap",
              "386: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 12 -> 26 -> 28 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "388: getBoxCounterForAccount_after_if_else@2:",
              "391: intc_0",
              "392: swap",
              "393: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 10 -> 29 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "131: main_getBoxMbr_route@8:",
              "134: txn OnCompletion",
              "135: !",
              "136: assert",
              "137: txn ApplicationID",
              "138: assert",
              "139: callsub getBoxMbr"
            ],
            [
              "397: getBoxMbr:",
              "400: intc_0",
              "401: bytec_3",
              "402: app_global_get_ex",
              "403: assert",
              "406: retsub"
            ],
            [
              "140: itob",
              "141: bytec 4",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8 -> 30 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "100: main_getBoxConfiguration_route@9:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub getBoxConfiguration"
            ],
            [
              "410: getBoxConfiguration:",
              "413: intc_0",
              "414: bytec_0",
              "415: app_global_get_ex",
              "416: assert",
              "419: intc_0",
              "420: bytec_1",
              "421: app_global_get_ex",
              "422: assert",
              "425: intc_0",
              "426: bytec_2",
              "427: app_global_get_ex",
              "428: assert",
              "431: intc_0",
              "432: bytec_3",
              "433: app_global_get_ex",
              "434: assert",
              "437: retsub"
            ],
            [
              "109: uncover 3",
              "110: itob",
              "111: uncover 3",
              "112: itob",
              "113: uncover 3",
              "114: itob",
              "115: uncover 3",
              "116: itob",
              "117: uncover 3",
              "118: uncover 3",
              "119: concat",
              "120: uncover 2",
              "121: concat",
              "122: swap",
              "123: concat",
              "124: bytec 4",
              "125: swap",
              "126: concat",
              "127: log",
              "128: intc_1",
              "129: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 6 -> 31 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "79: main_updateBoxConfiguration_route@10:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: btoi",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "96: callsub updateBoxConfiguration"
            ],
            [
              "441: updateBoxConfiguration:",
              "445: proto 2 0",
              "448: bytec_0",
              "451: frame_dig -2",
              "452: app_global_put",
              "455: bytec_1",
              "458: frame_dig -1",
              "459: app_global_put",
              "462: intc_0",
              "463: bytec_0",
              "464: app_global_get_ex",
              "465: assert",
              "468: intc_0",
              "469: bytec_1",
              "470: app_global_get_ex",
              "471: assert",
              "474: +",
              "477: bytec_2",
              "480: swap",
              "481: app_global_put",
              "484: intc_0",
              "485: bytec_2",
              "486: app_global_get_ex",
              "487: assert",
              "490: intc_2",
              "491: *",
              "492: intc_3",
              "493: +",
              "496: bytec_3",
              "499: swap",
              "500: app_global_put",
              "501: retsub"
            ],
            [
              "97: intc_1",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 18 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "220: main_bare_routing@13:",
              "224: txn OnCompletion",
              "225: bnz main_after_if_else@17"
            ],
            [
              "226: txn ApplicationID",
              "227: !",
              "228: assert",
              "229: intc_1",
              "230: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 18 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "220: main_bare_routing@13:",
              "224: txn OnCompletion",
              "225: bnz main_after_if_else@17"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 20 -> 21 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "280: bytec 5",
              "283: txn Sender",
              "286: concat",
              "289: frame_dig 0",
              "290: intc_1",
              "291: +",
              "292: dup",
              "293: itob",
              "294: uncover 2",
              "295: swap",
              "296: box_put",
              "299: swap",
              "300: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 20 -> 22 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "302: incrementBoxCounter_else_body@2:",
              "305: bytec 5",
              "308: txn Sender",
              "311: concat",
              "314: intc_1",
              "315: itob",
              "316: box_put",
              "319: intc_1",
              "320: swap",
              "321: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 23 -> 24 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "350: frame_dig 0",
              "351: swap",
              "352: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 23 -> 25 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "354: getBoxCounter_after_if_else@2:",
              "357: intc_0",
              "358: swap",
              "359: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 26 -> 27 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "384: frame_dig 0",
              "385: swap",
              "386: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 26 -> 28 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "388: getBoxCounterForAccount_after_if_else@2:",
              "391: intc_0",
              "392: swap",
              "393: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 29 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "131: main_getBoxMbr_route@8:",
              "134: txn OnCompletion",
              "135: !",
              "136: assert",
              "137: txn ApplicationID",
              "138: assert",
              "139: callsub getBoxMbr"
            ],
            [
              "397: getBoxMbr:",
              "400: intc_0",
              "401: bytec_3",
              "402: app_global_get_ex",
              "403: assert",
              "406: retsub"
            ],
            [
              "140: itob",
              "141: bytec 4",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 30 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "100: main_getBoxConfiguration_route@9:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub getBoxConfiguration"
            ],
            [
              "410: getBoxConfiguration:",
              "413: intc_0",
              "414: bytec_0",
              "415: app_global_get_ex",
              "416: assert",
              "419: intc_0",
              "420: bytec_1",
              "421: app_global_get_ex",
              "422: assert",
              "425: intc_0",
              "426: bytec_2",
              "427: app_global_get_ex",
              "428: assert",
              "431: intc_0",
              "432: bytec_3",
              "433: app_global_get_ex",
              "434: assert",
              "437: retsub"
            ],
            [
              "109: uncover 3",
              "110: itob",
              "111: uncover 3",
              "112: itob",
              "113: uncover 3",
              "114: itob",
              "115: uncover 3",
              "116: itob",
              "117: uncover 3",
              "118: uncover 3",
              "119: concat",
              "120: uncover 2",
              "121: concat",
              "122: swap",
              "123: concat",
              "124: bytec 4",
              "125: swap",
              "126: concat",
              "127: log",
              "128: intc_1",
              "129: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 31 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "79: main_updateBoxConfiguration_route@10:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: btoi",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "96: callsub updateBoxConfiguration"
            ],
            [
              "441: updateBoxConfiguration:",
              "445: proto 2 0",
              "448: bytec_0",
              "451: frame_dig -2",
              "452: app_global_put",
              "455: bytec_1",
              "458: frame_dig -1",
              "459: app_global_put",
              "462: intc_0",
              "463: bytec_0",
              "464: app_global_get_ex",
              "465: assert",
              "468: intc_0",
              "469: bytec_1",
              "470: app_global_get_ex",
              "471: assert",
              "474: +",
              "477: bytec_2",
              "480: swap",
              "481: app_global_put",
              "484: intc_0",
              "485: bytec_2",
              "486: app_global_get_ex",
              "487: assert",
              "490: intc_2",
              "491: *",
              "492: intc_3",
              "493: +",
              "496: bytec_3",
              "499: swap",
              "500: app_global_put",
              "501: retsub"
            ],
            [
              "97: intc_1",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 18 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "220: main_bare_routing@13:",
              "224: txn OnCompletion",
              "225: bnz main_after_if_else@17"
            ],
            [
              "226: txn ApplicationID",
              "227: !",
              "228: assert",
              "229: intc_1",
              "230: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 18 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "220: main_bare_routing@13:",
              "224: txn OnCompletion",
              "225: bnz main_after_if_else@17"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 16 -> 20 -> 21 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "280: bytec 5",
              "283: txn Sender",
              "286: concat",
              "289: frame_dig 0",
              "290: intc_1",
              "291: +",
              "292: dup",
              "293: itob",
              "294: uncover 2",
              "295: swap",
              "296: box_put",
              "299: swap",
              "300: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 16 -> 20 -> 22 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "302: incrementBoxCounter_else_body@2:",
              "305: bytec 5",
              "308: txn Sender",
              "311: concat",
              "314: intc_1",
              "315: itob",
              "316: box_put",
              "319: intc_1",
              "320: swap",
              "321: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 14 -> 23 -> 24 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "350: frame_dig 0",
              "351: swap",
              "352: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 14 -> 23 -> 25 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "354: getBoxCounter_after_if_else@2:",
              "357: intc_0",
              "358: swap",
              "359: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 12 -> 26 -> 27 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "384: frame_dig 0",
              "385: swap",
              "386: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 12 -> 26 -> 28 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "388: getBoxCounterForAccount_after_if_else@2:",
              "391: intc_0",
              "392: swap",
              "393: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 10 -> 29 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "131: main_getBoxMbr_route@8:",
              "134: txn OnCompletion",
              "135: !",
              "136: assert",
              "137: txn ApplicationID",
              "138: assert",
              "139: callsub getBoxMbr"
            ],
            [
              "397: getBoxMbr:",
              "400: intc_0",
              "401: bytec_3",
              "402: app_global_get_ex",
              "403: assert",
              "406: retsub"
            ],
            [
              "140: itob",
              "141: bytec 4",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 8 -> 30 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "100: main_getBoxConfiguration_route@9:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub getBoxConfiguration"
            ],
            [
              "410: getBoxConfiguration:",
              "413: intc_0",
              "414: bytec_0",
              "415: app_global_get_ex",
              "416: assert",
              "419: intc_0",
              "420: bytec_1",
              "421: app_global_get_ex",
              "422: assert",
              "425: intc_0",
              "426: bytec_2",
              "427: app_global_get_ex",
              "428: assert",
              "431: intc_0",
              "432: bytec_3",
              "433: app_global_get_ex",
              "434: assert",
              "437: retsub"
            ],
            [
              "109: uncover 3",
              "110: itob",
              "111: uncover 3",
              "112: itob",
              "113: uncover 3",
              "114: itob",
              "115: uncover 3",
              "116: itob",
              "117: uncover 3",
              "118: uncover 3",
              "119: concat",
              "120: uncover 2",
              "121: concat",
              "122: swap",
              "123: concat",
              "124: bytec 4",
              "125: swap",
              "126: concat",
              "127: log",
              "128: intc_1",
              "129: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 4 -> 6 -> 31 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "79: main_updateBoxConfiguration_route@10:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: btoi",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "96: callsub updateBoxConfiguration"
            ],
            [
              "441: updateBoxConfiguration:",
              "445: proto 2 0",
              "448: bytec_0",
              "451: frame_dig -2",
              "452: app_global_put",
              "455: bytec_1",
              "458: frame_dig -1",
              "459: app_global_put",
              "462: intc_0",
              "463: bytec_0",
              "464: app_global_get_ex",
              "465: assert",
              "468: intc_0",
              "469: bytec_1",
              "470: app_global_get_ex",
              "471: assert",
              "474: +",
              "477: bytec_2",
              "480: swap",
              "481: app_global_put",
              "484: intc_0",
              "485: bytec_2",
              "486: app_global_get_ex",
              "487: assert",
              "490: intc_2",
              "491: *",
              "492: intc_3",
              "493: +",
              "496: bytec_3",
              "499: swap",
              "500: app_global_put",
              "501: retsub"
            ],
            [
              "97: intc_1",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 18 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "220: main_bare_routing@13:",
              "224: txn OnCompletion",
              "225: bnz main_after_if_else@17"
            ],
            [
              "226: txn ApplicationID",
              "227: !",
              "228: assert",
              "229: intc_1",
              "230: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 3 -> 18 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "12: bytec_0",
              "13: pushint 51",
              "14: app_global_put",
              "17: bytec_1",
              "18: pushint 8",
              "19: app_global_put",
              "22: intc_0",
              "23: bytec_0",
              "24: app_global_get_ex",
              "25: assert",
              "28: intc_0",
              "29: bytec_1",
              "30: app_global_get_ex",
              "31: assert",
              "34: +",
              "37: bytec_2",
              "40: swap",
              "41: app_global_put",
              "44: intc_0",
              "45: bytec_2",
              "46: app_global_get_ex",
              "47: assert",
              "50: intc_2",
              "51: *",
              "52: intc_3",
              "53: +",
              "56: bytec_3",
              "59: swap",
              "60: app_global_put"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "220: main_bare_routing@13:",
              "224: txn OnCompletion",
              "225: bnz main_after_if_else@17"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 20 -> 21 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "280: bytec 5",
              "283: txn Sender",
              "286: concat",
              "289: frame_dig 0",
              "290: intc_1",
              "291: +",
              "292: dup",
              "293: itob",
              "294: uncover 2",
              "295: swap",
              "296: box_put",
              "299: swap",
              "300: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 16 -> 20 -> 22 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "190: main_incrementBoxCounter_route@5:",
              "193: txn OnCompletion",
              "194: !",
              "195: assert",
              "196: txn ApplicationID",
              "197: assert",
              "201: txn GroupIndex",
              "202: intc_1",
              "203: -",
              "204: dup",
              "205: Gtxns TypeEnum",
              "206: intc_1",
              "207: ==",
              "208: assert",
              "211: callsub incrementBoxCounter"
            ],
            [
              "234: incrementBoxCounter:",
              "238: proto 1 1",
              "241: frame_dig -1",
              "242: Gtxns Amount",
              "245: intc_0",
              "246: bytec_3",
              "247: app_global_get_ex",
              "248: assert",
              "251: ==",
              "252: assert",
              "255: frame_dig -1",
              "256: Gtxns Receiver",
              "257: global CurrentApplicationAddress",
              "258: ==",
              "259: assert",
              "262: bytec 5",
              "265: txn Sender",
              "268: concat",
              "271: box_get",
              "272: swap",
              "273: btoi",
              "274: swap",
              "277: bz incrementBoxCounter_else_body@2"
            ],
            [
              "302: incrementBoxCounter_else_body@2:",
              "305: bytec 5",
              "308: txn Sender",
              "311: concat",
              "314: intc_1",
              "315: itob",
              "316: box_put",
              "319: intc_1",
              "320: swap",
              "321: retsub"
            ],
            [
              "212: itob",
              "213: bytec 4",
              "214: swap",
              "215: concat",
              "216: log",
              "217: intc_1",
              "218: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 23 -> 24 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "350: frame_dig 0",
              "351: swap",
              "352: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 14 -> 23 -> 25 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "173: main_getBoxCounter_route@6:",
              "176: txn OnCompletion",
              "177: !",
              "178: assert",
              "179: txn ApplicationID",
              "180: assert",
              "181: callsub getBoxCounter"
            ],
            [
              "325: getBoxCounter:",
              "329: proto 0 1",
              "332: bytec 5",
              "335: txn Sender",
              "338: concat",
              "341: box_get",
              "342: swap",
              "343: btoi",
              "344: swap",
              "347: bz getBoxCounter_after_if_else@2"
            ],
            [
              "354: getBoxCounter_after_if_else@2:",
              "357: intc_0",
              "358: swap",
              "359: retsub"
            ],
            [
              "182: itob",
              "183: bytec 4",
              "184: swap",
              "185: concat",
              "186: log",
              "187: intc_1",
              "188: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 26 -> 27 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "384: frame_dig 0",
              "385: swap",
              "386: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 12 -> 26 -> 28 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "148: main_getBoxCounterForAccount_route@7:",
              "151: txn OnCompletion",
              "152: !",
              "153: assert",
              "154: txn ApplicationID",
              "155: assert",
              "159: txna ApplicationArgs 1",
              "160: btoi",
              "161: txnas Accounts",
              "164: callsub getBoxCounterForAccount"
            ],
            [
              "363: getBoxCounterForAccount:",
              "367: proto 1 1",
              "370: bytec 5",
              "371: frame_dig -1",
              "372: concat",
              "375: box_get",
              "376: swap",
              "377: btoi",
              "378: swap",
              "381: bz getBoxCounterForAccount_after_if_else@2"
            ],
            [
              "388: getBoxCounterForAccount_after_if_else@2:",
              "391: intc_0",
              "392: swap",
              "393: retsub"
            ],
            [
              "165: itob",
              "166: bytec 4",
              "167: swap",
              "168: concat",
              "169: log",
              "170: intc_1",
              "171: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 10 -> 29 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "131: main_getBoxMbr_route@8:",
              "134: txn OnCompletion",
              "135: !",
              "136: assert",
              "137: txn ApplicationID",
              "138: assert",
              "139: callsub getBoxMbr"
            ],
            [
              "397: getBoxMbr:",
              "400: intc_0",
              "401: bytec_3",
              "402: app_global_get_ex",
              "403: assert",
              "406: retsub"
            ],
            [
              "140: itob",
              "141: bytec 4",
              "142: swap",
              "143: concat",
              "144: log",
              "145: intc_1",
              "146: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 8 -> 30 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "100: main_getBoxConfiguration_route@9:",
              "103: txn OnCompletion",
              "104: !",
              "105: assert",
              "106: txn ApplicationID",
              "107: assert",
              "108: callsub getBoxConfiguration"
            ],
            [
              "410: getBoxConfiguration:",
              "413: intc_0",
              "414: bytec_0",
              "415: app_global_get_ex",
              "416: assert",
              "419: intc_0",
              "420: bytec_1",
              "421: app_global_get_ex",
              "422: assert",
              "425: intc_0",
              "426: bytec_2",
              "427: app_global_get_ex",
              "428: assert",
              "431: intc_0",
              "432: bytec_3",
              "433: app_global_get_ex",
              "434: assert",
              "437: retsub"
            ],
            [
              "109: uncover 3",
              "110: itob",
              "111: uncover 3",
              "112: itob",
              "113: uncover 3",
              "114: itob",
              "115: uncover 3",
              "116: itob",
              "117: uncover 3",
              "118: uncover 3",
              "119: concat",
              "120: uncover 2",
              "121: concat",
              "122: swap",
              "123: concat",
              "124: bytec 4",
              "125: swap",
              "126: concat",
              "127: log",
              "128: intc_1",
              "129: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 4 -> 6 -> 31 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "68: pushbytess 0x040a235e 0x5425a145 0xb3b4a265 0xbbb5239e 0x1aefe7f5 0x0e385162",
              "69: txna ApplicationArgs 0",
              "70: match main_incrementBoxCounter_route@5 main_getBoxCounter_route@6 main_getBoxCounterForAccount_route@7 main_getBoxMbr_route@8 main_getBoxConfiguration_route@9 main_updateBoxConfiguration_route@10"
            ],
            [
              "79: main_updateBoxConfiguration_route@10:",
              "82: txn OnCompletion",
              "83: !",
              "84: assert",
              "85: txn ApplicationID",
              "86: assert",
              "90: txna ApplicationArgs 1",
              "91: btoi",
              "92: txna ApplicationArgs 2",
              "93: btoi",
              "96: callsub updateBoxConfiguration"
            ],
            [
              "441: updateBoxConfiguration:",
              "445: proto 2 0",
              "448: bytec_0",
              "451: frame_dig -2",
              "452: app_global_put",
              "455: bytec_1",
              "458: frame_dig -1",
              "459: app_global_put",
              "462: intc_0",
              "463: bytec_0",
              "464: app_global_get_ex",
              "465: assert",
              "468: intc_0",
              "469: bytec_1",
              "470: app_global_get_ex",
              "471: assert",
              "474: +",
              "477: bytec_2",
              "480: swap",
              "481: app_global_put",
              "484: intc_0",
              "485: bytec_2",
              "486: app_global_get_ex",
              "487: assert",
              "490: intc_2",
              "491: *",
              "492: intc_3",
              "493: +",
              "496: bytec_3",
              "499: swap",
              "500: app_global_put",
              "501: retsub"
            ],
            [
              "97: intc_1",
              "98: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 18 -> 19",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "220: main_bare_routing@13:",
              "224: txn OnCompletion",
              "225: bnz main_after_if_else@17"
            ],
            [
              "226: txn ApplicationID",
              "227: !",
              "228: assert",
              "229: intc_1",
              "230: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 3 -> 18 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 0 1 400 2500",
              "7: bytecblock \"keyLength\" \"valueLength\" \"boxSize\" \"boxMbr\" 0x151f7c75 \"counter\"",
              "8: txn ApplicationID",
              "9: bnz main_after_if_else@2"
            ],
            [
              "62: main_after_if_else@2:",
              "66: txn NumAppArgs",
              "67: bz main_bare_routing@13"
            ],
            [
              "220: main_bare_routing@13:",
              "224: txn OnCompletion",
              "225: bnz main_after_if_else@17"
            ],
            [
              "72: main_after_if_else@17:",
              "76: intc_0",
              "77: return"
            ]
          ]
        }
      ]
    }
  ]
}