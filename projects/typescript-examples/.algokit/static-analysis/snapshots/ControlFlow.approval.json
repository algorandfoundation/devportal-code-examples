{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "190: pushbytes \"This account is rich!\"",
              "191: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "202: pushbytes \"This account is doing well.\"",
              "203: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "205: isRich_else_body@4:",
              "208: pushbytes \"This account is poor :(\"",
              "209: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "224: pushbytes \"Even\"",
              "225: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "227: isEven_ternary_false@2:",
              "230: pushbytes \"Odd\"",
              "231: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "92: main_forLoop_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "100: callsub forLoop"
            ],
            [
              "235: forLoop:",
              "239: proto 0 1",
              "240: intc_1",
              "241: pushbytes \"\"",
              "242: dupn 4",
              "245: bytec_1",
              "248: intc_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "291: forLoop_after_for@4:",
              "294: bytec_1",
              "295: frame_bury 0",
              "298: frame_dig 6",
              "299: intc_1",
              "300: extract_uint16",
              "301: frame_bury 1",
              "302: intc_1",
              "303: frame_bury 3"
            ],
            [
              "305: forLoop_for_header@5:",
              "308: frame_dig 3",
              "309: frame_dig 1",
              "310: <",
              "311: bz forLoop_after_for@8"
            ],
            [
              "349: forLoop_after_for@8:",
              "352: intc_1",
              "353: frame_bury 5",
              "356: frame_dig 0",
              "357: intc_1",
              "358: extract_uint16",
              "359: frame_bury 2",
              "360: intc_1",
              "361: frame_bury 4"
            ],
            [
              "363: forLoop_for_header@9:",
              "366: frame_dig 4",
              "367: frame_dig 2",
              "368: <",
              "369: bz forLoop_after_for@12"
            ],
            [
              "388: forLoop_after_for@12:",
              "391: frame_dig 5",
              "392: pushint 6",
              "393: ==",
              "394: assert",
              "397: retsub"
            ],
            [
              "101: bytec_0",
              "102: swap",
              "103: concat",
              "104: log",
              "105: intc_0",
              "106: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "428: getDay_switch_case_default@15:",
              "431: pushbytes \"Invalid day\"",
              "432: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 44 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "470: getDay_switch_case_0@1:",
              "473: pushbytes \"Monday\"",
              "474: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "464: getDay_switch_case_1@3:",
              "467: pushbytes \"Tuesday\"",
              "468: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 42 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "458: getDay_switch_case_2@5:",
              "461: pushbytes \"Wednesday\"",
              "462: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "452: getDay_switch_case_3@7:",
              "455: pushbytes \"Thursday\"",
              "456: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 40 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "446: getDay_switch_case_4@9:",
              "449: pushbytes \"Friday\"",
              "450: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "440: getDay_switch_case_5@11:",
              "443: pushbytes \"Saturday\"",
              "444: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "434: getDay_switch_case_6@13:",
              "437: pushbytes \"Sunday\"",
              "438: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 46 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "520: intc_1",
              "521: swap",
              "522: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 52 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "575: calculateBoxStorageCost_switch_case_0@1:",
              "578: intc_2",
              "581: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 51 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "567: calculateBoxStorageCost_switch_case_1@3:",
              "570: pushint 64",
              "573: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 50 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "559: calculateBoxStorageCost_switch_case_2@5:",
              "562: pushint 256",
              "565: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 49 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "551: calculateBoxStorageCost_switch_case_3@7:",
              "554: pushint 1024",
              "557: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 47 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "524: calculateBoxStorageCost_switch_case_4@9:",
              "527: pushint 32000"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 53 -> 54 -> 55 -> 57 -> 58 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "585: loop:",
              "589: proto 0 1",
              "592: pushint 10",
              "595: intc_1"
            ],
            [
              "597: loop_while_top@1:",
              "613: frame_dig 0",
              "614: bz loop_block@9"
            ],
            [
              "617: frame_dig 0",
              "618: pushint 5",
              "619: >",
              "620: bz loop_after_if_else@4"
            ],
            [
              "637: loop_after_if_else@4:",
              "640: frame_dig 0",
              "641: intc_3",
              "642: -",
              "643: dup",
              "644: frame_bury 0",
              "647: frame_dig 1",
              "648: intc_0",
              "649: +",
              "650: frame_bury 1",
              "653: intc_0",
              "654: ==",
              "655: bz loop_while_top@1"
            ],
            [
              "657: loop_block@9:",
              "660: frame_dig 1",
              "661: frame_bury 0",
              "662: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 53 -> 54 -> 58 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "585: loop:",
              "589: proto 0 1",
              "592: pushint 10",
              "595: intc_1"
            ],
            [
              "597: loop_while_top@1:",
              "613: frame_dig 0",
              "614: bz loop_block@9"
            ],
            [
              "657: loop_block@9:",
              "660: frame_dig 1",
              "661: frame_bury 0",
              "662: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "190: pushbytes \"This account is rich!\"",
              "191: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "202: pushbytes \"This account is doing well.\"",
              "203: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "205: isRich_else_body@4:",
              "208: pushbytes \"This account is poor :(\"",
              "209: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "224: pushbytes \"Even\"",
              "225: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "227: isEven_ternary_false@2:",
              "230: pushbytes \"Odd\"",
              "231: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "92: main_forLoop_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "100: callsub forLoop"
            ],
            [
              "235: forLoop:",
              "239: proto 0 1",
              "240: intc_1",
              "241: pushbytes \"\"",
              "242: dupn 4",
              "245: bytec_1",
              "248: intc_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "291: forLoop_after_for@4:",
              "294: bytec_1",
              "295: frame_bury 0",
              "298: frame_dig 6",
              "299: intc_1",
              "300: extract_uint16",
              "301: frame_bury 1",
              "302: intc_1",
              "303: frame_bury 3"
            ],
            [
              "305: forLoop_for_header@5:",
              "308: frame_dig 3",
              "309: frame_dig 1",
              "310: <",
              "311: bz forLoop_after_for@8"
            ],
            [
              "349: forLoop_after_for@8:",
              "352: intc_1",
              "353: frame_bury 5",
              "356: frame_dig 0",
              "357: intc_1",
              "358: extract_uint16",
              "359: frame_bury 2",
              "360: intc_1",
              "361: frame_bury 4"
            ],
            [
              "363: forLoop_for_header@9:",
              "366: frame_dig 4",
              "367: frame_dig 2",
              "368: <",
              "369: bz forLoop_after_for@12"
            ],
            [
              "388: forLoop_after_for@12:",
              "391: frame_dig 5",
              "392: pushint 6",
              "393: ==",
              "394: assert",
              "397: retsub"
            ],
            [
              "101: bytec_0",
              "102: swap",
              "103: concat",
              "104: log",
              "105: intc_0",
              "106: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "428: getDay_switch_case_default@15:",
              "431: pushbytes \"Invalid day\"",
              "432: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 44 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "470: getDay_switch_case_0@1:",
              "473: pushbytes \"Monday\"",
              "474: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "464: getDay_switch_case_1@3:",
              "467: pushbytes \"Tuesday\"",
              "468: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 42 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "458: getDay_switch_case_2@5:",
              "461: pushbytes \"Wednesday\"",
              "462: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "452: getDay_switch_case_3@7:",
              "455: pushbytes \"Thursday\"",
              "456: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 40 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "446: getDay_switch_case_4@9:",
              "449: pushbytes \"Friday\"",
              "450: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "440: getDay_switch_case_5@11:",
              "443: pushbytes \"Saturday\"",
              "444: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "434: getDay_switch_case_6@13:",
              "437: pushbytes \"Sunday\"",
              "438: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 46 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "520: intc_1",
              "521: swap",
              "522: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 52 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "575: calculateBoxStorageCost_switch_case_0@1:",
              "578: intc_2",
              "581: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 51 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "567: calculateBoxStorageCost_switch_case_1@3:",
              "570: pushint 64",
              "573: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 50 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "559: calculateBoxStorageCost_switch_case_2@5:",
              "562: pushint 256",
              "565: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 49 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "551: calculateBoxStorageCost_switch_case_3@7:",
              "554: pushint 1024",
              "557: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 47 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "524: calculateBoxStorageCost_switch_case_4@9:",
              "527: pushint 32000"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 53 -> 54 -> 55 -> 57 -> 58 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "585: loop:",
              "589: proto 0 1",
              "592: pushint 10",
              "595: intc_1"
            ],
            [
              "597: loop_while_top@1:",
              "613: frame_dig 0",
              "614: bz loop_block@9"
            ],
            [
              "617: frame_dig 0",
              "618: pushint 5",
              "619: >",
              "620: bz loop_after_if_else@4"
            ],
            [
              "637: loop_after_if_else@4:",
              "640: frame_dig 0",
              "641: intc_3",
              "642: -",
              "643: dup",
              "644: frame_bury 0",
              "647: frame_dig 1",
              "648: intc_0",
              "649: +",
              "650: frame_bury 1",
              "653: intc_0",
              "654: ==",
              "655: bz loop_while_top@1"
            ],
            [
              "657: loop_block@9:",
              "660: frame_dig 1",
              "661: frame_bury 0",
              "662: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 53 -> 54 -> 58 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "585: loop:",
              "589: proto 0 1",
              "592: pushint 10",
              "595: intc_1"
            ],
            [
              "597: loop_while_top@1:",
              "613: frame_dig 0",
              "614: bz loop_block@9"
            ],
            [
              "657: loop_block@9:",
              "660: frame_dig 1",
              "661: frame_bury 0",
              "662: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "190: pushbytes \"This account is rich!\"",
              "191: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "202: pushbytes \"This account is doing well.\"",
              "203: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "205: isRich_else_body@4:",
              "208: pushbytes \"This account is poor :(\"",
              "209: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "224: pushbytes \"Even\"",
              "225: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "227: isEven_ternary_false@2:",
              "230: pushbytes \"Odd\"",
              "231: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "92: main_forLoop_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "100: callsub forLoop"
            ],
            [
              "235: forLoop:",
              "239: proto 0 1",
              "240: intc_1",
              "241: pushbytes \"\"",
              "242: dupn 4",
              "245: bytec_1",
              "248: intc_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "291: forLoop_after_for@4:",
              "294: bytec_1",
              "295: frame_bury 0",
              "298: frame_dig 6",
              "299: intc_1",
              "300: extract_uint16",
              "301: frame_bury 1",
              "302: intc_1",
              "303: frame_bury 3"
            ],
            [
              "305: forLoop_for_header@5:",
              "308: frame_dig 3",
              "309: frame_dig 1",
              "310: <",
              "311: bz forLoop_after_for@8"
            ],
            [
              "349: forLoop_after_for@8:",
              "352: intc_1",
              "353: frame_bury 5",
              "356: frame_dig 0",
              "357: intc_1",
              "358: extract_uint16",
              "359: frame_bury 2",
              "360: intc_1",
              "361: frame_bury 4"
            ],
            [
              "363: forLoop_for_header@9:",
              "366: frame_dig 4",
              "367: frame_dig 2",
              "368: <",
              "369: bz forLoop_after_for@12"
            ],
            [
              "388: forLoop_after_for@12:",
              "391: frame_dig 5",
              "392: pushint 6",
              "393: ==",
              "394: assert",
              "397: retsub"
            ],
            [
              "101: bytec_0",
              "102: swap",
              "103: concat",
              "104: log",
              "105: intc_0",
              "106: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "428: getDay_switch_case_default@15:",
              "431: pushbytes \"Invalid day\"",
              "432: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 44 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "470: getDay_switch_case_0@1:",
              "473: pushbytes \"Monday\"",
              "474: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "464: getDay_switch_case_1@3:",
              "467: pushbytes \"Tuesday\"",
              "468: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 42 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "458: getDay_switch_case_2@5:",
              "461: pushbytes \"Wednesday\"",
              "462: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "452: getDay_switch_case_3@7:",
              "455: pushbytes \"Thursday\"",
              "456: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 40 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "446: getDay_switch_case_4@9:",
              "449: pushbytes \"Friday\"",
              "450: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "440: getDay_switch_case_5@11:",
              "443: pushbytes \"Saturday\"",
              "444: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "434: getDay_switch_case_6@13:",
              "437: pushbytes \"Sunday\"",
              "438: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 46 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "520: intc_1",
              "521: swap",
              "522: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 52 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "575: calculateBoxStorageCost_switch_case_0@1:",
              "578: intc_2",
              "581: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 51 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "567: calculateBoxStorageCost_switch_case_1@3:",
              "570: pushint 64",
              "573: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 50 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "559: calculateBoxStorageCost_switch_case_2@5:",
              "562: pushint 256",
              "565: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 49 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "551: calculateBoxStorageCost_switch_case_3@7:",
              "554: pushint 1024",
              "557: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 47 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "524: calculateBoxStorageCost_switch_case_4@9:",
              "527: pushint 32000"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 53 -> 54 -> 55 -> 57 -> 58 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "585: loop:",
              "589: proto 0 1",
              "592: pushint 10",
              "595: intc_1"
            ],
            [
              "597: loop_while_top@1:",
              "613: frame_dig 0",
              "614: bz loop_block@9"
            ],
            [
              "617: frame_dig 0",
              "618: pushint 5",
              "619: >",
              "620: bz loop_after_if_else@4"
            ],
            [
              "637: loop_after_if_else@4:",
              "640: frame_dig 0",
              "641: intc_3",
              "642: -",
              "643: dup",
              "644: frame_bury 0",
              "647: frame_dig 1",
              "648: intc_0",
              "649: +",
              "650: frame_bury 1",
              "653: intc_0",
              "654: ==",
              "655: bz loop_while_top@1"
            ],
            [
              "657: loop_block@9:",
              "660: frame_dig 1",
              "661: frame_bury 0",
              "662: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 53 -> 54 -> 58 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "585: loop:",
              "589: proto 0 1",
              "592: pushint 10",
              "595: intc_1"
            ],
            [
              "597: loop_while_top@1:",
              "613: frame_dig 0",
              "614: bz loop_block@9"
            ],
            [
              "657: loop_block@9:",
              "660: frame_dig 1",
              "661: frame_bury 0",
              "662: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "190: pushbytes \"This account is rich!\"",
              "191: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "202: pushbytes \"This account is doing well.\"",
              "203: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "205: isRich_else_body@4:",
              "208: pushbytes \"This account is poor :(\"",
              "209: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "224: pushbytes \"Even\"",
              "225: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "227: isEven_ternary_false@2:",
              "230: pushbytes \"Odd\"",
              "231: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "92: main_forLoop_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "100: callsub forLoop"
            ],
            [
              "235: forLoop:",
              "239: proto 0 1",
              "240: intc_1",
              "241: pushbytes \"\"",
              "242: dupn 4",
              "245: bytec_1",
              "248: intc_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "291: forLoop_after_for@4:",
              "294: bytec_1",
              "295: frame_bury 0",
              "298: frame_dig 6",
              "299: intc_1",
              "300: extract_uint16",
              "301: frame_bury 1",
              "302: intc_1",
              "303: frame_bury 3"
            ],
            [
              "305: forLoop_for_header@5:",
              "308: frame_dig 3",
              "309: frame_dig 1",
              "310: <",
              "311: bz forLoop_after_for@8"
            ],
            [
              "349: forLoop_after_for@8:",
              "352: intc_1",
              "353: frame_bury 5",
              "356: frame_dig 0",
              "357: intc_1",
              "358: extract_uint16",
              "359: frame_bury 2",
              "360: intc_1",
              "361: frame_bury 4"
            ],
            [
              "363: forLoop_for_header@9:",
              "366: frame_dig 4",
              "367: frame_dig 2",
              "368: <",
              "369: bz forLoop_after_for@12"
            ],
            [
              "388: forLoop_after_for@12:",
              "391: frame_dig 5",
              "392: pushint 6",
              "393: ==",
              "394: assert",
              "397: retsub"
            ],
            [
              "101: bytec_0",
              "102: swap",
              "103: concat",
              "104: log",
              "105: intc_0",
              "106: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "428: getDay_switch_case_default@15:",
              "431: pushbytes \"Invalid day\"",
              "432: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 44 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "470: getDay_switch_case_0@1:",
              "473: pushbytes \"Monday\"",
              "474: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "464: getDay_switch_case_1@3:",
              "467: pushbytes \"Tuesday\"",
              "468: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 42 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "458: getDay_switch_case_2@5:",
              "461: pushbytes \"Wednesday\"",
              "462: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "452: getDay_switch_case_3@7:",
              "455: pushbytes \"Thursday\"",
              "456: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 40 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "446: getDay_switch_case_4@9:",
              "449: pushbytes \"Friday\"",
              "450: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "440: getDay_switch_case_5@11:",
              "443: pushbytes \"Saturday\"",
              "444: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "434: getDay_switch_case_6@13:",
              "437: pushbytes \"Sunday\"",
              "438: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 46 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "520: intc_1",
              "521: swap",
              "522: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 52 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "575: calculateBoxStorageCost_switch_case_0@1:",
              "578: intc_2",
              "581: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 51 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "567: calculateBoxStorageCost_switch_case_1@3:",
              "570: pushint 64",
              "573: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 50 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "559: calculateBoxStorageCost_switch_case_2@5:",
              "562: pushint 256",
              "565: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 49 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "551: calculateBoxStorageCost_switch_case_3@7:",
              "554: pushint 1024",
              "557: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 47 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "524: calculateBoxStorageCost_switch_case_4@9:",
              "527: pushint 32000"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 53 -> 54 -> 55 -> 57 -> 58 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "585: loop:",
              "589: proto 0 1",
              "592: pushint 10",
              "595: intc_1"
            ],
            [
              "597: loop_while_top@1:",
              "613: frame_dig 0",
              "614: bz loop_block@9"
            ],
            [
              "617: frame_dig 0",
              "618: pushint 5",
              "619: >",
              "620: bz loop_after_if_else@4"
            ],
            [
              "637: loop_after_if_else@4:",
              "640: frame_dig 0",
              "641: intc_3",
              "642: -",
              "643: dup",
              "644: frame_bury 0",
              "647: frame_dig 1",
              "648: intc_0",
              "649: +",
              "650: frame_bury 1",
              "653: intc_0",
              "654: ==",
              "655: bz loop_while_top@1"
            ],
            [
              "657: loop_block@9:",
              "660: frame_dig 1",
              "661: frame_bury 0",
              "662: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 53 -> 54 -> 58 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "585: loop:",
              "589: proto 0 1",
              "592: pushint 10",
              "595: intc_1"
            ],
            [
              "597: loop_while_top@1:",
              "613: frame_dig 0",
              "614: bz loop_block@9"
            ],
            [
              "657: loop_block@9:",
              "660: frame_dig 1",
              "661: frame_bury 0",
              "662: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 25,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "190: pushbytes \"This account is rich!\"",
              "191: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "202: pushbytes \"This account is doing well.\"",
              "203: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "205: isRich_else_body@4:",
              "208: pushbytes \"This account is poor :(\"",
              "209: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "224: pushbytes \"Even\"",
              "225: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "227: isEven_ternary_false@2:",
              "230: pushbytes \"Odd\"",
              "231: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "92: main_forLoop_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "100: callsub forLoop"
            ],
            [
              "235: forLoop:",
              "239: proto 0 1",
              "240: intc_1",
              "241: pushbytes \"\"",
              "242: dupn 4",
              "245: bytec_1",
              "248: intc_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "291: forLoop_after_for@4:",
              "294: bytec_1",
              "295: frame_bury 0",
              "298: frame_dig 6",
              "299: intc_1",
              "300: extract_uint16",
              "301: frame_bury 1",
              "302: intc_1",
              "303: frame_bury 3"
            ],
            [
              "305: forLoop_for_header@5:",
              "308: frame_dig 3",
              "309: frame_dig 1",
              "310: <",
              "311: bz forLoop_after_for@8"
            ],
            [
              "349: forLoop_after_for@8:",
              "352: intc_1",
              "353: frame_bury 5",
              "356: frame_dig 0",
              "357: intc_1",
              "358: extract_uint16",
              "359: frame_bury 2",
              "360: intc_1",
              "361: frame_bury 4"
            ],
            [
              "363: forLoop_for_header@9:",
              "366: frame_dig 4",
              "367: frame_dig 2",
              "368: <",
              "369: bz forLoop_after_for@12"
            ],
            [
              "388: forLoop_after_for@12:",
              "391: frame_dig 5",
              "392: pushint 6",
              "393: ==",
              "394: assert",
              "397: retsub"
            ],
            [
              "101: bytec_0",
              "102: swap",
              "103: concat",
              "104: log",
              "105: intc_0",
              "106: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "428: getDay_switch_case_default@15:",
              "431: pushbytes \"Invalid day\"",
              "432: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 44 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "470: getDay_switch_case_0@1:",
              "473: pushbytes \"Monday\"",
              "474: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "464: getDay_switch_case_1@3:",
              "467: pushbytes \"Tuesday\"",
              "468: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 42 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "458: getDay_switch_case_2@5:",
              "461: pushbytes \"Wednesday\"",
              "462: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "452: getDay_switch_case_3@7:",
              "455: pushbytes \"Thursday\"",
              "456: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 40 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "446: getDay_switch_case_4@9:",
              "449: pushbytes \"Friday\"",
              "450: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "440: getDay_switch_case_5@11:",
              "443: pushbytes \"Saturday\"",
              "444: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "434: getDay_switch_case_6@13:",
              "437: pushbytes \"Sunday\"",
              "438: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 46 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "520: intc_1",
              "521: swap",
              "522: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 52 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "575: calculateBoxStorageCost_switch_case_0@1:",
              "578: intc_2",
              "581: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 51 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "567: calculateBoxStorageCost_switch_case_1@3:",
              "570: pushint 64",
              "573: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 50 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "559: calculateBoxStorageCost_switch_case_2@5:",
              "562: pushint 256",
              "565: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 49 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "551: calculateBoxStorageCost_switch_case_3@7:",
              "554: pushint 1024",
              "557: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 47 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "524: calculateBoxStorageCost_switch_case_4@9:",
              "527: pushint 32000"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 53 -> 54 -> 55 -> 57 -> 58 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "585: loop:",
              "589: proto 0 1",
              "592: pushint 10",
              "595: intc_1"
            ],
            [
              "597: loop_while_top@1:",
              "613: frame_dig 0",
              "614: bz loop_block@9"
            ],
            [
              "617: frame_dig 0",
              "618: pushint 5",
              "619: >",
              "620: bz loop_after_if_else@4"
            ],
            [
              "637: loop_after_if_else@4:",
              "640: frame_dig 0",
              "641: intc_3",
              "642: -",
              "643: dup",
              "644: frame_bury 0",
              "647: frame_dig 1",
              "648: intc_0",
              "649: +",
              "650: frame_bury 1",
              "653: intc_0",
              "654: ==",
              "655: bz loop_while_top@1"
            ],
            [
              "657: loop_block@9:",
              "660: frame_dig 1",
              "661: frame_bury 0",
              "662: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 53 -> 54 -> 58 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "585: loop:",
              "589: proto 0 1",
              "592: pushint 10",
              "595: intc_1"
            ],
            [
              "597: loop_while_top@1:",
              "613: frame_dig 0",
              "614: bz loop_block@9"
            ],
            [
              "657: loop_block@9:",
              "660: frame_dig 1",
              "661: frame_bury 0",
              "662: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "169: txn ApplicationID",
              "170: !",
              "171: assert",
              "172: intc_0",
              "173: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 25,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "190: pushbytes \"This account is rich!\"",
              "191: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "202: pushbytes \"This account is doing well.\"",
              "203: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "205: isRich_else_body@4:",
              "208: pushbytes \"This account is poor :(\"",
              "209: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "224: pushbytes \"Even\"",
              "225: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "227: isEven_ternary_false@2:",
              "230: pushbytes \"Odd\"",
              "231: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "92: main_forLoop_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "100: callsub forLoop"
            ],
            [
              "235: forLoop:",
              "239: proto 0 1",
              "240: intc_1",
              "241: pushbytes \"\"",
              "242: dupn 4",
              "245: bytec_1",
              "248: intc_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "291: forLoop_after_for@4:",
              "294: bytec_1",
              "295: frame_bury 0",
              "298: frame_dig 6",
              "299: intc_1",
              "300: extract_uint16",
              "301: frame_bury 1",
              "302: intc_1",
              "303: frame_bury 3"
            ],
            [
              "305: forLoop_for_header@5:",
              "308: frame_dig 3",
              "309: frame_dig 1",
              "310: <",
              "311: bz forLoop_after_for@8"
            ],
            [
              "349: forLoop_after_for@8:",
              "352: intc_1",
              "353: frame_bury 5",
              "356: frame_dig 0",
              "357: intc_1",
              "358: extract_uint16",
              "359: frame_bury 2",
              "360: intc_1",
              "361: frame_bury 4"
            ],
            [
              "363: forLoop_for_header@9:",
              "366: frame_dig 4",
              "367: frame_dig 2",
              "368: <",
              "369: bz forLoop_after_for@12"
            ],
            [
              "388: forLoop_after_for@12:",
              "391: frame_dig 5",
              "392: pushint 6",
              "393: ==",
              "394: assert",
              "397: retsub"
            ],
            [
              "101: bytec_0",
              "102: swap",
              "103: concat",
              "104: log",
              "105: intc_0",
              "106: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "428: getDay_switch_case_default@15:",
              "431: pushbytes \"Invalid day\"",
              "432: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 44 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "470: getDay_switch_case_0@1:",
              "473: pushbytes \"Monday\"",
              "474: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "464: getDay_switch_case_1@3:",
              "467: pushbytes \"Tuesday\"",
              "468: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 42 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "458: getDay_switch_case_2@5:",
              "461: pushbytes \"Wednesday\"",
              "462: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "452: getDay_switch_case_3@7:",
              "455: pushbytes \"Thursday\"",
              "456: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 40 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "446: getDay_switch_case_4@9:",
              "449: pushbytes \"Friday\"",
              "450: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "440: getDay_switch_case_5@11:",
              "443: pushbytes \"Saturday\"",
              "444: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "401: getDay:",
              "405: proto 1 1",
              "425: frame_dig -1",
              "426: switch getDay_switch_case_default@15 getDay_switch_case_0@1 getDay_switch_case_1@3 getDay_switch_case_2@5 getDay_switch_case_3@7 getDay_switch_case_4@9 getDay_switch_case_5@11 getDay_switch_case_6@13"
            ],
            [
              "434: getDay_switch_case_6@13:",
              "437: pushbytes \"Sunday\"",
              "438: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 46 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "520: intc_1",
              "521: swap",
              "522: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 52 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "575: calculateBoxStorageCost_switch_case_0@1:",
              "578: intc_2",
              "581: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 51 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "567: calculateBoxStorageCost_switch_case_1@3:",
              "570: pushint 64",
              "573: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 50 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "559: calculateBoxStorageCost_switch_case_2@5:",
              "562: pushint 256",
              "565: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 49 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "551: calculateBoxStorageCost_switch_case_3@7:",
              "554: pushint 1024",
              "557: b calculateBoxStorageCost_block@13"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 45 -> 47 -> 48 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "478: calculateBoxStorageCost:",
              "482: proto 2 1",
              "485: frame_dig -1",
              "486: len",
              "489: pushbytess \"xs\" \"sm\" \"md\" \"lg\" \"max\"",
              "516: frame_dig -2",
              "517: match calculateBoxStorageCost_switch_case_0@1 calculateBoxStorageCost_switch_case_1@3 calculateBoxStorageCost_switch_case_2@5 calculateBoxStorageCost_switch_case_3@7 calculateBoxStorageCost_switch_case_4@9"
            ],
            [
              "524: calculateBoxStorageCost_switch_case_4@9:",
              "527: pushint 32000"
            ],
            [
              "529: calculateBoxStorageCost_block@13:",
              "532: frame_dig 0",
              "533: +",
              "536: pushint 400",
              "539: *",
              "542: pushint 2500",
              "545: +",
              "548: swap",
              "549: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 53 -> 54 -> 55 -> 57 -> 58 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "585: loop:",
              "589: proto 0 1",
              "592: pushint 10",
              "595: intc_1"
            ],
            [
              "597: loop_while_top@1:",
              "613: frame_dig 0",
              "614: bz loop_block@9"
            ],
            [
              "617: frame_dig 0",
              "618: pushint 5",
              "619: >",
              "620: bz loop_after_if_else@4"
            ],
            [
              "637: loop_after_if_else@4:",
              "640: frame_dig 0",
              "641: intc_3",
              "642: -",
              "643: dup",
              "644: frame_bury 0",
              "647: frame_dig 1",
              "648: intc_0",
              "649: +",
              "650: frame_bury 1",
              "653: intc_0",
              "654: ==",
              "655: bz loop_while_top@1"
            ],
            [
              "657: loop_block@9:",
              "660: frame_dig 1",
              "661: frame_bury 0",
              "662: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 53 -> 54 -> 58 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "585: loop:",
              "589: proto 0 1",
              "592: pushint 10",
              "595: intc_1"
            ],
            [
              "597: loop_while_top@1:",
              "613: frame_dig 0",
              "614: bz loop_block@9"
            ],
            [
              "657: loop_block@9:",
              "660: frame_dig 1",
              "661: frame_bury 0",
              "662: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "169: txn ApplicationID",
              "170: !",
              "171: assert",
              "172: intc_0",
              "173: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    }
  ]
}