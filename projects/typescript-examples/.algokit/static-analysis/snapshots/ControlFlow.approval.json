{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 22,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "187: pushbytes \"This account is rich!\"",
              "188: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "190: isRich_else_body@2:",
              "193: frame_dig -1",
              "194: pushint 100",
              "195: >",
              "196: bz isRich_else_body@4"
            ],
            [
              "199: pushbytes \"This account is doing well.\"",
              "200: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "190: isRich_else_body@2:",
              "193: frame_dig -1",
              "194: pushint 100",
              "195: >",
              "196: bz isRich_else_body@4"
            ],
            [
              "202: isRich_else_body@4:",
              "205: pushbytes \"This account is poor :(\"",
              "206: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "105: main_isEven_route@4:",
              "108: txn OnCompletion",
              "109: !",
              "110: assert",
              "111: txn ApplicationID",
              "112: assert",
              "115: txna ApplicationArgs 1",
              "116: btoi",
              "119: callsub isEven"
            ],
            [
              "210: isEven:",
              "214: proto 1 1",
              "217: frame_dig -1",
              "218: intc_3",
              "219: %",
              "220: bnz isEven_ternary_false@2"
            ],
            [
              "221: pushbytes \"Even\"",
              "222: retsub"
            ],
            [
              "120: dup",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: swap",
              "125: concat",
              "126: bytec_0",
              "127: swap",
              "128: concat",
              "129: log",
              "130: intc_0",
              "131: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "105: main_isEven_route@4:",
              "108: txn OnCompletion",
              "109: !",
              "110: assert",
              "111: txn ApplicationID",
              "112: assert",
              "115: txna ApplicationArgs 1",
              "116: btoi",
              "119: callsub isEven"
            ],
            [
              "210: isEven:",
              "214: proto 1 1",
              "217: frame_dig -1",
              "218: intc_3",
              "219: %",
              "220: bnz isEven_ternary_false@2"
            ],
            [
              "224: isEven_ternary_false@2:",
              "227: pushbytes \"Odd\"",
              "228: retsub"
            ],
            [
              "120: dup",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: swap",
              "125: concat",
              "126: bytec_0",
              "127: swap",
              "128: concat",
              "129: log",
              "130: intc_0",
              "131: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "89: main_forLoop_route@5:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub forLoop"
            ],
            [
              "232: forLoop:",
              "236: proto 0 1",
              "237: intc_1",
              "238: pushbytes \"\"",
              "239: dupn 4",
              "242: bytec_1",
              "245: intc_1",
              "248: bytec_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "285: forLoop_after_for@4:",
              "288: frame_dig 8",
              "289: intc_1",
              "290: extract_uint16",
              "291: frame_bury 1",
              "292: intc_1",
              "293: frame_bury 3",
              "294: frame_dig 6",
              "295: frame_bury 0"
            ],
            [
              "297: forLoop_for_header@5:",
              "300: frame_dig 3",
              "301: frame_dig 1",
              "302: <",
              "303: bz forLoop_after_for@8"
            ],
            [
              "335: forLoop_after_for@8:",
              "338: intc_1",
              "339: frame_bury 5",
              "342: frame_dig 0",
              "343: intc_1",
              "344: extract_uint16",
              "345: frame_bury 2",
              "346: intc_1",
              "347: frame_bury 4"
            ],
            [
              "349: forLoop_for_header@9:",
              "352: frame_dig 4",
              "353: frame_dig 2",
              "354: <",
              "355: bz forLoop_after_for@12"
            ],
            [
              "374: forLoop_after_for@12:",
              "377: frame_dig 5",
              "378: pushint 6",
              "379: ==",
              "380: assert",
              "383: retsub"
            ],
            [
              "98: bytec_0",
              "99: swap",
              "100: concat",
              "101: log",
              "102: intc_0",
              "103: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "403: pushbytes \"Monday\"",
              "404: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "418: pushbytes \"Tuesday\"",
              "419: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "433: pushbytes \"Wednesday\"",
              "434: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "448: pushbytes \"Thursday\"",
              "449: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 45 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "463: pushbytes \"Friday\"",
              "464: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 47 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "478: pushbytes \"Saturday\"",
              "479: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 49 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "481: getDay_after_if_else@18:",
              "484: frame_dig -1",
              "485: pushint 7",
              "486: ==",
              "490: bz getDay_after_if_else@21"
            ],
            [
              "493: pushbytes \"Sunday\"",
              "494: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 50 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "481: getDay_after_if_else@18:",
              "484: frame_dig -1",
              "485: pushint 7",
              "486: ==",
              "490: bz getDay_after_if_else@21"
            ],
            [
              "496: getDay_after_if_else@21:",
              "499: pushbytes \"Invalid day\"",
              "500: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 52 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "525: intc_2"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 55 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "554: pushint 64",
              "557: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 57 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "572: pushint 256",
              "575: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 59 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "590: pushint 1024",
              "593: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 61 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "595: calculateBoxStorageCost_after_if_else@12:",
              "598: frame_dig -2",
              "599: pushbytes \"max\"",
              "600: ==",
              "605: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "608: pushint 32000",
              "611: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 62 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "595: calculateBoxStorageCost_after_if_else@12:",
              "598: frame_dig -2",
              "599: pushbytes \"max\"",
              "600: ==",
              "605: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "613: calculateBoxStorageCost_after_if_else@15:",
              "616: intc_1",
              "617: swap",
              "618: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 65 -> 67 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "19: main_loop_route@8:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "27: callsub loop"
            ],
            [
              "622: loop:",
              "626: proto 0 1",
              "629: pushint 10",
              "632: intc_1"
            ],
            [
              "634: loop_while_top@1:",
              "650: frame_dig 0",
              "651: bz loop_block@9"
            ],
            [
              "654: frame_dig 0",
              "655: pushint 5",
              "656: >",
              "657: bz loop_after_if_else@4"
            ],
            [
              "674: loop_after_if_else@4:",
              "677: frame_dig 0",
              "678: intc_3",
              "679: -",
              "680: dup",
              "681: frame_bury 0",
              "684: frame_dig 1",
              "685: intc_0",
              "686: +",
              "687: frame_bury 1",
              "690: intc_0",
              "691: ==",
              "692: bz loop_while_top@1"
            ],
            [
              "694: loop_block@9:",
              "697: frame_dig 1",
              "698: frame_bury 0",
              "699: retsub"
            ],
            [
              "28: itob",
              "29: bytec_0",
              "30: swap",
              "31: concat",
              "32: log",
              "33: intc_0",
              "34: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "19: main_loop_route@8:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "27: callsub loop"
            ],
            [
              "622: loop:",
              "626: proto 0 1",
              "629: pushint 10",
              "632: intc_1"
            ],
            [
              "634: loop_while_top@1:",
              "650: frame_dig 0",
              "651: bz loop_block@9"
            ],
            [
              "694: loop_block@9:",
              "697: frame_dig 1",
              "698: frame_bury 0",
              "699: retsub"
            ],
            [
              "28: itob",
              "29: bytec_0",
              "30: swap",
              "31: concat",
              "32: log",
              "33: intc_0",
              "34: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 22,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "187: pushbytes \"This account is rich!\"",
              "188: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "190: isRich_else_body@2:",
              "193: frame_dig -1",
              "194: pushint 100",
              "195: >",
              "196: bz isRich_else_body@4"
            ],
            [
              "199: pushbytes \"This account is doing well.\"",
              "200: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "190: isRich_else_body@2:",
              "193: frame_dig -1",
              "194: pushint 100",
              "195: >",
              "196: bz isRich_else_body@4"
            ],
            [
              "202: isRich_else_body@4:",
              "205: pushbytes \"This account is poor :(\"",
              "206: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "105: main_isEven_route@4:",
              "108: txn OnCompletion",
              "109: !",
              "110: assert",
              "111: txn ApplicationID",
              "112: assert",
              "115: txna ApplicationArgs 1",
              "116: btoi",
              "119: callsub isEven"
            ],
            [
              "210: isEven:",
              "214: proto 1 1",
              "217: frame_dig -1",
              "218: intc_3",
              "219: %",
              "220: bnz isEven_ternary_false@2"
            ],
            [
              "221: pushbytes \"Even\"",
              "222: retsub"
            ],
            [
              "120: dup",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: swap",
              "125: concat",
              "126: bytec_0",
              "127: swap",
              "128: concat",
              "129: log",
              "130: intc_0",
              "131: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "105: main_isEven_route@4:",
              "108: txn OnCompletion",
              "109: !",
              "110: assert",
              "111: txn ApplicationID",
              "112: assert",
              "115: txna ApplicationArgs 1",
              "116: btoi",
              "119: callsub isEven"
            ],
            [
              "210: isEven:",
              "214: proto 1 1",
              "217: frame_dig -1",
              "218: intc_3",
              "219: %",
              "220: bnz isEven_ternary_false@2"
            ],
            [
              "224: isEven_ternary_false@2:",
              "227: pushbytes \"Odd\"",
              "228: retsub"
            ],
            [
              "120: dup",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: swap",
              "125: concat",
              "126: bytec_0",
              "127: swap",
              "128: concat",
              "129: log",
              "130: intc_0",
              "131: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "89: main_forLoop_route@5:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub forLoop"
            ],
            [
              "232: forLoop:",
              "236: proto 0 1",
              "237: intc_1",
              "238: pushbytes \"\"",
              "239: dupn 4",
              "242: bytec_1",
              "245: intc_1",
              "248: bytec_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "285: forLoop_after_for@4:",
              "288: frame_dig 8",
              "289: intc_1",
              "290: extract_uint16",
              "291: frame_bury 1",
              "292: intc_1",
              "293: frame_bury 3",
              "294: frame_dig 6",
              "295: frame_bury 0"
            ],
            [
              "297: forLoop_for_header@5:",
              "300: frame_dig 3",
              "301: frame_dig 1",
              "302: <",
              "303: bz forLoop_after_for@8"
            ],
            [
              "335: forLoop_after_for@8:",
              "338: intc_1",
              "339: frame_bury 5",
              "342: frame_dig 0",
              "343: intc_1",
              "344: extract_uint16",
              "345: frame_bury 2",
              "346: intc_1",
              "347: frame_bury 4"
            ],
            [
              "349: forLoop_for_header@9:",
              "352: frame_dig 4",
              "353: frame_dig 2",
              "354: <",
              "355: bz forLoop_after_for@12"
            ],
            [
              "374: forLoop_after_for@12:",
              "377: frame_dig 5",
              "378: pushint 6",
              "379: ==",
              "380: assert",
              "383: retsub"
            ],
            [
              "98: bytec_0",
              "99: swap",
              "100: concat",
              "101: log",
              "102: intc_0",
              "103: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "403: pushbytes \"Monday\"",
              "404: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "418: pushbytes \"Tuesday\"",
              "419: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "433: pushbytes \"Wednesday\"",
              "434: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "448: pushbytes \"Thursday\"",
              "449: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 45 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "463: pushbytes \"Friday\"",
              "464: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 47 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "478: pushbytes \"Saturday\"",
              "479: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 49 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "481: getDay_after_if_else@18:",
              "484: frame_dig -1",
              "485: pushint 7",
              "486: ==",
              "490: bz getDay_after_if_else@21"
            ],
            [
              "493: pushbytes \"Sunday\"",
              "494: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 50 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "481: getDay_after_if_else@18:",
              "484: frame_dig -1",
              "485: pushint 7",
              "486: ==",
              "490: bz getDay_after_if_else@21"
            ],
            [
              "496: getDay_after_if_else@21:",
              "499: pushbytes \"Invalid day\"",
              "500: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 52 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "525: intc_2"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 55 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "554: pushint 64",
              "557: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 57 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "572: pushint 256",
              "575: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 59 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "590: pushint 1024",
              "593: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 61 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "595: calculateBoxStorageCost_after_if_else@12:",
              "598: frame_dig -2",
              "599: pushbytes \"max\"",
              "600: ==",
              "605: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "608: pushint 32000",
              "611: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 62 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "595: calculateBoxStorageCost_after_if_else@12:",
              "598: frame_dig -2",
              "599: pushbytes \"max\"",
              "600: ==",
              "605: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "613: calculateBoxStorageCost_after_if_else@15:",
              "616: intc_1",
              "617: swap",
              "618: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 65 -> 67 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "19: main_loop_route@8:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "27: callsub loop"
            ],
            [
              "622: loop:",
              "626: proto 0 1",
              "629: pushint 10",
              "632: intc_1"
            ],
            [
              "634: loop_while_top@1:",
              "650: frame_dig 0",
              "651: bz loop_block@9"
            ],
            [
              "654: frame_dig 0",
              "655: pushint 5",
              "656: >",
              "657: bz loop_after_if_else@4"
            ],
            [
              "674: loop_after_if_else@4:",
              "677: frame_dig 0",
              "678: intc_3",
              "679: -",
              "680: dup",
              "681: frame_bury 0",
              "684: frame_dig 1",
              "685: intc_0",
              "686: +",
              "687: frame_bury 1",
              "690: intc_0",
              "691: ==",
              "692: bz loop_while_top@1"
            ],
            [
              "694: loop_block@9:",
              "697: frame_dig 1",
              "698: frame_bury 0",
              "699: retsub"
            ],
            [
              "28: itob",
              "29: bytec_0",
              "30: swap",
              "31: concat",
              "32: log",
              "33: intc_0",
              "34: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "19: main_loop_route@8:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "27: callsub loop"
            ],
            [
              "622: loop:",
              "626: proto 0 1",
              "629: pushint 10",
              "632: intc_1"
            ],
            [
              "634: loop_while_top@1:",
              "650: frame_dig 0",
              "651: bz loop_block@9"
            ],
            [
              "694: loop_block@9:",
              "697: frame_dig 1",
              "698: frame_bury 0",
              "699: retsub"
            ],
            [
              "28: itob",
              "29: bytec_0",
              "30: swap",
              "31: concat",
              "32: log",
              "33: intc_0",
              "34: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 22,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "187: pushbytes \"This account is rich!\"",
              "188: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "190: isRich_else_body@2:",
              "193: frame_dig -1",
              "194: pushint 100",
              "195: >",
              "196: bz isRich_else_body@4"
            ],
            [
              "199: pushbytes \"This account is doing well.\"",
              "200: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "190: isRich_else_body@2:",
              "193: frame_dig -1",
              "194: pushint 100",
              "195: >",
              "196: bz isRich_else_body@4"
            ],
            [
              "202: isRich_else_body@4:",
              "205: pushbytes \"This account is poor :(\"",
              "206: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "105: main_isEven_route@4:",
              "108: txn OnCompletion",
              "109: !",
              "110: assert",
              "111: txn ApplicationID",
              "112: assert",
              "115: txna ApplicationArgs 1",
              "116: btoi",
              "119: callsub isEven"
            ],
            [
              "210: isEven:",
              "214: proto 1 1",
              "217: frame_dig -1",
              "218: intc_3",
              "219: %",
              "220: bnz isEven_ternary_false@2"
            ],
            [
              "221: pushbytes \"Even\"",
              "222: retsub"
            ],
            [
              "120: dup",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: swap",
              "125: concat",
              "126: bytec_0",
              "127: swap",
              "128: concat",
              "129: log",
              "130: intc_0",
              "131: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "105: main_isEven_route@4:",
              "108: txn OnCompletion",
              "109: !",
              "110: assert",
              "111: txn ApplicationID",
              "112: assert",
              "115: txna ApplicationArgs 1",
              "116: btoi",
              "119: callsub isEven"
            ],
            [
              "210: isEven:",
              "214: proto 1 1",
              "217: frame_dig -1",
              "218: intc_3",
              "219: %",
              "220: bnz isEven_ternary_false@2"
            ],
            [
              "224: isEven_ternary_false@2:",
              "227: pushbytes \"Odd\"",
              "228: retsub"
            ],
            [
              "120: dup",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: swap",
              "125: concat",
              "126: bytec_0",
              "127: swap",
              "128: concat",
              "129: log",
              "130: intc_0",
              "131: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "89: main_forLoop_route@5:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub forLoop"
            ],
            [
              "232: forLoop:",
              "236: proto 0 1",
              "237: intc_1",
              "238: pushbytes \"\"",
              "239: dupn 4",
              "242: bytec_1",
              "245: intc_1",
              "248: bytec_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "285: forLoop_after_for@4:",
              "288: frame_dig 8",
              "289: intc_1",
              "290: extract_uint16",
              "291: frame_bury 1",
              "292: intc_1",
              "293: frame_bury 3",
              "294: frame_dig 6",
              "295: frame_bury 0"
            ],
            [
              "297: forLoop_for_header@5:",
              "300: frame_dig 3",
              "301: frame_dig 1",
              "302: <",
              "303: bz forLoop_after_for@8"
            ],
            [
              "335: forLoop_after_for@8:",
              "338: intc_1",
              "339: frame_bury 5",
              "342: frame_dig 0",
              "343: intc_1",
              "344: extract_uint16",
              "345: frame_bury 2",
              "346: intc_1",
              "347: frame_bury 4"
            ],
            [
              "349: forLoop_for_header@9:",
              "352: frame_dig 4",
              "353: frame_dig 2",
              "354: <",
              "355: bz forLoop_after_for@12"
            ],
            [
              "374: forLoop_after_for@12:",
              "377: frame_dig 5",
              "378: pushint 6",
              "379: ==",
              "380: assert",
              "383: retsub"
            ],
            [
              "98: bytec_0",
              "99: swap",
              "100: concat",
              "101: log",
              "102: intc_0",
              "103: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "403: pushbytes \"Monday\"",
              "404: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "418: pushbytes \"Tuesday\"",
              "419: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "433: pushbytes \"Wednesday\"",
              "434: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "448: pushbytes \"Thursday\"",
              "449: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 45 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "463: pushbytes \"Friday\"",
              "464: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 47 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "478: pushbytes \"Saturday\"",
              "479: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 49 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "481: getDay_after_if_else@18:",
              "484: frame_dig -1",
              "485: pushint 7",
              "486: ==",
              "490: bz getDay_after_if_else@21"
            ],
            [
              "493: pushbytes \"Sunday\"",
              "494: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 50 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "481: getDay_after_if_else@18:",
              "484: frame_dig -1",
              "485: pushint 7",
              "486: ==",
              "490: bz getDay_after_if_else@21"
            ],
            [
              "496: getDay_after_if_else@21:",
              "499: pushbytes \"Invalid day\"",
              "500: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 52 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "525: intc_2"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 55 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "554: pushint 64",
              "557: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 57 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "572: pushint 256",
              "575: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 59 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "590: pushint 1024",
              "593: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 61 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "595: calculateBoxStorageCost_after_if_else@12:",
              "598: frame_dig -2",
              "599: pushbytes \"max\"",
              "600: ==",
              "605: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "608: pushint 32000",
              "611: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 62 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "595: calculateBoxStorageCost_after_if_else@12:",
              "598: frame_dig -2",
              "599: pushbytes \"max\"",
              "600: ==",
              "605: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "613: calculateBoxStorageCost_after_if_else@15:",
              "616: intc_1",
              "617: swap",
              "618: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 65 -> 67 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "19: main_loop_route@8:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "27: callsub loop"
            ],
            [
              "622: loop:",
              "626: proto 0 1",
              "629: pushint 10",
              "632: intc_1"
            ],
            [
              "634: loop_while_top@1:",
              "650: frame_dig 0",
              "651: bz loop_block@9"
            ],
            [
              "654: frame_dig 0",
              "655: pushint 5",
              "656: >",
              "657: bz loop_after_if_else@4"
            ],
            [
              "674: loop_after_if_else@4:",
              "677: frame_dig 0",
              "678: intc_3",
              "679: -",
              "680: dup",
              "681: frame_bury 0",
              "684: frame_dig 1",
              "685: intc_0",
              "686: +",
              "687: frame_bury 1",
              "690: intc_0",
              "691: ==",
              "692: bz loop_while_top@1"
            ],
            [
              "694: loop_block@9:",
              "697: frame_dig 1",
              "698: frame_bury 0",
              "699: retsub"
            ],
            [
              "28: itob",
              "29: bytec_0",
              "30: swap",
              "31: concat",
              "32: log",
              "33: intc_0",
              "34: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "19: main_loop_route@8:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "27: callsub loop"
            ],
            [
              "622: loop:",
              "626: proto 0 1",
              "629: pushint 10",
              "632: intc_1"
            ],
            [
              "634: loop_while_top@1:",
              "650: frame_dig 0",
              "651: bz loop_block@9"
            ],
            [
              "694: loop_block@9:",
              "697: frame_dig 1",
              "698: frame_bury 0",
              "699: retsub"
            ],
            [
              "28: itob",
              "29: bytec_0",
              "30: swap",
              "31: concat",
              "32: log",
              "33: intc_0",
              "34: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 22,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "187: pushbytes \"This account is rich!\"",
              "188: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "190: isRich_else_body@2:",
              "193: frame_dig -1",
              "194: pushint 100",
              "195: >",
              "196: bz isRich_else_body@4"
            ],
            [
              "199: pushbytes \"This account is doing well.\"",
              "200: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "190: isRich_else_body@2:",
              "193: frame_dig -1",
              "194: pushint 100",
              "195: >",
              "196: bz isRich_else_body@4"
            ],
            [
              "202: isRich_else_body@4:",
              "205: pushbytes \"This account is poor :(\"",
              "206: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "105: main_isEven_route@4:",
              "108: txn OnCompletion",
              "109: !",
              "110: assert",
              "111: txn ApplicationID",
              "112: assert",
              "115: txna ApplicationArgs 1",
              "116: btoi",
              "119: callsub isEven"
            ],
            [
              "210: isEven:",
              "214: proto 1 1",
              "217: frame_dig -1",
              "218: intc_3",
              "219: %",
              "220: bnz isEven_ternary_false@2"
            ],
            [
              "221: pushbytes \"Even\"",
              "222: retsub"
            ],
            [
              "120: dup",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: swap",
              "125: concat",
              "126: bytec_0",
              "127: swap",
              "128: concat",
              "129: log",
              "130: intc_0",
              "131: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "105: main_isEven_route@4:",
              "108: txn OnCompletion",
              "109: !",
              "110: assert",
              "111: txn ApplicationID",
              "112: assert",
              "115: txna ApplicationArgs 1",
              "116: btoi",
              "119: callsub isEven"
            ],
            [
              "210: isEven:",
              "214: proto 1 1",
              "217: frame_dig -1",
              "218: intc_3",
              "219: %",
              "220: bnz isEven_ternary_false@2"
            ],
            [
              "224: isEven_ternary_false@2:",
              "227: pushbytes \"Odd\"",
              "228: retsub"
            ],
            [
              "120: dup",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: swap",
              "125: concat",
              "126: bytec_0",
              "127: swap",
              "128: concat",
              "129: log",
              "130: intc_0",
              "131: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "89: main_forLoop_route@5:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub forLoop"
            ],
            [
              "232: forLoop:",
              "236: proto 0 1",
              "237: intc_1",
              "238: pushbytes \"\"",
              "239: dupn 4",
              "242: bytec_1",
              "245: intc_1",
              "248: bytec_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "285: forLoop_after_for@4:",
              "288: frame_dig 8",
              "289: intc_1",
              "290: extract_uint16",
              "291: frame_bury 1",
              "292: intc_1",
              "293: frame_bury 3",
              "294: frame_dig 6",
              "295: frame_bury 0"
            ],
            [
              "297: forLoop_for_header@5:",
              "300: frame_dig 3",
              "301: frame_dig 1",
              "302: <",
              "303: bz forLoop_after_for@8"
            ],
            [
              "335: forLoop_after_for@8:",
              "338: intc_1",
              "339: frame_bury 5",
              "342: frame_dig 0",
              "343: intc_1",
              "344: extract_uint16",
              "345: frame_bury 2",
              "346: intc_1",
              "347: frame_bury 4"
            ],
            [
              "349: forLoop_for_header@9:",
              "352: frame_dig 4",
              "353: frame_dig 2",
              "354: <",
              "355: bz forLoop_after_for@12"
            ],
            [
              "374: forLoop_after_for@12:",
              "377: frame_dig 5",
              "378: pushint 6",
              "379: ==",
              "380: assert",
              "383: retsub"
            ],
            [
              "98: bytec_0",
              "99: swap",
              "100: concat",
              "101: log",
              "102: intc_0",
              "103: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "403: pushbytes \"Monday\"",
              "404: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "418: pushbytes \"Tuesday\"",
              "419: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "433: pushbytes \"Wednesday\"",
              "434: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "448: pushbytes \"Thursday\"",
              "449: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 45 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "463: pushbytes \"Friday\"",
              "464: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 47 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "478: pushbytes \"Saturday\"",
              "479: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 49 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "481: getDay_after_if_else@18:",
              "484: frame_dig -1",
              "485: pushint 7",
              "486: ==",
              "490: bz getDay_after_if_else@21"
            ],
            [
              "493: pushbytes \"Sunday\"",
              "494: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 50 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "481: getDay_after_if_else@18:",
              "484: frame_dig -1",
              "485: pushint 7",
              "486: ==",
              "490: bz getDay_after_if_else@21"
            ],
            [
              "496: getDay_after_if_else@21:",
              "499: pushbytes \"Invalid day\"",
              "500: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 52 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "525: intc_2"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 55 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "554: pushint 64",
              "557: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 57 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "572: pushint 256",
              "575: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 59 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "590: pushint 1024",
              "593: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 61 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "595: calculateBoxStorageCost_after_if_else@12:",
              "598: frame_dig -2",
              "599: pushbytes \"max\"",
              "600: ==",
              "605: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "608: pushint 32000",
              "611: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 62 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "595: calculateBoxStorageCost_after_if_else@12:",
              "598: frame_dig -2",
              "599: pushbytes \"max\"",
              "600: ==",
              "605: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "613: calculateBoxStorageCost_after_if_else@15:",
              "616: intc_1",
              "617: swap",
              "618: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 65 -> 67 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "19: main_loop_route@8:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "27: callsub loop"
            ],
            [
              "622: loop:",
              "626: proto 0 1",
              "629: pushint 10",
              "632: intc_1"
            ],
            [
              "634: loop_while_top@1:",
              "650: frame_dig 0",
              "651: bz loop_block@9"
            ],
            [
              "654: frame_dig 0",
              "655: pushint 5",
              "656: >",
              "657: bz loop_after_if_else@4"
            ],
            [
              "674: loop_after_if_else@4:",
              "677: frame_dig 0",
              "678: intc_3",
              "679: -",
              "680: dup",
              "681: frame_bury 0",
              "684: frame_dig 1",
              "685: intc_0",
              "686: +",
              "687: frame_bury 1",
              "690: intc_0",
              "691: ==",
              "692: bz loop_while_top@1"
            ],
            [
              "694: loop_block@9:",
              "697: frame_dig 1",
              "698: frame_bury 0",
              "699: retsub"
            ],
            [
              "28: itob",
              "29: bytec_0",
              "30: swap",
              "31: concat",
              "32: log",
              "33: intc_0",
              "34: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "19: main_loop_route@8:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "27: callsub loop"
            ],
            [
              "622: loop:",
              "626: proto 0 1",
              "629: pushint 10",
              "632: intc_1"
            ],
            [
              "634: loop_while_top@1:",
              "650: frame_dig 0",
              "651: bz loop_block@9"
            ],
            [
              "694: loop_block@9:",
              "697: frame_dig 1",
              "698: frame_bury 0",
              "699: retsub"
            ],
            [
              "28: itob",
              "29: bytec_0",
              "30: swap",
              "31: concat",
              "32: log",
              "33: intc_0",
              "34: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 23,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "187: pushbytes \"This account is rich!\"",
              "188: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "190: isRich_else_body@2:",
              "193: frame_dig -1",
              "194: pushint 100",
              "195: >",
              "196: bz isRich_else_body@4"
            ],
            [
              "199: pushbytes \"This account is doing well.\"",
              "200: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "190: isRich_else_body@2:",
              "193: frame_dig -1",
              "194: pushint 100",
              "195: >",
              "196: bz isRich_else_body@4"
            ],
            [
              "202: isRich_else_body@4:",
              "205: pushbytes \"This account is poor :(\"",
              "206: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "105: main_isEven_route@4:",
              "108: txn OnCompletion",
              "109: !",
              "110: assert",
              "111: txn ApplicationID",
              "112: assert",
              "115: txna ApplicationArgs 1",
              "116: btoi",
              "119: callsub isEven"
            ],
            [
              "210: isEven:",
              "214: proto 1 1",
              "217: frame_dig -1",
              "218: intc_3",
              "219: %",
              "220: bnz isEven_ternary_false@2"
            ],
            [
              "221: pushbytes \"Even\"",
              "222: retsub"
            ],
            [
              "120: dup",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: swap",
              "125: concat",
              "126: bytec_0",
              "127: swap",
              "128: concat",
              "129: log",
              "130: intc_0",
              "131: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "105: main_isEven_route@4:",
              "108: txn OnCompletion",
              "109: !",
              "110: assert",
              "111: txn ApplicationID",
              "112: assert",
              "115: txna ApplicationArgs 1",
              "116: btoi",
              "119: callsub isEven"
            ],
            [
              "210: isEven:",
              "214: proto 1 1",
              "217: frame_dig -1",
              "218: intc_3",
              "219: %",
              "220: bnz isEven_ternary_false@2"
            ],
            [
              "224: isEven_ternary_false@2:",
              "227: pushbytes \"Odd\"",
              "228: retsub"
            ],
            [
              "120: dup",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: swap",
              "125: concat",
              "126: bytec_0",
              "127: swap",
              "128: concat",
              "129: log",
              "130: intc_0",
              "131: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "89: main_forLoop_route@5:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub forLoop"
            ],
            [
              "232: forLoop:",
              "236: proto 0 1",
              "237: intc_1",
              "238: pushbytes \"\"",
              "239: dupn 4",
              "242: bytec_1",
              "245: intc_1",
              "248: bytec_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "285: forLoop_after_for@4:",
              "288: frame_dig 8",
              "289: intc_1",
              "290: extract_uint16",
              "291: frame_bury 1",
              "292: intc_1",
              "293: frame_bury 3",
              "294: frame_dig 6",
              "295: frame_bury 0"
            ],
            [
              "297: forLoop_for_header@5:",
              "300: frame_dig 3",
              "301: frame_dig 1",
              "302: <",
              "303: bz forLoop_after_for@8"
            ],
            [
              "335: forLoop_after_for@8:",
              "338: intc_1",
              "339: frame_bury 5",
              "342: frame_dig 0",
              "343: intc_1",
              "344: extract_uint16",
              "345: frame_bury 2",
              "346: intc_1",
              "347: frame_bury 4"
            ],
            [
              "349: forLoop_for_header@9:",
              "352: frame_dig 4",
              "353: frame_dig 2",
              "354: <",
              "355: bz forLoop_after_for@12"
            ],
            [
              "374: forLoop_after_for@12:",
              "377: frame_dig 5",
              "378: pushint 6",
              "379: ==",
              "380: assert",
              "383: retsub"
            ],
            [
              "98: bytec_0",
              "99: swap",
              "100: concat",
              "101: log",
              "102: intc_0",
              "103: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "403: pushbytes \"Monday\"",
              "404: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "418: pushbytes \"Tuesday\"",
              "419: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "433: pushbytes \"Wednesday\"",
              "434: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "448: pushbytes \"Thursday\"",
              "449: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 45 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "463: pushbytes \"Friday\"",
              "464: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 47 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "478: pushbytes \"Saturday\"",
              "479: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 49 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "481: getDay_after_if_else@18:",
              "484: frame_dig -1",
              "485: pushint 7",
              "486: ==",
              "490: bz getDay_after_if_else@21"
            ],
            [
              "493: pushbytes \"Sunday\"",
              "494: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 50 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "481: getDay_after_if_else@18:",
              "484: frame_dig -1",
              "485: pushint 7",
              "486: ==",
              "490: bz getDay_after_if_else@21"
            ],
            [
              "496: getDay_after_if_else@21:",
              "499: pushbytes \"Invalid day\"",
              "500: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 52 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "525: intc_2"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 55 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "554: pushint 64",
              "557: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 57 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "572: pushint 256",
              "575: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 59 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "590: pushint 1024",
              "593: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 61 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "595: calculateBoxStorageCost_after_if_else@12:",
              "598: frame_dig -2",
              "599: pushbytes \"max\"",
              "600: ==",
              "605: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "608: pushint 32000",
              "611: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 62 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "595: calculateBoxStorageCost_after_if_else@12:",
              "598: frame_dig -2",
              "599: pushbytes \"max\"",
              "600: ==",
              "605: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "613: calculateBoxStorageCost_after_if_else@15:",
              "616: intc_1",
              "617: swap",
              "618: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 65 -> 67 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "19: main_loop_route@8:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "27: callsub loop"
            ],
            [
              "622: loop:",
              "626: proto 0 1",
              "629: pushint 10",
              "632: intc_1"
            ],
            [
              "634: loop_while_top@1:",
              "650: frame_dig 0",
              "651: bz loop_block@9"
            ],
            [
              "654: frame_dig 0",
              "655: pushint 5",
              "656: >",
              "657: bz loop_after_if_else@4"
            ],
            [
              "674: loop_after_if_else@4:",
              "677: frame_dig 0",
              "678: intc_3",
              "679: -",
              "680: dup",
              "681: frame_bury 0",
              "684: frame_dig 1",
              "685: intc_0",
              "686: +",
              "687: frame_bury 1",
              "690: intc_0",
              "691: ==",
              "692: bz loop_while_top@1"
            ],
            [
              "694: loop_block@9:",
              "697: frame_dig 1",
              "698: frame_bury 0",
              "699: retsub"
            ],
            [
              "28: itob",
              "29: bytec_0",
              "30: swap",
              "31: concat",
              "32: log",
              "33: intc_0",
              "34: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "19: main_loop_route@8:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "27: callsub loop"
            ],
            [
              "622: loop:",
              "626: proto 0 1",
              "629: pushint 10",
              "632: intc_1"
            ],
            [
              "634: loop_while_top@1:",
              "650: frame_dig 0",
              "651: bz loop_block@9"
            ],
            [
              "694: loop_block@9:",
              "697: frame_dig 1",
              "698: frame_bury 0",
              "699: retsub"
            ],
            [
              "28: itob",
              "29: bytec_0",
              "30: swap",
              "31: concat",
              "32: log",
              "33: intc_0",
              "34: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "161: main_bare_routing@11:",
              "164: txn OnCompletion",
              "165: bnz main_after_if_else@15"
            ],
            [
              "166: txn ApplicationID",
              "167: !",
              "168: assert",
              "169: intc_0",
              "170: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 23,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "187: pushbytes \"This account is rich!\"",
              "188: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "190: isRich_else_body@2:",
              "193: frame_dig -1",
              "194: pushint 100",
              "195: >",
              "196: bz isRich_else_body@4"
            ],
            [
              "199: pushbytes \"This account is doing well.\"",
              "200: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "133: main_isRich_route@3:",
              "136: txn OnCompletion",
              "137: !",
              "138: assert",
              "139: txn ApplicationID",
              "140: assert",
              "143: txna ApplicationArgs 1",
              "144: btoi",
              "147: callsub isRich"
            ],
            [
              "174: isRich:",
              "178: proto 1 1",
              "181: frame_dig -1",
              "182: pushint 1000",
              "183: >",
              "184: bz isRich_else_body@2"
            ],
            [
              "190: isRich_else_body@2:",
              "193: frame_dig -1",
              "194: pushint 100",
              "195: >",
              "196: bz isRich_else_body@4"
            ],
            [
              "202: isRich_else_body@4:",
              "205: pushbytes \"This account is poor :(\"",
              "206: retsub"
            ],
            [
              "148: dup",
              "149: len",
              "150: itob",
              "151: extract 6 2",
              "152: swap",
              "153: concat",
              "154: bytec_0",
              "155: swap",
              "156: concat",
              "157: log",
              "158: intc_0",
              "159: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "105: main_isEven_route@4:",
              "108: txn OnCompletion",
              "109: !",
              "110: assert",
              "111: txn ApplicationID",
              "112: assert",
              "115: txna ApplicationArgs 1",
              "116: btoi",
              "119: callsub isEven"
            ],
            [
              "210: isEven:",
              "214: proto 1 1",
              "217: frame_dig -1",
              "218: intc_3",
              "219: %",
              "220: bnz isEven_ternary_false@2"
            ],
            [
              "221: pushbytes \"Even\"",
              "222: retsub"
            ],
            [
              "120: dup",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: swap",
              "125: concat",
              "126: bytec_0",
              "127: swap",
              "128: concat",
              "129: log",
              "130: intc_0",
              "131: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "105: main_isEven_route@4:",
              "108: txn OnCompletion",
              "109: !",
              "110: assert",
              "111: txn ApplicationID",
              "112: assert",
              "115: txna ApplicationArgs 1",
              "116: btoi",
              "119: callsub isEven"
            ],
            [
              "210: isEven:",
              "214: proto 1 1",
              "217: frame_dig -1",
              "218: intc_3",
              "219: %",
              "220: bnz isEven_ternary_false@2"
            ],
            [
              "224: isEven_ternary_false@2:",
              "227: pushbytes \"Odd\"",
              "228: retsub"
            ],
            [
              "120: dup",
              "121: len",
              "122: itob",
              "123: extract 6 2",
              "124: swap",
              "125: concat",
              "126: bytec_0",
              "127: swap",
              "128: concat",
              "129: log",
              "130: intc_0",
              "131: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "89: main_forLoop_route@5:",
              "92: txn OnCompletion",
              "93: !",
              "94: assert",
              "95: txn ApplicationID",
              "96: assert",
              "97: callsub forLoop"
            ],
            [
              "232: forLoop:",
              "236: proto 0 1",
              "237: intc_1",
              "238: pushbytes \"\"",
              "239: dupn 4",
              "242: bytec_1",
              "245: intc_1",
              "248: bytec_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "285: forLoop_after_for@4:",
              "288: frame_dig 8",
              "289: intc_1",
              "290: extract_uint16",
              "291: frame_bury 1",
              "292: intc_1",
              "293: frame_bury 3",
              "294: frame_dig 6",
              "295: frame_bury 0"
            ],
            [
              "297: forLoop_for_header@5:",
              "300: frame_dig 3",
              "301: frame_dig 1",
              "302: <",
              "303: bz forLoop_after_for@8"
            ],
            [
              "335: forLoop_after_for@8:",
              "338: intc_1",
              "339: frame_bury 5",
              "342: frame_dig 0",
              "343: intc_1",
              "344: extract_uint16",
              "345: frame_bury 2",
              "346: intc_1",
              "347: frame_bury 4"
            ],
            [
              "349: forLoop_for_header@9:",
              "352: frame_dig 4",
              "353: frame_dig 2",
              "354: <",
              "355: bz forLoop_after_for@12"
            ],
            [
              "374: forLoop_after_for@12:",
              "377: frame_dig 5",
              "378: pushint 6",
              "379: ==",
              "380: assert",
              "383: retsub"
            ],
            [
              "98: bytec_0",
              "99: swap",
              "100: concat",
              "101: log",
              "102: intc_0",
              "103: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "403: pushbytes \"Monday\"",
              "404: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "418: pushbytes \"Tuesday\"",
              "419: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "433: pushbytes \"Wednesday\"",
              "434: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "448: pushbytes \"Thursday\"",
              "449: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 45 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "463: pushbytes \"Friday\"",
              "464: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 47 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "478: pushbytes \"Saturday\"",
              "479: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 49 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "481: getDay_after_if_else@18:",
              "484: frame_dig -1",
              "485: pushint 7",
              "486: ==",
              "490: bz getDay_after_if_else@21"
            ],
            [
              "493: pushbytes \"Sunday\"",
              "494: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 50 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "61: main_getDay_route@6:",
              "64: txn OnCompletion",
              "65: !",
              "66: assert",
              "67: txn ApplicationID",
              "68: assert",
              "71: txna ApplicationArgs 1",
              "72: btoi",
              "75: callsub getDay"
            ],
            [
              "387: getDay:",
              "391: proto 1 1",
              "394: frame_dig -1",
              "395: intc_0",
              "396: ==",
              "400: bz getDay_after_if_else@3"
            ],
            [
              "406: getDay_after_if_else@3:",
              "409: frame_dig -1",
              "410: intc_3",
              "411: ==",
              "415: bz getDay_after_if_else@6"
            ],
            [
              "421: getDay_after_if_else@6:",
              "424: frame_dig -1",
              "425: pushint 3",
              "426: ==",
              "430: bz getDay_after_if_else@9"
            ],
            [
              "436: getDay_after_if_else@9:",
              "439: frame_dig -1",
              "440: pushint 4",
              "441: ==",
              "445: bz getDay_after_if_else@12"
            ],
            [
              "451: getDay_after_if_else@12:",
              "454: frame_dig -1",
              "455: pushint 5",
              "456: ==",
              "460: bz getDay_after_if_else@15"
            ],
            [
              "466: getDay_after_if_else@15:",
              "469: frame_dig -1",
              "470: pushint 6",
              "471: ==",
              "475: bz getDay_after_if_else@18"
            ],
            [
              "481: getDay_after_if_else@18:",
              "484: frame_dig -1",
              "485: pushint 7",
              "486: ==",
              "490: bz getDay_after_if_else@21"
            ],
            [
              "496: getDay_after_if_else@21:",
              "499: pushbytes \"Invalid day\"",
              "500: retsub"
            ],
            [
              "76: dup",
              "77: len",
              "78: itob",
              "79: extract 6 2",
              "80: swap",
              "81: concat",
              "82: bytec_0",
              "83: swap",
              "84: concat",
              "85: log",
              "86: intc_0",
              "87: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 52 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "525: intc_2"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 55 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "554: pushint 64",
              "557: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 57 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "572: pushint 256",
              "575: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 59 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "590: pushint 1024",
              "593: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 61 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "595: calculateBoxStorageCost_after_if_else@12:",
              "598: frame_dig -2",
              "599: pushbytes \"max\"",
              "600: ==",
              "605: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "608: pushint 32000",
              "611: b calculateBoxStorageCost_block@17"
            ],
            [
              "527: calculateBoxStorageCost_block@17:",
              "530: frame_dig 0",
              "531: +",
              "532: pushint 400",
              "533: *",
              "534: pushint 2500",
              "535: +",
              "538: swap",
              "539: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 62 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "36: main_calculateBoxStorageCost_route@7:",
              "39: txn OnCompletion",
              "40: !",
              "41: assert",
              "42: txn ApplicationID",
              "43: assert",
              "46: txna ApplicationArgs 1",
              "47: extract 2 0",
              "48: txna ApplicationArgs 2",
              "49: extract 2 0",
              "52: callsub calculateBoxStorageCost"
            ],
            [
              "504: calculateBoxStorageCost:",
              "508: proto 2 1",
              "511: frame_dig -1",
              "512: len",
              "515: frame_dig -2",
              "516: pushbytes \"xs\"",
              "517: ==",
              "522: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "541: calculateBoxStorageCost_after_if_else@3:",
              "544: frame_dig -2",
              "545: pushbytes \"sm\"",
              "546: ==",
              "551: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "559: calculateBoxStorageCost_after_if_else@6:",
              "562: frame_dig -2",
              "563: pushbytes \"md\"",
              "564: ==",
              "569: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "577: calculateBoxStorageCost_after_if_else@9:",
              "580: frame_dig -2",
              "581: pushbytes \"lg\"",
              "582: ==",
              "587: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "595: calculateBoxStorageCost_after_if_else@12:",
              "598: frame_dig -2",
              "599: pushbytes \"max\"",
              "600: ==",
              "605: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "613: calculateBoxStorageCost_after_if_else@15:",
              "616: intc_1",
              "617: swap",
              "618: retsub"
            ],
            [
              "53: itob",
              "54: bytec_0",
              "55: swap",
              "56: concat",
              "57: log",
              "58: intc_0",
              "59: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 65 -> 67 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "19: main_loop_route@8:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "27: callsub loop"
            ],
            [
              "622: loop:",
              "626: proto 0 1",
              "629: pushint 10",
              "632: intc_1"
            ],
            [
              "634: loop_while_top@1:",
              "650: frame_dig 0",
              "651: bz loop_block@9"
            ],
            [
              "654: frame_dig 0",
              "655: pushint 5",
              "656: >",
              "657: bz loop_after_if_else@4"
            ],
            [
              "674: loop_after_if_else@4:",
              "677: frame_dig 0",
              "678: intc_3",
              "679: -",
              "680: dup",
              "681: frame_bury 0",
              "684: frame_dig 1",
              "685: intc_0",
              "686: +",
              "687: frame_bury 1",
              "690: intc_0",
              "691: ==",
              "692: bz loop_while_top@1"
            ],
            [
              "694: loop_block@9:",
              "697: frame_dig 1",
              "698: frame_bury 0",
              "699: retsub"
            ],
            [
              "28: itob",
              "29: bytec_0",
              "30: swap",
              "31: concat",
              "32: log",
              "33: intc_0",
              "34: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "19: main_loop_route@8:",
              "22: txn OnCompletion",
              "23: !",
              "24: assert",
              "25: txn ApplicationID",
              "26: assert",
              "27: callsub loop"
            ],
            [
              "622: loop:",
              "626: proto 0 1",
              "629: pushint 10",
              "632: intc_1"
            ],
            [
              "634: loop_while_top@1:",
              "650: frame_dig 0",
              "651: bz loop_block@9"
            ],
            [
              "694: loop_block@9:",
              "697: frame_dig 1",
              "698: frame_bury 0",
              "699: retsub"
            ],
            [
              "28: itob",
              "29: bytec_0",
              "30: swap",
              "31: concat",
              "32: log",
              "33: intc_0",
              "34: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "161: main_bare_routing@11:",
              "164: txn OnCompletion",
              "165: bnz main_after_if_else@15"
            ],
            [
              "166: txn ApplicationID",
              "167: !",
              "168: assert",
              "169: intc_0",
              "170: return"
            ]
          ]
        }
      ]
    }
  ]
}