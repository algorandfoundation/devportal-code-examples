{
  "success": false,
  "error": null,
  "result": [
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"unprotected-deletable\", Impact: High, Confidence: High\nDescription: Unprotected Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-deletable-application\n",
      "check": "unprotected-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid deletable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "190: pushbytes \"This account is rich!\"",
              "191: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "202: pushbytes \"This account is doing well.\"",
              "203: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "205: isRich_else_body@4:",
              "208: pushbytes \"This account is poor :(\"",
              "209: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "224: pushbytes \"Even\"",
              "225: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "227: isEven_ternary_false@2:",
              "230: pushbytes \"Odd\"",
              "231: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "92: main_forLoop_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "100: callsub forLoop"
            ],
            [
              "235: forLoop:",
              "239: proto 0 1",
              "240: intc_1",
              "241: pushbytes \"\"",
              "242: dupn 4",
              "245: bytec_1",
              "248: intc_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "286: forLoop_after_for@4:",
              "289: bytec_1",
              "290: frame_bury 0",
              "293: frame_dig 6",
              "294: intc_1",
              "295: extract_uint16",
              "296: frame_bury 1",
              "297: intc_1",
              "298: frame_bury 3"
            ],
            [
              "300: forLoop_for_header@5:",
              "303: frame_dig 3",
              "304: frame_dig 1",
              "305: <",
              "306: bz forLoop_after_for@8"
            ],
            [
              "339: forLoop_after_for@8:",
              "342: intc_1",
              "343: frame_bury 5",
              "346: frame_dig 0",
              "347: intc_1",
              "348: extract_uint16",
              "349: frame_bury 2",
              "350: intc_1",
              "351: frame_bury 4"
            ],
            [
              "353: forLoop_for_header@9:",
              "356: frame_dig 4",
              "357: frame_dig 2",
              "358: <",
              "359: bz forLoop_after_for@12"
            ],
            [
              "378: forLoop_after_for@12:",
              "381: frame_dig 5",
              "382: pushint 6",
              "383: ==",
              "384: assert",
              "387: retsub"
            ],
            [
              "101: bytec_0",
              "102: swap",
              "103: concat",
              "104: log",
              "105: intc_0",
              "106: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "407: pushbytes \"Monday\"",
              "408: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "422: pushbytes \"Tuesday\"",
              "423: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "437: pushbytes \"Wednesday\"",
              "438: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "452: pushbytes \"Thursday\"",
              "453: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 45 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "467: pushbytes \"Friday\"",
              "468: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 47 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "482: pushbytes \"Saturday\"",
              "483: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 49 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "485: getDay_after_if_else@18:",
              "488: frame_dig -1",
              "489: pushint 7",
              "490: ==",
              "494: bz getDay_after_if_else@21"
            ],
            [
              "497: pushbytes \"Sunday\"",
              "498: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 50 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "485: getDay_after_if_else@18:",
              "488: frame_dig -1",
              "489: pushint 7",
              "490: ==",
              "494: bz getDay_after_if_else@21"
            ],
            [
              "500: getDay_after_if_else@21:",
              "503: pushbytes \"Invalid day\"",
              "504: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 52 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "529: intc_2"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 55 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "566: pushint 64",
              "569: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 57 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "584: pushint 256",
              "587: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 59 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "602: pushint 1024",
              "605: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 61 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "607: calculateBoxStorageCost_after_if_else@12:",
              "610: frame_dig -2",
              "611: pushbytes \"max\"",
              "612: ==",
              "617: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "620: pushint 32000",
              "623: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 62 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "607: calculateBoxStorageCost_after_if_else@12:",
              "610: frame_dig -2",
              "611: pushbytes \"max\"",
              "612: ==",
              "617: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "625: calculateBoxStorageCost_after_if_else@15:",
              "628: intc_1",
              "629: swap",
              "630: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 65 -> 67 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "634: loop:",
              "638: proto 0 1",
              "641: pushint 10",
              "644: intc_1"
            ],
            [
              "646: loop_while_top@1:",
              "662: frame_dig 0",
              "663: bz loop_block@9"
            ],
            [
              "666: frame_dig 0",
              "667: pushint 5",
              "668: >",
              "669: bz loop_after_if_else@4"
            ],
            [
              "686: loop_after_if_else@4:",
              "689: frame_dig 0",
              "690: intc_3",
              "691: -",
              "692: dup",
              "693: frame_bury 0",
              "696: frame_dig 1",
              "697: intc_0",
              "698: +",
              "699: frame_bury 1",
              "702: intc_0",
              "703: ==",
              "704: bz loop_while_top@1"
            ],
            [
              "706: loop_block@9:",
              "709: frame_dig 1",
              "710: frame_bury 0",
              "711: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "634: loop:",
              "638: proto 0 1",
              "641: pushint 10",
              "644: intc_1"
            ],
            [
              "646: loop_while_top@1:",
              "662: frame_dig 0",
              "663: bz loop_block@9"
            ],
            [
              "706: loop_block@9:",
              "709: frame_dig 1",
              "710: frame_bury 0",
              "711: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"unprotected-updatable\", Impact: High, Confidence: High\nDescription: Unprotected Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#unprotected-updatable-application\n",
      "check": "unprotected-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid upgradable applications.\n- Add access controls to the vulnerable method.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "190: pushbytes \"This account is rich!\"",
              "191: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "202: pushbytes \"This account is doing well.\"",
              "203: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "205: isRich_else_body@4:",
              "208: pushbytes \"This account is poor :(\"",
              "209: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "224: pushbytes \"Even\"",
              "225: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "227: isEven_ternary_false@2:",
              "230: pushbytes \"Odd\"",
              "231: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "92: main_forLoop_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "100: callsub forLoop"
            ],
            [
              "235: forLoop:",
              "239: proto 0 1",
              "240: intc_1",
              "241: pushbytes \"\"",
              "242: dupn 4",
              "245: bytec_1",
              "248: intc_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "286: forLoop_after_for@4:",
              "289: bytec_1",
              "290: frame_bury 0",
              "293: frame_dig 6",
              "294: intc_1",
              "295: extract_uint16",
              "296: frame_bury 1",
              "297: intc_1",
              "298: frame_bury 3"
            ],
            [
              "300: forLoop_for_header@5:",
              "303: frame_dig 3",
              "304: frame_dig 1",
              "305: <",
              "306: bz forLoop_after_for@8"
            ],
            [
              "339: forLoop_after_for@8:",
              "342: intc_1",
              "343: frame_bury 5",
              "346: frame_dig 0",
              "347: intc_1",
              "348: extract_uint16",
              "349: frame_bury 2",
              "350: intc_1",
              "351: frame_bury 4"
            ],
            [
              "353: forLoop_for_header@9:",
              "356: frame_dig 4",
              "357: frame_dig 2",
              "358: <",
              "359: bz forLoop_after_for@12"
            ],
            [
              "378: forLoop_after_for@12:",
              "381: frame_dig 5",
              "382: pushint 6",
              "383: ==",
              "384: assert",
              "387: retsub"
            ],
            [
              "101: bytec_0",
              "102: swap",
              "103: concat",
              "104: log",
              "105: intc_0",
              "106: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "407: pushbytes \"Monday\"",
              "408: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "422: pushbytes \"Tuesday\"",
              "423: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "437: pushbytes \"Wednesday\"",
              "438: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "452: pushbytes \"Thursday\"",
              "453: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 45 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "467: pushbytes \"Friday\"",
              "468: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 47 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "482: pushbytes \"Saturday\"",
              "483: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 49 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "485: getDay_after_if_else@18:",
              "488: frame_dig -1",
              "489: pushint 7",
              "490: ==",
              "494: bz getDay_after_if_else@21"
            ],
            [
              "497: pushbytes \"Sunday\"",
              "498: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 50 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "485: getDay_after_if_else@18:",
              "488: frame_dig -1",
              "489: pushint 7",
              "490: ==",
              "494: bz getDay_after_if_else@21"
            ],
            [
              "500: getDay_after_if_else@21:",
              "503: pushbytes \"Invalid day\"",
              "504: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 52 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "529: intc_2"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 55 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "566: pushint 64",
              "569: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 57 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "584: pushint 256",
              "587: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 59 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "602: pushint 1024",
              "605: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 61 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "607: calculateBoxStorageCost_after_if_else@12:",
              "610: frame_dig -2",
              "611: pushbytes \"max\"",
              "612: ==",
              "617: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "620: pushint 32000",
              "623: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 62 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "607: calculateBoxStorageCost_after_if_else@12:",
              "610: frame_dig -2",
              "611: pushbytes \"max\"",
              "612: ==",
              "617: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "625: calculateBoxStorageCost_after_if_else@15:",
              "628: intc_1",
              "629: swap",
              "630: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 65 -> 67 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "634: loop:",
              "638: proto 0 1",
              "641: pushint 10",
              "644: intc_1"
            ],
            [
              "646: loop_while_top@1:",
              "662: frame_dig 0",
              "663: bz loop_block@9"
            ],
            [
              "666: frame_dig 0",
              "667: pushint 5",
              "668: >",
              "669: bz loop_after_if_else@4"
            ],
            [
              "686: loop_after_if_else@4:",
              "689: frame_dig 0",
              "690: intc_3",
              "691: -",
              "692: dup",
              "693: frame_bury 0",
              "696: frame_dig 1",
              "697: intc_0",
              "698: +",
              "699: frame_bury 1",
              "702: intc_0",
              "703: ==",
              "704: bz loop_while_top@1"
            ],
            [
              "706: loop_block@9:",
              "709: frame_dig 1",
              "710: frame_bury 0",
              "711: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "634: loop:",
              "638: proto 0 1",
              "641: pushint 10",
              "644: intc_1"
            ],
            [
              "646: loop_while_top@1:",
              "662: frame_dig 0",
              "663: bz loop_block@9"
            ],
            [
              "706: loop_block@9:",
              "709: frame_dig 1",
              "710: frame_bury 0",
              "711: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"can-close-account\", Impact: High, Confidence: High\nDescription: Missing CloseRemainderTo field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-closeremainderto-field-validation\n",
      "check": "can-close-account",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `CloseRemainderTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 2,
      "description": "\nCheck: \"can-close-asset\", Impact: High, Confidence: High\nDescription: Missing AssetCloseTo Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-assetcloseto-field-validation\n",
      "check": "can-close-asset",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `AssetCloseTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"is-deletable\", Impact: High, Confidence: High\nDescription: Deletable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#deletable-application\n",
      "check": "is-deletable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `DeleteApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "190: pushbytes \"This account is rich!\"",
              "191: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "202: pushbytes \"This account is doing well.\"",
              "203: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "205: isRich_else_body@4:",
              "208: pushbytes \"This account is poor :(\"",
              "209: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "224: pushbytes \"Even\"",
              "225: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "227: isEven_ternary_false@2:",
              "230: pushbytes \"Odd\"",
              "231: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "92: main_forLoop_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "100: callsub forLoop"
            ],
            [
              "235: forLoop:",
              "239: proto 0 1",
              "240: intc_1",
              "241: pushbytes \"\"",
              "242: dupn 4",
              "245: bytec_1",
              "248: intc_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "286: forLoop_after_for@4:",
              "289: bytec_1",
              "290: frame_bury 0",
              "293: frame_dig 6",
              "294: intc_1",
              "295: extract_uint16",
              "296: frame_bury 1",
              "297: intc_1",
              "298: frame_bury 3"
            ],
            [
              "300: forLoop_for_header@5:",
              "303: frame_dig 3",
              "304: frame_dig 1",
              "305: <",
              "306: bz forLoop_after_for@8"
            ],
            [
              "339: forLoop_after_for@8:",
              "342: intc_1",
              "343: frame_bury 5",
              "346: frame_dig 0",
              "347: intc_1",
              "348: extract_uint16",
              "349: frame_bury 2",
              "350: intc_1",
              "351: frame_bury 4"
            ],
            [
              "353: forLoop_for_header@9:",
              "356: frame_dig 4",
              "357: frame_dig 2",
              "358: <",
              "359: bz forLoop_after_for@12"
            ],
            [
              "378: forLoop_after_for@12:",
              "381: frame_dig 5",
              "382: pushint 6",
              "383: ==",
              "384: assert",
              "387: retsub"
            ],
            [
              "101: bytec_0",
              "102: swap",
              "103: concat",
              "104: log",
              "105: intc_0",
              "106: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "407: pushbytes \"Monday\"",
              "408: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "422: pushbytes \"Tuesday\"",
              "423: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "437: pushbytes \"Wednesday\"",
              "438: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "452: pushbytes \"Thursday\"",
              "453: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 45 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "467: pushbytes \"Friday\"",
              "468: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 47 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "482: pushbytes \"Saturday\"",
              "483: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 49 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "485: getDay_after_if_else@18:",
              "488: frame_dig -1",
              "489: pushint 7",
              "490: ==",
              "494: bz getDay_after_if_else@21"
            ],
            [
              "497: pushbytes \"Sunday\"",
              "498: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 50 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "485: getDay_after_if_else@18:",
              "488: frame_dig -1",
              "489: pushint 7",
              "490: ==",
              "494: bz getDay_after_if_else@21"
            ],
            [
              "500: getDay_after_if_else@21:",
              "503: pushbytes \"Invalid day\"",
              "504: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 52 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "529: intc_2"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 55 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "566: pushint 64",
              "569: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 57 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "584: pushint 256",
              "587: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 59 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "602: pushint 1024",
              "605: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 61 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "607: calculateBoxStorageCost_after_if_else@12:",
              "610: frame_dig -2",
              "611: pushbytes \"max\"",
              "612: ==",
              "617: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "620: pushint 32000",
              "623: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 62 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "607: calculateBoxStorageCost_after_if_else@12:",
              "610: frame_dig -2",
              "611: pushbytes \"max\"",
              "612: ==",
              "617: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "625: calculateBoxStorageCost_after_if_else@15:",
              "628: intc_1",
              "629: swap",
              "630: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 65 -> 67 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "634: loop:",
              "638: proto 0 1",
              "641: pushint 10",
              "644: intc_1"
            ],
            [
              "646: loop_while_top@1:",
              "662: frame_dig 0",
              "663: bz loop_block@9"
            ],
            [
              "666: frame_dig 0",
              "667: pushint 5",
              "668: >",
              "669: bz loop_after_if_else@4"
            ],
            [
              "686: loop_after_if_else@4:",
              "689: frame_dig 0",
              "690: intc_3",
              "691: -",
              "692: dup",
              "693: frame_bury 0",
              "696: frame_dig 1",
              "697: intc_0",
              "698: +",
              "699: frame_bury 1",
              "702: intc_0",
              "703: ==",
              "704: bz loop_while_top@1"
            ],
            [
              "706: loop_block@9:",
              "709: frame_dig 1",
              "710: frame_bury 0",
              "711: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "634: loop:",
              "638: proto 0 1",
              "641: pushint 10",
              "644: intc_1"
            ],
            [
              "646: loop_while_top@1:",
              "662: frame_dig 0",
              "663: bz loop_block@9"
            ],
            [
              "706: loop_block@9:",
              "709: frame_dig 1",
              "710: frame_bury 0",
              "711: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 24,
      "description": "\nCheck: \"is-updatable\", Impact: High, Confidence: High\nDescription: Upgradable Applications\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#upgradable-application\n",
      "check": "is-updatable",
      "impact": "High",
      "confidence": "High",
      "help": "Do not approve `UpdateApplication` type application calls.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "190: pushbytes \"This account is rich!\"",
              "191: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "202: pushbytes \"This account is doing well.\"",
              "203: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "205: isRich_else_body@4:",
              "208: pushbytes \"This account is poor :(\"",
              "209: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "224: pushbytes \"Even\"",
              "225: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "227: isEven_ternary_false@2:",
              "230: pushbytes \"Odd\"",
              "231: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "92: main_forLoop_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "100: callsub forLoop"
            ],
            [
              "235: forLoop:",
              "239: proto 0 1",
              "240: intc_1",
              "241: pushbytes \"\"",
              "242: dupn 4",
              "245: bytec_1",
              "248: intc_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "286: forLoop_after_for@4:",
              "289: bytec_1",
              "290: frame_bury 0",
              "293: frame_dig 6",
              "294: intc_1",
              "295: extract_uint16",
              "296: frame_bury 1",
              "297: intc_1",
              "298: frame_bury 3"
            ],
            [
              "300: forLoop_for_header@5:",
              "303: frame_dig 3",
              "304: frame_dig 1",
              "305: <",
              "306: bz forLoop_after_for@8"
            ],
            [
              "339: forLoop_after_for@8:",
              "342: intc_1",
              "343: frame_bury 5",
              "346: frame_dig 0",
              "347: intc_1",
              "348: extract_uint16",
              "349: frame_bury 2",
              "350: intc_1",
              "351: frame_bury 4"
            ],
            [
              "353: forLoop_for_header@9:",
              "356: frame_dig 4",
              "357: frame_dig 2",
              "358: <",
              "359: bz forLoop_after_for@12"
            ],
            [
              "378: forLoop_after_for@12:",
              "381: frame_dig 5",
              "382: pushint 6",
              "383: ==",
              "384: assert",
              "387: retsub"
            ],
            [
              "101: bytec_0",
              "102: swap",
              "103: concat",
              "104: log",
              "105: intc_0",
              "106: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "407: pushbytes \"Monday\"",
              "408: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "422: pushbytes \"Tuesday\"",
              "423: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "437: pushbytes \"Wednesday\"",
              "438: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "452: pushbytes \"Thursday\"",
              "453: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 45 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "467: pushbytes \"Friday\"",
              "468: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 47 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "482: pushbytes \"Saturday\"",
              "483: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 49 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "485: getDay_after_if_else@18:",
              "488: frame_dig -1",
              "489: pushint 7",
              "490: ==",
              "494: bz getDay_after_if_else@21"
            ],
            [
              "497: pushbytes \"Sunday\"",
              "498: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 50 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "485: getDay_after_if_else@18:",
              "488: frame_dig -1",
              "489: pushint 7",
              "490: ==",
              "494: bz getDay_after_if_else@21"
            ],
            [
              "500: getDay_after_if_else@21:",
              "503: pushbytes \"Invalid day\"",
              "504: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 52 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "529: intc_2"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 55 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "566: pushint 64",
              "569: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 57 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "584: pushint 256",
              "587: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 59 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "602: pushint 1024",
              "605: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 61 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "607: calculateBoxStorageCost_after_if_else@12:",
              "610: frame_dig -2",
              "611: pushbytes \"max\"",
              "612: ==",
              "617: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "620: pushint 32000",
              "623: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 62 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "607: calculateBoxStorageCost_after_if_else@12:",
              "610: frame_dig -2",
              "611: pushbytes \"max\"",
              "612: ==",
              "617: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "625: calculateBoxStorageCost_after_if_else@15:",
              "628: intc_1",
              "629: swap",
              "630: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 65 -> 67 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "634: loop:",
              "638: proto 0 1",
              "641: pushint 10",
              "644: intc_1"
            ],
            [
              "646: loop_while_top@1:",
              "662: frame_dig 0",
              "663: bz loop_block@9"
            ],
            [
              "666: frame_dig 0",
              "667: pushint 5",
              "668: >",
              "669: bz loop_after_if_else@4"
            ],
            [
              "686: loop_after_if_else@4:",
              "689: frame_dig 0",
              "690: intc_3",
              "691: -",
              "692: dup",
              "693: frame_bury 0",
              "696: frame_dig 1",
              "697: intc_0",
              "698: +",
              "699: frame_bury 1",
              "702: intc_0",
              "703: ==",
              "704: bz loop_while_top@1"
            ],
            [
              "706: loop_block@9:",
              "709: frame_dig 1",
              "710: frame_bury 0",
              "711: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "634: loop:",
              "638: proto 0 1",
              "641: pushint 10",
              "644: intc_1"
            ],
            [
              "646: loop_while_top@1:",
              "662: frame_dig 0",
              "663: bz loop_block@9"
            ],
            [
              "706: loop_block@9:",
              "709: frame_dig 1",
              "710: frame_bury 0",
              "711: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 25,
      "description": "\nCheck: \"missing-fee-check\", Impact: High, Confidence: High\nDescription: Missing Fee Field Validation\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-fee-field-validation\n",
      "check": "missing-fee-check",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `Fee` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "190: pushbytes \"This account is rich!\"",
              "191: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "202: pushbytes \"This account is doing well.\"",
              "203: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "205: isRich_else_body@4:",
              "208: pushbytes \"This account is poor :(\"",
              "209: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "224: pushbytes \"Even\"",
              "225: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "227: isEven_ternary_false@2:",
              "230: pushbytes \"Odd\"",
              "231: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "92: main_forLoop_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "100: callsub forLoop"
            ],
            [
              "235: forLoop:",
              "239: proto 0 1",
              "240: intc_1",
              "241: pushbytes \"\"",
              "242: dupn 4",
              "245: bytec_1",
              "248: intc_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "286: forLoop_after_for@4:",
              "289: bytec_1",
              "290: frame_bury 0",
              "293: frame_dig 6",
              "294: intc_1",
              "295: extract_uint16",
              "296: frame_bury 1",
              "297: intc_1",
              "298: frame_bury 3"
            ],
            [
              "300: forLoop_for_header@5:",
              "303: frame_dig 3",
              "304: frame_dig 1",
              "305: <",
              "306: bz forLoop_after_for@8"
            ],
            [
              "339: forLoop_after_for@8:",
              "342: intc_1",
              "343: frame_bury 5",
              "346: frame_dig 0",
              "347: intc_1",
              "348: extract_uint16",
              "349: frame_bury 2",
              "350: intc_1",
              "351: frame_bury 4"
            ],
            [
              "353: forLoop_for_header@9:",
              "356: frame_dig 4",
              "357: frame_dig 2",
              "358: <",
              "359: bz forLoop_after_for@12"
            ],
            [
              "378: forLoop_after_for@12:",
              "381: frame_dig 5",
              "382: pushint 6",
              "383: ==",
              "384: assert",
              "387: retsub"
            ],
            [
              "101: bytec_0",
              "102: swap",
              "103: concat",
              "104: log",
              "105: intc_0",
              "106: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "407: pushbytes \"Monday\"",
              "408: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "422: pushbytes \"Tuesday\"",
              "423: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "437: pushbytes \"Wednesday\"",
              "438: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "452: pushbytes \"Thursday\"",
              "453: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 45 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "467: pushbytes \"Friday\"",
              "468: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 47 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "482: pushbytes \"Saturday\"",
              "483: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 49 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "485: getDay_after_if_else@18:",
              "488: frame_dig -1",
              "489: pushint 7",
              "490: ==",
              "494: bz getDay_after_if_else@21"
            ],
            [
              "497: pushbytes \"Sunday\"",
              "498: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 50 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "485: getDay_after_if_else@18:",
              "488: frame_dig -1",
              "489: pushint 7",
              "490: ==",
              "494: bz getDay_after_if_else@21"
            ],
            [
              "500: getDay_after_if_else@21:",
              "503: pushbytes \"Invalid day\"",
              "504: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 52 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "529: intc_2"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 55 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "566: pushint 64",
              "569: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 57 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "584: pushint 256",
              "587: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 59 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "602: pushint 1024",
              "605: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 61 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "607: calculateBoxStorageCost_after_if_else@12:",
              "610: frame_dig -2",
              "611: pushbytes \"max\"",
              "612: ==",
              "617: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "620: pushint 32000",
              "623: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 62 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "607: calculateBoxStorageCost_after_if_else@12:",
              "610: frame_dig -2",
              "611: pushbytes \"max\"",
              "612: ==",
              "617: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "625: calculateBoxStorageCost_after_if_else@15:",
              "628: intc_1",
              "629: swap",
              "630: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 65 -> 67 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "634: loop:",
              "638: proto 0 1",
              "641: pushint 10",
              "644: intc_1"
            ],
            [
              "646: loop_while_top@1:",
              "662: frame_dig 0",
              "663: bz loop_block@9"
            ],
            [
              "666: frame_dig 0",
              "667: pushint 5",
              "668: >",
              "669: bz loop_after_if_else@4"
            ],
            [
              "686: loop_after_if_else@4:",
              "689: frame_dig 0",
              "690: intc_3",
              "691: -",
              "692: dup",
              "693: frame_bury 0",
              "696: frame_dig 1",
              "697: intc_0",
              "698: +",
              "699: frame_bury 1",
              "702: intc_0",
              "703: ==",
              "704: bz loop_while_top@1"
            ],
            [
              "706: loop_block@9:",
              "709: frame_dig 1",
              "710: frame_bury 0",
              "711: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "634: loop:",
              "638: proto 0 1",
              "641: pushint 10",
              "644: intc_1"
            ],
            [
              "646: loop_while_top@1:",
              "662: frame_dig 0",
              "663: bz loop_block@9"
            ],
            [
              "706: loop_block@9:",
              "709: frame_dig 1",
              "710: frame_bury 0",
              "711: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "169: txn ApplicationID",
              "170: !",
              "171: assert",
              "172: intc_0",
              "173: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    },
    {
      "type": "ExecutionPaths",
      "count": 0,
      "description": "\nCheck: \"group-size-check\", Impact: High, Confidence: High\nDescription: Usage of absolute indexes without validating GroupSize\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#missing-groupsize-validation\n",
      "check": "group-size-check",
      "impact": "High",
      "confidence": "High",
      "help": "- Avoid using absolute indexes. Validate GroupSize if used.\n- Favor using ARC-4 ABI and relative indexes for group transactions.",
      "paths": []
    },
    {
      "type": "ExecutionPaths",
      "count": 25,
      "description": "\nCheck: \"rekey-to\", Impact: High, Confidence: High\nDescription: Rekeyable Logic Signatures\n\nWiki: https://github.com/crytic/tealer/wiki/Detector-Documentation#rekeyable-logicsig\n",
      "check": "rekey-to",
      "impact": "High",
      "confidence": "High",
      "help": "Validate `RekeyTo` field in the LogicSig.",
      "paths": [
        {
          "short": "0 -> 1 -> 2 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 19 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "190: pushbytes \"This account is rich!\"",
              "191: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 21 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "202: pushbytes \"This account is doing well.\"",
              "203: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 14 -> 18 -> 20 -> 22 -> 15",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "136: main_isRich_route@3:",
              "139: txn OnCompletion",
              "140: !",
              "141: assert",
              "142: txn ApplicationID",
              "143: assert",
              "146: txna ApplicationArgs 1",
              "147: btoi",
              "150: callsub isRich"
            ],
            [
              "177: isRich:",
              "181: proto 1 1",
              "184: frame_dig -1",
              "185: pushint 1000",
              "186: >",
              "187: bz isRich_else_body@2"
            ],
            [
              "193: isRich_else_body@2:",
              "196: frame_dig -1",
              "197: pushint 100",
              "198: >",
              "199: bz isRich_else_body@4"
            ],
            [
              "205: isRich_else_body@4:",
              "208: pushbytes \"This account is poor :(\"",
              "209: retsub"
            ],
            [
              "151: dup",
              "152: len",
              "153: itob",
              "154: extract 6 2",
              "155: swap",
              "156: concat",
              "157: bytec_0",
              "158: swap",
              "159: concat",
              "160: log",
              "161: intc_0",
              "162: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 24 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "224: pushbytes \"Even\"",
              "225: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 12 -> 23 -> 25 -> 13",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "108: main_isEven_route@4:",
              "111: txn OnCompletion",
              "112: !",
              "113: assert",
              "114: txn ApplicationID",
              "115: assert",
              "118: txna ApplicationArgs 1",
              "119: btoi",
              "122: callsub isEven"
            ],
            [
              "213: isEven:",
              "217: proto 1 1",
              "220: frame_dig -1",
              "221: intc_3",
              "222: %",
              "223: bnz isEven_ternary_false@2"
            ],
            [
              "227: isEven_ternary_false@2:",
              "230: pushbytes \"Odd\"",
              "231: retsub"
            ],
            [
              "123: dup",
              "124: len",
              "125: itob",
              "126: extract 6 2",
              "127: swap",
              "128: concat",
              "129: bytec_0",
              "130: swap",
              "131: concat",
              "132: log",
              "133: intc_0",
              "134: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 10 -> 26 -> 27 -> 29 -> 30 -> 32 -> 33 -> 35 -> 11",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "92: main_forLoop_route@5:",
              "95: txn OnCompletion",
              "96: !",
              "97: assert",
              "98: txn ApplicationID",
              "99: assert",
              "100: callsub forLoop"
            ],
            [
              "235: forLoop:",
              "239: proto 0 1",
              "240: intc_1",
              "241: pushbytes \"\"",
              "242: dupn 4",
              "245: bytec_1",
              "248: intc_1"
            ],
            [
              "250: forLoop_for_header@1:",
              "253: frame_dig 7",
              "254: pushint 4",
              "255: <",
              "256: bz forLoop_after_for@4"
            ],
            [
              "286: forLoop_after_for@4:",
              "289: bytec_1",
              "290: frame_bury 0",
              "293: frame_dig 6",
              "294: intc_1",
              "295: extract_uint16",
              "296: frame_bury 1",
              "297: intc_1",
              "298: frame_bury 3"
            ],
            [
              "300: forLoop_for_header@5:",
              "303: frame_dig 3",
              "304: frame_dig 1",
              "305: <",
              "306: bz forLoop_after_for@8"
            ],
            [
              "339: forLoop_after_for@8:",
              "342: intc_1",
              "343: frame_bury 5",
              "346: frame_dig 0",
              "347: intc_1",
              "348: extract_uint16",
              "349: frame_bury 2",
              "350: intc_1",
              "351: frame_bury 4"
            ],
            [
              "353: forLoop_for_header@9:",
              "356: frame_dig 4",
              "357: frame_dig 2",
              "358: <",
              "359: bz forLoop_after_for@12"
            ],
            [
              "378: forLoop_after_for@12:",
              "381: frame_dig 5",
              "382: pushint 6",
              "383: ==",
              "384: assert",
              "387: retsub"
            ],
            [
              "101: bytec_0",
              "102: swap",
              "103: concat",
              "104: log",
              "105: intc_0",
              "106: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 37 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "407: pushbytes \"Monday\"",
              "408: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 39 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "422: pushbytes \"Tuesday\"",
              "423: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 41 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "437: pushbytes \"Wednesday\"",
              "438: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 43 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "452: pushbytes \"Thursday\"",
              "453: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 45 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "467: pushbytes \"Friday\"",
              "468: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 47 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "482: pushbytes \"Saturday\"",
              "483: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 49 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "485: getDay_after_if_else@18:",
              "488: frame_dig -1",
              "489: pushint 7",
              "490: ==",
              "494: bz getDay_after_if_else@21"
            ],
            [
              "497: pushbytes \"Sunday\"",
              "498: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 8 -> 36 -> 38 -> 40 -> 42 -> 44 -> 46 -> 48 -> 50 -> 9",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "64: main_getDay_route@6:",
              "67: txn OnCompletion",
              "68: !",
              "69: assert",
              "70: txn ApplicationID",
              "71: assert",
              "74: txna ApplicationArgs 1",
              "75: btoi",
              "78: callsub getDay"
            ],
            [
              "391: getDay:",
              "395: proto 1 1",
              "398: frame_dig -1",
              "399: intc_0",
              "400: ==",
              "404: bz getDay_after_if_else@3"
            ],
            [
              "410: getDay_after_if_else@3:",
              "413: frame_dig -1",
              "414: intc_3",
              "415: ==",
              "419: bz getDay_after_if_else@6"
            ],
            [
              "425: getDay_after_if_else@6:",
              "428: frame_dig -1",
              "429: pushint 3",
              "430: ==",
              "434: bz getDay_after_if_else@9"
            ],
            [
              "440: getDay_after_if_else@9:",
              "443: frame_dig -1",
              "444: pushint 4",
              "445: ==",
              "449: bz getDay_after_if_else@12"
            ],
            [
              "455: getDay_after_if_else@12:",
              "458: frame_dig -1",
              "459: pushint 5",
              "460: ==",
              "464: bz getDay_after_if_else@15"
            ],
            [
              "470: getDay_after_if_else@15:",
              "473: frame_dig -1",
              "474: pushint 6",
              "475: ==",
              "479: bz getDay_after_if_else@18"
            ],
            [
              "485: getDay_after_if_else@18:",
              "488: frame_dig -1",
              "489: pushint 7",
              "490: ==",
              "494: bz getDay_after_if_else@21"
            ],
            [
              "500: getDay_after_if_else@21:",
              "503: pushbytes \"Invalid day\"",
              "504: retsub"
            ],
            [
              "79: dup",
              "80: len",
              "81: itob",
              "82: extract 6 2",
              "83: swap",
              "84: concat",
              "85: bytec_0",
              "86: swap",
              "87: concat",
              "88: log",
              "89: intc_0",
              "90: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 52 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "529: intc_2"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 55 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "566: pushint 64",
              "569: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 57 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "584: pushint 256",
              "587: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 59 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "602: pushint 1024",
              "605: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 61 -> 53 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "607: calculateBoxStorageCost_after_if_else@12:",
              "610: frame_dig -2",
              "611: pushbytes \"max\"",
              "612: ==",
              "617: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "620: pushint 32000",
              "623: b calculateBoxStorageCost_block@17"
            ],
            [
              "531: calculateBoxStorageCost_block@17:",
              "534: frame_dig 0",
              "535: +",
              "538: pushint 400",
              "541: *",
              "544: pushint 2500",
              "547: +",
              "550: swap",
              "551: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 6 -> 51 -> 54 -> 56 -> 58 -> 60 -> 62 -> 7",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "39: main_calculateBoxStorageCost_route@7:",
              "42: txn OnCompletion",
              "43: !",
              "44: assert",
              "45: txn ApplicationID",
              "46: assert",
              "49: txna ApplicationArgs 1",
              "50: extract 2 0",
              "51: txna ApplicationArgs 2",
              "52: extract 2 0",
              "55: callsub calculateBoxStorageCost"
            ],
            [
              "508: calculateBoxStorageCost:",
              "512: proto 2 1",
              "515: frame_dig -1",
              "516: len",
              "519: frame_dig -2",
              "520: pushbytes \"xs\"",
              "521: ==",
              "526: bz calculateBoxStorageCost_after_if_else@3"
            ],
            [
              "553: calculateBoxStorageCost_after_if_else@3:",
              "556: frame_dig -2",
              "557: pushbytes \"sm\"",
              "558: ==",
              "563: bz calculateBoxStorageCost_after_if_else@6"
            ],
            [
              "571: calculateBoxStorageCost_after_if_else@6:",
              "574: frame_dig -2",
              "575: pushbytes \"md\"",
              "576: ==",
              "581: bz calculateBoxStorageCost_after_if_else@9"
            ],
            [
              "589: calculateBoxStorageCost_after_if_else@9:",
              "592: frame_dig -2",
              "593: pushbytes \"lg\"",
              "594: ==",
              "599: bz calculateBoxStorageCost_after_if_else@12"
            ],
            [
              "607: calculateBoxStorageCost_after_if_else@12:",
              "610: frame_dig -2",
              "611: pushbytes \"max\"",
              "612: ==",
              "617: bz calculateBoxStorageCost_after_if_else@15"
            ],
            [
              "625: calculateBoxStorageCost_after_if_else@15:",
              "628: intc_1",
              "629: swap",
              "630: retsub"
            ],
            [
              "56: itob",
              "57: bytec_0",
              "58: swap",
              "59: concat",
              "60: log",
              "61: intc_0",
              "62: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 65 -> 67 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "634: loop:",
              "638: proto 0 1",
              "641: pushint 10",
              "644: intc_1"
            ],
            [
              "646: loop_while_top@1:",
              "662: frame_dig 0",
              "663: bz loop_block@9"
            ],
            [
              "666: frame_dig 0",
              "667: pushint 5",
              "668: >",
              "669: bz loop_after_if_else@4"
            ],
            [
              "686: loop_after_if_else@4:",
              "689: frame_dig 0",
              "690: intc_3",
              "691: -",
              "692: dup",
              "693: frame_bury 0",
              "696: frame_dig 1",
              "697: intc_0",
              "698: +",
              "699: frame_bury 1",
              "702: intc_0",
              "703: ==",
              "704: bz loop_while_top@1"
            ],
            [
              "706: loop_block@9:",
              "709: frame_dig 1",
              "710: frame_bury 0",
              "711: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 2 -> 4 -> 63 -> 64 -> 68 -> 5",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "12: pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654",
              "13: txna ApplicationArgs 0",
              "14: match main_isRich_route@3 main_isEven_route@4 main_forLoop_route@5 main_getDay_route@6 main_calculateBoxStorageCost_route@7 main_loop_route@8"
            ],
            [
              "22: main_loop_route@8:",
              "25: txn OnCompletion",
              "26: !",
              "27: assert",
              "28: txn ApplicationID",
              "29: assert",
              "30: callsub loop"
            ],
            [
              "634: loop:",
              "638: proto 0 1",
              "641: pushint 10",
              "644: intc_1"
            ],
            [
              "646: loop_while_top@1:",
              "662: frame_dig 0",
              "663: bz loop_block@9"
            ],
            [
              "706: loop_block@9:",
              "709: frame_dig 1",
              "710: frame_bury 0",
              "711: retsub"
            ],
            [
              "31: itob",
              "32: bytec_0",
              "33: swap",
              "34: concat",
              "35: log",
              "36: intc_0",
              "37: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 17",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "169: txn ApplicationID",
              "170: !",
              "171: assert",
              "172: intc_0",
              "173: return"
            ]
          ]
        },
        {
          "short": "0 -> 1 -> 16 -> 3",
          "blocks": [
            [
              "1: #pragma version 10",
              "2: UNSUPPORTED #pragma typetrack false"
            ],
            [
              "5: main:",
              "6: intcblock 1 0 8 2",
              "7: bytecblock 0x151f7c75 0x0000 0x0001",
              "10: txn NumAppArgs",
              "11: bz main_bare_routing@11"
            ],
            [
              "164: main_bare_routing@11:",
              "167: txn OnCompletion",
              "168: bnz main_after_if_else@15"
            ],
            [
              "16: main_after_if_else@15:",
              "19: intc_1",
              "20: return"
            ]
          ]
        }
      ]
    }
  ]
}