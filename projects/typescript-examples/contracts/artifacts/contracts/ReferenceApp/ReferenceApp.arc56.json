{
    "name": "ReferenceApp",
    "structs": {},
    "methods": [
        {
            "name": "incrementViaInner",
            "args": [],
            "returns": {
                "type": "uint64",
                "desc": "The incremented counter value from the inner call"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Calls the increment method on another Counter app with a hardcoded app ID",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "incrementViaInnerWithArg",
            "args": [
                {
                    "type": "uint64",
                    "name": "app",
                    "desc": "The application to call"
                }
            ],
            "returns": {
                "type": "uint64",
                "desc": "The incremented counter value from the inner call"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "Calls the increment method on another Counter app passed as an argument",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "A contract that demonstrates how to use resource usage in a contract using an asset reference",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        88,
                        124
                    ],
                    "errorMessage": "Bytes has valid prefix"
                },
                {
                    "pc": [
                        26
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        59
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgNiAwIDEKICAgIGJ5dGVjYmxvY2sgMHgxNTFmN2M3NSAweDRhMzI1OTAxCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQXBwL2NvbnRyYWN0LmFsZ28udHM6MzMKICAgIC8vIGV4cG9ydCBkZWZhdWx0IGNsYXNzIFJlZmVyZW5jZUFwcCBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX19fYWxnb3RzX18uZGVmYXVsdENyZWF0ZUA5CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydAogICAgcHVzaGJ5dGVzcyAweDk0MDdhZTk2IDB4ZWM5MDRhOTEgLy8gbWV0aG9kICJpbmNyZW1lbnRWaWFJbm5lcigpdWludDY0IiwgbWV0aG9kICJpbmNyZW1lbnRWaWFJbm5lcldpdGhBcmcodWludDY0KXVpbnQ2NCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIGluY3JlbWVudFZpYUlubmVyIGluY3JlbWVudFZpYUlubmVyV2l0aEFyZwogICAgZXJyCgptYWluX19fYWxnb3RzX18uZGVmYXVsdENyZWF0ZUA5OgogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFwcC9jb250cmFjdC5hbGdvLnRzOjMzCiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBSZWZlcmVuY2VBcHAgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgJiYKICAgIHJldHVybiAvLyBvbiBlcnJvcjogT25Db21wbGV0aW9uIG11c3QgYmUgTm9PcCAmJiBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKCgovLyBjb250cmFjdHMvUmVmZXJlbmNlQXBwL2NvbnRyYWN0LmFsZ28udHM6OlJlZmVyZW5jZUFwcC5pbmNyZW1lbnRWaWFJbm5lcltyb3V0aW5nXSgpIC0+IHZvaWQ6CmluY3JlbWVudFZpYUlubmVyOgogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFwcC9jb250cmFjdC5hbGdvLnRzOjQzLTUwCiAgICAvLyBjb25zdCBhcHBDYWxsVHhuID0gaXR4bgogICAgLy8gICAuYXBwbGljYXRpb25DYWxsKHsKICAgIC8vICAgICBhcHBJZDogYXBwLmlkLAogICAgLy8gICAgIC8vIFVzZSBtZXRob2RTZWxlY3RvciB0byBnZXQgdGhlIEFCSSBzZWxlY3RvciBmb3IgdGhlIGluY3JlbWVudCBtZXRob2QKICAgIC8vICAgICBhcHBBcmdzOiBbYXJjNC5tZXRob2RTZWxlY3RvcignaW5jcmVtZW50KCl1aW50NjQnKV0sCiAgICAvLyAgICAgZmVlOiAwLAogICAgLy8gICB9KQogICAgLy8gICAuc3VibWl0KCkKICAgIGl0eG5fYmVnaW4KICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBcHAvY29udHJhY3QuYWxnby50czo0NwogICAgLy8gYXBwQXJnczogW2FyYzQubWV0aG9kU2VsZWN0b3IoJ2luY3JlbWVudCgpdWludDY0JyldLAogICAgYnl0ZWNfMSAvLyBtZXRob2QgImluY3JlbWVudCgpdWludDY0IgogICAgaXR4bl9maWVsZCBBcHBsaWNhdGlvbkFyZ3MKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBcHAvY29udHJhY3QuYWxnby50czo0MAogICAgLy8gY29uc3QgYXBwID0gQXBwbGljYXRpb24oMTcxNykgLy8gUmVwbGFjZSB3aXRoIHlvdXIgYXBwbGljYXRpb24gaWQKICAgIHB1c2hpbnQgMTcxNyAvLyAxNzE3CiAgICBpdHhuX2ZpZWxkIEFwcGxpY2F0aW9uSUQKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBcHAvY29udHJhY3QuYWxnby50czo0My00OQogICAgLy8gY29uc3QgYXBwQ2FsbFR4biA9IGl0eG4KICAgIC8vICAgLmFwcGxpY2F0aW9uQ2FsbCh7CiAgICAvLyAgICAgYXBwSWQ6IGFwcC5pZCwKICAgIC8vICAgICAvLyBVc2UgbWV0aG9kU2VsZWN0b3IgdG8gZ2V0IHRoZSBBQkkgc2VsZWN0b3IgZm9yIHRoZSBpbmNyZW1lbnQgbWV0aG9kCiAgICAvLyAgICAgYXBwQXJnczogW2FyYzQubWV0aG9kU2VsZWN0b3IoJ2luY3JlbWVudCgpdWludDY0JyldLAogICAgLy8gICAgIGZlZTogMCwKICAgIC8vICAgfSkKICAgIGludGNfMCAvLyA2CiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQXBwL2NvbnRyYWN0LmFsZ28udHM6NDgKICAgIC8vIGZlZTogMCwKICAgIGludGNfMSAvLyAwCiAgICBpdHhuX2ZpZWxkIEZlZQogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFwcC9jb250cmFjdC5hbGdvLnRzOjQzLTUwCiAgICAvLyBjb25zdCBhcHBDYWxsVHhuID0gaXR4bgogICAgLy8gICAuYXBwbGljYXRpb25DYWxsKHsKICAgIC8vICAgICBhcHBJZDogYXBwLmlkLAogICAgLy8gICAgIC8vIFVzZSBtZXRob2RTZWxlY3RvciB0byBnZXQgdGhlIEFCSSBzZWxlY3RvciBmb3IgdGhlIGluY3JlbWVudCBtZXRob2QKICAgIC8vICAgICBhcHBBcmdzOiBbYXJjNC5tZXRob2RTZWxlY3RvcignaW5jcmVtZW50KCl1aW50NjQnKV0sCiAgICAvLyAgICAgZmVlOiAwLAogICAgLy8gICB9KQogICAgLy8gICAuc3VibWl0KCkKICAgIGl0eG5fc3VibWl0CiAgICBpdHhuIExhc3RMb2cKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBcHAvY29udHJhY3QuYWxnby50czo1NAogICAgLy8gcmV0dXJuIGFyYzQuZGVjb2RlQXJjNDx1aW50NjQ+KGFwcENhbGxUeG4ubGFzdExvZywgJ2xvZycpCiAgICBkdXAKICAgIGV4dHJhY3QgNCAwCiAgICBzd2FwCiAgICBleHRyYWN0IDAgNAogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CiAgICA9PQogICAgYXNzZXJ0IC8vIEJ5dGVzIGhhcyB2YWxpZCBwcmVmaXgKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBcHAvY29udHJhY3QuYWxnby50czozOAogICAgLy8gQGFiaW1ldGhvZCgpCiAgICBieXRlY18wIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzIgLy8gMQogICAgcmV0dXJuCgoKLy8gY29udHJhY3RzL1JlZmVyZW5jZUFwcC9jb250cmFjdC5hbGdvLnRzOjpSZWZlcmVuY2VBcHAuaW5jcmVtZW50VmlhSW5uZXJXaXRoQXJnW3JvdXRpbmddKCkgLT4gdm9pZDoKaW5jcmVtZW50VmlhSW5uZXJXaXRoQXJnOgogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFwcC9jb250cmFjdC5hbGdvLnRzOjYyCiAgICAvLyBAYWJpbWV0aG9kKCkKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGJ0b2kKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBcHAvY29udHJhY3QuYWxnby50czo2NS03MgogICAgLy8gY29uc3QgYXBwQ2FsbFR4biA9IGl0eG4KICAgIC8vICAgLmFwcGxpY2F0aW9uQ2FsbCh7CiAgICAvLyAgICAgYXBwSWQ6IGFwcC5pZCwKICAgIC8vICAgICAvLyBVc2UgbWV0aG9kU2VsZWN0b3IgdG8gZ2V0IHRoZSBBQkkgc2VsZWN0b3IgZm9yIHRoZSBpbmNyZW1lbnQgbWV0aG9kCiAgICAvLyAgICAgYXBwQXJnczogW2FyYzQubWV0aG9kU2VsZWN0b3IoJ2luY3JlbWVudCgpdWludDY0JyldLAogICAgLy8gICAgIGZlZTogMCwKICAgIC8vICAgfSkKICAgIC8vICAgLnN1Ym1pdCgpCiAgICBpdHhuX2JlZ2luCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQXBwL2NvbnRyYWN0LmFsZ28udHM6NjkKICAgIC8vIGFwcEFyZ3M6IFthcmM0Lm1ldGhvZFNlbGVjdG9yKCdpbmNyZW1lbnQoKXVpbnQ2NCcpXSwKICAgIGJ5dGVjXzEgLy8gbWV0aG9kICJpbmNyZW1lbnQoKXVpbnQ2NCIKICAgIGl0eG5fZmllbGQgQXBwbGljYXRpb25BcmdzCiAgICBpdHhuX2ZpZWxkIEFwcGxpY2F0aW9uSUQKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBcHAvY29udHJhY3QuYWxnby50czo2NS03MQogICAgLy8gY29uc3QgYXBwQ2FsbFR4biA9IGl0eG4KICAgIC8vICAgLmFwcGxpY2F0aW9uQ2FsbCh7CiAgICAvLyAgICAgYXBwSWQ6IGFwcC5pZCwKICAgIC8vICAgICAvLyBVc2UgbWV0aG9kU2VsZWN0b3IgdG8gZ2V0IHRoZSBBQkkgc2VsZWN0b3IgZm9yIHRoZSBpbmNyZW1lbnQgbWV0aG9kCiAgICAvLyAgICAgYXBwQXJnczogW2FyYzQubWV0aG9kU2VsZWN0b3IoJ2luY3JlbWVudCgpdWludDY0JyldLAogICAgLy8gICAgIGZlZTogMCwKICAgIC8vICAgfSkKICAgIGludGNfMCAvLyA2CiAgICBpdHhuX2ZpZWxkIFR5cGVFbnVtCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQXBwL2NvbnRyYWN0LmFsZ28udHM6NzAKICAgIC8vIGZlZTogMCwKICAgIGludGNfMSAvLyAwCiAgICBpdHhuX2ZpZWxkIEZlZQogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFwcC9jb250cmFjdC5hbGdvLnRzOjY1LTcyCiAgICAvLyBjb25zdCBhcHBDYWxsVHhuID0gaXR4bgogICAgLy8gICAuYXBwbGljYXRpb25DYWxsKHsKICAgIC8vICAgICBhcHBJZDogYXBwLmlkLAogICAgLy8gICAgIC8vIFVzZSBtZXRob2RTZWxlY3RvciB0byBnZXQgdGhlIEFCSSBzZWxlY3RvciBmb3IgdGhlIGluY3JlbWVudCBtZXRob2QKICAgIC8vICAgICBhcHBBcmdzOiBbYXJjNC5tZXRob2RTZWxlY3RvcignaW5jcmVtZW50KCl1aW50NjQnKV0sCiAgICAvLyAgICAgZmVlOiAwLAogICAgLy8gICB9KQogICAgLy8gICAuc3VibWl0KCkKICAgIGl0eG5fc3VibWl0CiAgICBpdHhuIExhc3RMb2cKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBcHAvY29udHJhY3QuYWxnby50czo3NgogICAgLy8gcmV0dXJuIGFyYzQuZGVjb2RlQXJjNDx1aW50NjQ+KGFwcENhbGxUeG4ubGFzdExvZywgJ2xvZycpCiAgICBkdXAKICAgIGV4dHJhY3QgNCAwCiAgICBzd2FwCiAgICBleHRyYWN0IDAgNAogICAgYnl0ZWNfMCAvLyAweDE1MWY3Yzc1CiAgICA9PQogICAgYXNzZXJ0IC8vIEJ5dGVzIGhhcyB2YWxpZCBwcmVmaXgKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBcHAvY29udHJhY3QuYWxnby50czo2MgogICAgLy8gQGFiaW1ldGhvZCgpCiAgICBieXRlY18wIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzIgLy8gMQogICAgcmV0dXJuCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyADBgABJgIEFR98dQRKMlkBMRtBAB0xGRREMRhEggIElAeulgTskEqRNhoAjgIACQAsADEZFDEYFBBDsSmyGoG1DbIYIrIQI7IBs7Q+SVcEAExXAAQoEkQoTFCwJEM2GgEXsSmyGrIYIrIQI7IBs7Q+SVcEAExXAAQoEkQoTFCwJEM=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}