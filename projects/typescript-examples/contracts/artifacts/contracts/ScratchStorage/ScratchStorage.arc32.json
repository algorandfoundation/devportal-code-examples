{
    "hints": {
        "demonstrateScratchStorage()bool": {
            "call_config": {
                "no_op": "CALL"
            }
        },
        "readFromGroupTransaction(uint64,uint64)uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "readBytesFromGroupTransaction(uint64,uint64)byte[]": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "ScratchStorage",
        "desc": "ScratchStorage Contract\n\nThis contract demonstrates how to use scratch storage in Algorand smart contracts.\nScratch storage persists for the lifetime of a group transaction and can be used to pass\nvalues between multiple calls and/or applications in the same group.\n\nKey features demonstrated:\n- Reserving scratch slots using the contract decorator\n- Storing and loading values from scratch space\n- Using scratch space to pass values between transactions in a group\n- Different data types in scratch space (uint64 and bytes)",
        "methods": [
            {
                "name": "demonstrateScratchStorage",
                "args": [],
                "readonly": false,
                "returns": {
                    "type": "bool",
                    "desc": "true if all operations succeed"
                },
                "desc": "Demonstrates basic scratch storage operations"
            },
            {
                "name": "readFromGroupTransaction",
                "args": [
                    {
                        "type": "uint64",
                        "name": "groupIndex",
                        "desc": "The index of the transaction in the group to read from"
                    },
                    {
                        "type": "uint64",
                        "name": "scratchSlot",
                        "desc": "The scratch slot to read from"
                    }
                ],
                "readonly": true,
                "returns": {
                    "type": "uint64",
                    "desc": "The uint64 value read from the specified transaction's scratch slot"
                },
                "desc": "Demonstrates reading values from another transaction in the same group"
            },
            {
                "name": "readBytesFromGroupTransaction",
                "args": [
                    {
                        "type": "uint64",
                        "name": "groupIndex",
                        "desc": "The index of the transaction in the group to read from"
                    },
                    {
                        "type": "uint64",
                        "name": "scratchSlot",
                        "desc": "The scratch slot to read from"
                    }
                ],
                "readonly": true,
                "returns": {
                    "type": "byte[]",
                    "desc": "The bytes value read from the specified transaction's scratch slot"
                },
                "desc": "Demonstrates reading bytes values from another transaction in the same group"
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}