{
    "name": "ReferenceAccountApp",
    "structs": {},
    "methods": [
        {
            "name": "getMyCounter",
            "args": [],
            "returns": {
                "type": "uint64",
                "desc": "The counter value or 0 if it doesn't exist"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "desc": "Get the counter value from another account's local state with hardcoded values",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getMyCounterWithArg",
            "args": [
                {
                    "type": "address",
                    "name": "account",
                    "desc": "The account to check"
                },
                {
                    "type": "uint64",
                    "name": "app",
                    "desc": "The application to query"
                }
            ],
            "returns": {
                "type": "uint64",
                "desc": "The counter value or 0 if it doesn't exist"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "desc": "Get the counter value from another account's local state with provided parameters",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "A contract that demonstrates how to reference accounts and applications\nto access local state from external contracts",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        53,
                        77
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        99
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        56,
                        80
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSAwCiAgICBieXRlY2Jsb2NrIDB4MTUxZjdjNzUgIm15X2NvdW50ZXIiCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjUxCiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBSZWZlcmVuY2VBY2NvdW50QXBwIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fYmFyZV9yb3V0aW5nQDcKICAgIHB1c2hieXRlc3MgMHg4N2FkNzBiZiAweDYwNWM0NDE5IC8vIG1ldGhvZCAiZ2V0TXlDb3VudGVyKCl1aW50NjQiLCBtZXRob2QgImdldE15Q291bnRlcldpdGhBcmcoYWRkcmVzcyx1aW50NjQpdWludDY0IgogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMAogICAgbWF0Y2ggbWFpbl9nZXRNeUNvdW50ZXJfcm91dGVAMyBtYWluX2dldE15Q291bnRlcldpdGhBcmdfcm91dGVANAoKbWFpbl9hZnRlcl9pZl9lbHNlQDExOgogICAgZXJyCgptYWluX2dldE15Q291bnRlcldpdGhBcmdfcm91dGVANDoKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6NzkKICAgIC8vIEBhYmltZXRob2QoeyByZWFkb25seTogdHJ1ZSB9KQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjUxCiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBSZWZlcmVuY2VBY2NvdW50QXBwIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgYnRvaQogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo3OQogICAgLy8gQGFiaW1ldGhvZCh7IHJlYWRvbmx5OiB0cnVlIH0pCiAgICBjYWxsc3ViIGdldE15Q291bnRlcldpdGhBcmcKICAgIGl0b2IKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fZ2V0TXlDb3VudGVyX3JvdXRlQDM6CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjU2CiAgICAvLyBAYWJpbWV0aG9kKHsgcmVhZG9ubHk6IHRydWUgfSkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gaXMgbm90IE5vT3AKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIG5vdCBjcmVhdGluZwogICAgY2FsbHN1YiBnZXRNeUNvdW50ZXIKICAgIGl0b2IKICAgIGJ5dGVjXzAgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fYmFyZV9yb3V0aW5nQDc6CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjUxCiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBSZWZlcmVuY2VBY2NvdW50QXBwIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgYm56IG1haW5fYWZ0ZXJfaWZfZWxzZUAxMQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gY3JlYXRpbmcKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCgovLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjpSZWZlcmVuY2VBY2NvdW50QXBwLmdldE15Q291bnRlcigpIC0+IHVpbnQ2NDoKZ2V0TXlDb3VudGVyOgogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo1Ni01NwogICAgLy8gQGFiaW1ldGhvZCh7IHJlYWRvbmx5OiB0cnVlIH0pCiAgICAvLyBwdWJsaWMgZ2V0TXlDb3VudGVyKCk6IHVpbnQ2NCB7CiAgICBwcm90byAwIDEKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6NTkKICAgIC8vIGNvbnN0IGFkZHJlc3NCeXRlcyA9IGFkZHJlc3MuYnl0ZXMKICAgIHB1c2hieXRlcyBiYXNlMzIoV01IRjRGTEpOS1kyQlBGSzdZUFY1SUQ2T1o3TFZEQjJCNjZaVFhFQU1MTDJOWDRXSlpSQSkgLy8gYWRkciBXTUhGNEZMSk5LWTJCUEZLN1lQVjVJRDZPWjdMVkRCMkI2NlpUWEVBTUxMMk5YNFdKWlJKRlZYNjZNCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjYxCiAgICAvLyBjb25zdCBhcHAgPSBBcHBsaWNhdGlvbigxNzE3KSAvLyBSZXBsYWNlIHdpdGggeW91ciBhcHBsaWNhdGlvbiBpZAogICAgcHVzaGludCAxNzE3IC8vIDE3MTcKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6NjQKICAgIC8vIGNvbnN0IFt2YWx1ZSwgaGFzVmFsdWVdID0gb3AuQXBwTG9jYWwuZ2V0RXhVaW50NjQoYWNjb3VudCwgYXBwLCBCeXRlcygnbXlfY291bnRlcicpKQogICAgYnl0ZWNfMSAvLyAibXlfY291bnRlciIKICAgIGFwcF9sb2NhbF9nZXRfZXgKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6NjYKICAgIC8vIGlmICghaGFzVmFsdWUpIHsKICAgIGJueiBnZXRNeUNvdW50ZXJfYWZ0ZXJfaWZfZWxzZUAyCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjY3CiAgICAvLyByZXR1cm4gMAogICAgaW50Y18xIC8vIDAKICAgIHN3YXAKICAgIHJldHN1YgoKZ2V0TXlDb3VudGVyX2FmdGVyX2lmX2Vsc2VAMjoKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6NzAKICAgIC8vIHJldHVybiB2YWx1ZQogICAgZnJhbWVfZGlnIDAKICAgIHN3YXAKICAgIHJldHN1YgoKCi8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6OlJlZmVyZW5jZUFjY291bnRBcHAuZ2V0TXlDb3VudGVyV2l0aEFyZyhhY2NvdW50OiBieXRlcywgYXBwOiB1aW50NjQpIC0+IHVpbnQ2NDoKZ2V0TXlDb3VudGVyV2l0aEFyZzoKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6NzktODAKICAgIC8vIEBhYmltZXRob2QoeyByZWFkb25seTogdHJ1ZSB9KQogICAgLy8gcHVibGljIGdldE15Q291bnRlcldpdGhBcmcoYWNjb3VudDogQWNjb3VudCwgYXBwOiBBcHBsaWNhdGlvbik6IHVpbnQ2NCB7CiAgICBwcm90byAyIDEKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6ODIKICAgIC8vIGNvbnN0IFt2YWx1ZSwgaGFzVmFsdWVdID0gb3AuQXBwTG9jYWwuZ2V0RXhVaW50NjQoYWNjb3VudCwgYXBwLCBCeXRlcygnbXlfY291bnRlcicpKQogICAgZnJhbWVfZGlnIC0yCiAgICBmcmFtZV9kaWcgLTEKICAgIGJ5dGVjXzEgLy8gIm15X2NvdW50ZXIiCiAgICBhcHBfbG9jYWxfZ2V0X2V4CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjg0CiAgICAvLyBpZiAoIWhhc1ZhbHVlKSB7CiAgICBibnogZ2V0TXlDb3VudGVyV2l0aEFyZ19hZnRlcl9pZl9lbHNlQDIKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6ODUKICAgIC8vIHJldHVybiAwCiAgICBpbnRjXzEgLy8gMAogICAgc3dhcAogICAgcmV0c3ViCgpnZXRNeUNvdW50ZXJXaXRoQXJnX2FmdGVyX2lmX2Vsc2VAMjoKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6ODgKICAgIC8vIHJldHVybiB2YWx1ZQogICAgZnJhbWVfZGlnIDAKICAgIHN3YXAKICAgIHJldHN1Ygo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAQAmAgQVH3x1Cm15X2NvdW50ZXIxG0EAP4ICBIetcL8EYFxEGTYaAI4CABkAAQAxGRREMRhENhoBNhoCF4gAVxYoTFCwIkMxGRREMRhEiAASFihMULAiQzEZQP/RMRgURCJDigABgCCzDl4VaWqxoLyq/h9eoH52frqMOg+9mdyAYtem35ZOYoG1DSljQAADI0yJiwBMiYoCAYv+i/8pY0AAAyNMiYsATIk=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}