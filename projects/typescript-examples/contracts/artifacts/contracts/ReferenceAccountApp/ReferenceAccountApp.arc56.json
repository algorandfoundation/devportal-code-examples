{
    "name": "ReferenceAccountApp",
    "structs": {},
    "methods": [
        {
            "name": "getMyCounter",
            "args": [],
            "returns": {
                "type": "uint64",
                "desc": "The counter value or 0 if it doesn't exist"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "desc": "Get the counter value from another account's local state with hardcoded values",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "getMyCounterWithArg",
            "args": [
                {
                    "type": "address",
                    "name": "account",
                    "desc": "The account to check"
                },
                {
                    "type": "uint64",
                    "name": "app",
                    "desc": "The application to query"
                }
            ],
            "returns": {
                "type": "uint64",
                "desc": "The counter value or 0 if it doesn't exist"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": true,
            "desc": "Get the counter value from another account's local state with provided parameters",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "A contract that demonstrates how to reference accounts and applications\nto access local state from external contracts",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        31
                    ],
                    "errorMessage": "OnCompletion must be NoOp"
                },
                {
                    "pc": [
                        64
                    ],
                    "errorMessage": "OnCompletion must be NoOp && can only call when creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCAxCiAgICBieXRlY2Jsb2NrICJteV9jb3VudGVyIiAweDE1MWY3Yzc1CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjUwCiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBSZWZlcmVuY2VBY2NvdW50QXBwIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gbXVzdCBiZSBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0CiAgICBwdXNoYnl0ZXNzIDB4ODdhZDcwYmYgMHg2MDVjNDQxOSAvLyBtZXRob2QgImdldE15Q291bnRlcigpdWludDY0IiwgbWV0aG9kICJnZXRNeUNvdW50ZXJXaXRoQXJnKGFkZHJlc3MsdWludDY0KXVpbnQ2NCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIGdldE15Q291bnRlciBnZXRNeUNvdW50ZXJXaXRoQXJnCiAgICBlcnIKCm1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDk6CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjUwCiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBSZWZlcmVuY2VBY2NvdW50QXBwIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgICYmCiAgICByZXR1cm4gLy8gb24gZXJyb3I6IE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AgJiYgY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCgoKLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo6UmVmZXJlbmNlQWNjb3VudEFwcC5nZXRNeUNvdW50ZXJbcm91dGluZ10oKSAtPiB2b2lkOgpnZXRNeUNvdW50ZXI6CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjU4CiAgICAvLyBjb25zdCBhZGRyZXNzQnl0ZXMgPSBhZGRyZXNzLmJ5dGVzCiAgICBwdXNoYnl0ZXMgYmFzZTMyKFdNSEY0RkxKTktZMkJQRks3WVBWNUlENk9aN0xWREIyQjY2WlRYRUFNTEwyTlg0V0paUkEpIC8vIGFkZHIgV01IRjRGTEpOS1kyQlBGSzdZUFY1SUQ2T1o3TFZEQjJCNjZaVFhFQU1MTDJOWDRXSlpSSkZWWDY2TQogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo2MAogICAgLy8gY29uc3QgYXBwID0gQXBwbGljYXRpb24oMTcxNykgLy8gUmVwbGFjZSB3aXRoIHlvdXIgYXBwbGljYXRpb24gaWQKICAgIHB1c2hpbnQgMTcxNyAvLyAxNzE3CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjYzCiAgICAvLyBjb25zdCBbdmFsdWUsIGhhc1ZhbHVlXSA9IG9wLkFwcExvY2FsLmdldEV4VWludDY0KGFjY291bnQsIGFwcCwgQnl0ZXMoJ215X2NvdW50ZXInKSkKICAgIGJ5dGVjXzAgLy8gIm15X2NvdW50ZXIiCiAgICBhcHBfbG9jYWxfZ2V0X2V4CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjY1CiAgICAvLyBpZiAoIWhhc1ZhbHVlKSB7CiAgICBibnogZ2V0TXlDb3VudGVyX2FmdGVyX2lmX2Vsc2VAMwogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo2NgogICAgLy8gcmV0dXJuIDAKICAgIGludGNfMCAvLyAwCgpnZXRNeUNvdW50ZXJfYWZ0ZXJfaW5saW5lZF9jb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjpSZWZlcmVuY2VBY2NvdW50QXBwLmdldE15Q291bnRlckA0OgogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo1NS01NgogICAgLy8gQHJlYWRvbmx5CiAgICAvLyBwdWJsaWMgZ2V0TXlDb3VudGVyKCk6IHVpbnQ2NCB7CiAgICBpdG9iCiAgICBieXRlY18xIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgpnZXRNeUNvdW50ZXJfYWZ0ZXJfaWZfZWxzZUAzOgogICAgZHVwCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjU1LTU2CiAgICAvLyBAcmVhZG9ubHkKICAgIC8vIHB1YmxpYyBnZXRNeUNvdW50ZXIoKTogdWludDY0IHsKICAgIGIgZ2V0TXlDb3VudGVyX2FmdGVyX2lubGluZWRfY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo6UmVmZXJlbmNlQWNjb3VudEFwcC5nZXRNeUNvdW50ZXJANAoKCi8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6OlJlZmVyZW5jZUFjY291bnRBcHAuZ2V0TXlDb3VudGVyV2l0aEFyZ1tyb3V0aW5nXSgpIC0+IHZvaWQ6CmdldE15Q291bnRlcldpdGhBcmc6CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjc4LTc5CiAgICAvLyBAcmVhZG9ubHkKICAgIC8vIHB1YmxpYyBnZXRNeUNvdW50ZXJXaXRoQXJnKGFjY291bnQ6IEFjY291bnQsIGFwcDogQXBwbGljYXRpb24pOiB1aW50NjQgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgYnRvaQogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo4MQogICAgLy8gY29uc3QgW3ZhbHVlLCBoYXNWYWx1ZV0gPSBvcC5BcHBMb2NhbC5nZXRFeFVpbnQ2NChhY2NvdW50LCBhcHAsIEJ5dGVzKCdteV9jb3VudGVyJykpCiAgICBieXRlY18wIC8vICJteV9jb3VudGVyIgogICAgYXBwX2xvY2FsX2dldF9leAogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo4MwogICAgLy8gaWYgKCFoYXNWYWx1ZSkgewogICAgYm56IGdldE15Q291bnRlcldpdGhBcmdfYWZ0ZXJfaWZfZWxzZUAzCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjg0CiAgICAvLyByZXR1cm4gMAogICAgaW50Y18wIC8vIDAKCmdldE15Q291bnRlcldpdGhBcmdfYWZ0ZXJfaW5saW5lZF9jb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjpSZWZlcmVuY2VBY2NvdW50QXBwLmdldE15Q291bnRlcldpdGhBcmdANDoKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6NzgtNzkKICAgIC8vIEByZWFkb25seQogICAgLy8gcHVibGljIGdldE15Q291bnRlcldpdGhBcmcoYWNjb3VudDogQWNjb3VudCwgYXBwOiBBcHBsaWNhdGlvbik6IHVpbnQ2NCB7CiAgICBpdG9iCiAgICBieXRlY18xIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgpnZXRNeUNvdW50ZXJXaXRoQXJnX2FmdGVyX2lmX2Vsc2VAMzoKICAgIGR1cAogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo3OC03OQogICAgLy8gQHJlYWRvbmx5CiAgICAvLyBwdWJsaWMgZ2V0TXlDb3VudGVyV2l0aEFyZyhhY2NvdW50OiBBY2NvdW50LCBhcHA6IEFwcGxpY2F0aW9uKTogdWludDY0IHsKICAgIGIgZ2V0TXlDb3VudGVyV2l0aEFyZ19hZnRlcl9pbmxpbmVkX2NvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6OlJlZmVyZW5jZUFjY291bnRBcHAuZ2V0TXlDb3VudGVyV2l0aEFyZ0A0Cg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CyACAAEmAgpteV9jb3VudGVyBBUffHUxG0EAHTEZFEQxGESCAgSHrXC/BGBcRBk2GgCOAgAJAD8AMRkUMRgUEEOAILMOXhVparGgvKr+H16gfnZ+uow6D72Z3IBi16bflk5igbUNKGNAAAgiFilMULAjQ0lC//U2GgE2GgIXKGNAAAgiFilMULAjQ0lC//U=",
        "clear": "C4EBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 5,
            "minor": 0,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}