{
    "hints": {
        "getMyCounter()uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "getMyCounterWithArg(address,uint64)uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMCAxCiAgICBieXRlY2Jsb2NrICJteV9jb3VudGVyIiAweDE1MWY3Yzc1CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjUxCiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBSZWZlcmVuY2VBY2NvdW50QXBwIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gbXVzdCBiZSBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0CiAgICBwdXNoYnl0ZXNzIDB4ODdhZDcwYmYgMHg2MDVjNDQxOSAvLyBtZXRob2QgImdldE15Q291bnRlcigpdWludDY0IiwgbWV0aG9kICJnZXRNeUNvdW50ZXJXaXRoQXJnKGFkZHJlc3MsdWludDY0KXVpbnQ2NCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIGdldE15Q291bnRlciBnZXRNeUNvdW50ZXJXaXRoQXJnCiAgICBlcnIKCm1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDk6CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjUxCiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBSZWZlcmVuY2VBY2NvdW50QXBwIGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgICYmCiAgICByZXR1cm4gLy8gb24gZXJyb3I6IE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AgJiYgY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCgoKLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo6UmVmZXJlbmNlQWNjb3VudEFwcC5nZXRNeUNvdW50ZXJbcm91dGluZ10oKSAtPiB2b2lkOgpnZXRNeUNvdW50ZXI6CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjU5CiAgICAvLyBjb25zdCBhZGRyZXNzQnl0ZXMgPSBhZGRyZXNzLmJ5dGVzCiAgICBwdXNoYnl0ZXMgYmFzZTMyKFdNSEY0RkxKTktZMkJQRks3WVBWNUlENk9aN0xWREIyQjY2WlRYRUFNTEwyTlg0V0paUkEpIC8vIGFkZHIgV01IRjRGTEpOS1kyQlBGSzdZUFY1SUQ2T1o3TFZEQjJCNjZaVFhFQU1MTDJOWDRXSlpSSkZWWDY2TQogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo2MQogICAgLy8gY29uc3QgYXBwID0gQXBwbGljYXRpb24oMTcxNykgLy8gUmVwbGFjZSB3aXRoIHlvdXIgYXBwbGljYXRpb24gaWQKICAgIHB1c2hpbnQgMTcxNyAvLyAxNzE3CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjY0CiAgICAvLyBjb25zdCBbdmFsdWUsIGhhc1ZhbHVlXSA9IG9wLkFwcExvY2FsLmdldEV4VWludDY0KGFjY291bnQsIGFwcCwgQnl0ZXMoJ215X2NvdW50ZXInKSkKICAgIGJ5dGVjXzAgLy8gIm15X2NvdW50ZXIiCiAgICBhcHBfbG9jYWxfZ2V0X2V4CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjY2CiAgICAvLyBpZiAoIWhhc1ZhbHVlKSB7CiAgICBibnogZ2V0TXlDb3VudGVyX2FmdGVyX2lmX2Vsc2VAMwogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo2NwogICAgLy8gcmV0dXJuIDAKICAgIGludGNfMCAvLyAwCgpnZXRNeUNvdW50ZXJfYWZ0ZXJfaW5saW5lZF9jb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjpSZWZlcmVuY2VBY2NvdW50QXBwLmdldE15Q291bnRlckA0OgogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo1NgogICAgLy8gQGFiaW1ldGhvZCh7IHJlYWRvbmx5OiB0cnVlIH0pCiAgICBpdG9iCiAgICBieXRlY18xIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzEgLy8gMQogICAgcmV0dXJuCgpnZXRNeUNvdW50ZXJfYWZ0ZXJfaWZfZWxzZUAzOgogICAgZHVwCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjU2CiAgICAvLyBAYWJpbWV0aG9kKHsgcmVhZG9ubHk6IHRydWUgfSkKICAgIGIgZ2V0TXlDb3VudGVyX2FmdGVyX2lubGluZWRfY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo6UmVmZXJlbmNlQWNjb3VudEFwcC5nZXRNeUNvdW50ZXJANAoKCi8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6OlJlZmVyZW5jZUFjY291bnRBcHAuZ2V0TXlDb3VudGVyV2l0aEFyZ1tyb3V0aW5nXSgpIC0+IHZvaWQ6CmdldE15Q291bnRlcldpdGhBcmc6CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjc5CiAgICAvLyBAYWJpbWV0aG9kKHsgcmVhZG9ubHk6IHRydWUgfSkKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDIKICAgIGJ0b2kKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6ODIKICAgIC8vIGNvbnN0IFt2YWx1ZSwgaGFzVmFsdWVdID0gb3AuQXBwTG9jYWwuZ2V0RXhVaW50NjQoYWNjb3VudCwgYXBwLCBCeXRlcygnbXlfY291bnRlcicpKQogICAgYnl0ZWNfMCAvLyAibXlfY291bnRlciIKICAgIGFwcF9sb2NhbF9nZXRfZXgKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6ODQKICAgIC8vIGlmICghaGFzVmFsdWUpIHsKICAgIGJueiBnZXRNeUNvdW50ZXJXaXRoQXJnX2FmdGVyX2lmX2Vsc2VAMwogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo4NQogICAgLy8gcmV0dXJuIDAKICAgIGludGNfMCAvLyAwCgpnZXRNeUNvdW50ZXJXaXRoQXJnX2FmdGVyX2lubGluZWRfY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBcHAvY29udHJhY3QuYWxnby50czo6UmVmZXJlbmNlQWNjb3VudEFwcC5nZXRNeUNvdW50ZXJXaXRoQXJnQDQ6CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjc5CiAgICAvLyBAYWJpbWV0aG9kKHsgcmVhZG9ubHk6IHRydWUgfSkKICAgIGl0b2IKICAgIGJ5dGVjXzEgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4KCmdldE15Q291bnRlcldpdGhBcmdfYWZ0ZXJfaWZfZWxzZUAzOgogICAgZHVwCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFwcC9jb250cmFjdC5hbGdvLnRzOjc5CiAgICAvLyBAYWJpbWV0aG9kKHsgcmVhZG9ubHk6IHRydWUgfSkKICAgIGIgZ2V0TXlDb3VudGVyV2l0aEFyZ19hZnRlcl9pbmxpbmVkX2NvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXBwL2NvbnRyYWN0LmFsZ28udHM6OlJlZmVyZW5jZUFjY291bnRBcHAuZ2V0TXlDb3VudGVyV2l0aEFyZ0A0Cg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "ReferenceAccountApp",
        "desc": "A contract that demonstrates how to reference accounts and applications\nto access local state from external contracts",
        "methods": [
            {
                "name": "getMyCounter",
                "args": [],
                "readonly": true,
                "returns": {
                    "type": "uint64",
                    "desc": "The counter value or 0 if it doesn't exist"
                },
                "desc": "Get the counter value from another account's local state with hardcoded values"
            },
            {
                "name": "getMyCounterWithArg",
                "args": [
                    {
                        "type": "address",
                        "name": "account",
                        "desc": "The account to check"
                    },
                    {
                        "type": "uint64",
                        "name": "app",
                        "desc": "The application to query"
                    }
                ],
                "readonly": true,
                "returns": {
                    "type": "uint64",
                    "desc": "The counter value or 0 if it doesn't exist"
                },
                "desc": "Get the counter value from another account's local state with provided parameters"
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}