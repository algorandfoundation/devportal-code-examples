{
    "name": "SubsidizeAppCall",
    "structs": {},
    "methods": [
        {
            "name": "subsidize",
            "args": [],
            "returns": {
                "type": "bool",
                "desc": "True if the transaction should be approved"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "This Contract Account will subsidize the fees for any AppCall transaction directed to an application.",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "A contract that subsidizes app call fees",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        23
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        56
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        26
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "cblocks"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSAwIFRNUExfRVhQSVJBVElPTl9ST1VORCBUTVBMX0tOT1dOX0FQUAogICAgYnl0ZWNibG9jayBUTVBMX1RBUkdFVF9ORVRXT1JLX0dFTkVTSVMKICAgIC8vIGNvbnRyYWN0cy9TdWJzaWRpemVBcHBDYWxsL2NvbnRyYWN0LmFsZ28udHM6MTgKICAgIC8vIGV4cG9ydCBkZWZhdWx0IGNsYXNzIFN1YnNpZGl6ZUFwcENhbGwgZXh0ZW5kcyBDb250cmFjdCB7CiAgICB0eG4gTnVtQXBwQXJncwogICAgYnogbWFpbl9iYXJlX3JvdXRpbmdANgogICAgcHVzaGJ5dGVzIDB4NTVlMzIzYWEgLy8gbWV0aG9kICJzdWJzaWRpemUoKWJvb2wiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX3N1YnNpZGl6ZV9yb3V0ZUAzCgptYWluX2FmdGVyX2lmX2Vsc2VAMTA6CiAgICAvLyBjb250cmFjdHMvU3Vic2lkaXplQXBwQ2FsbC9jb250cmFjdC5hbGdvLnRzOjE4CiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBTdWJzaWRpemVBcHBDYWxsIGV4dGVuZHMgQ29udHJhY3QgewogICAgaW50Y18xIC8vIDAKICAgIHJldHVybgoKbWFpbl9zdWJzaWRpemVfcm91dGVAMzoKICAgIC8vIGNvbnRyYWN0cy9TdWJzaWRpemVBcHBDYWxsL2NvbnRyYWN0LmFsZ28udHM6MjMKICAgIC8vIEBhYmltZXRob2QoKQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICBjYWxsc3ViIHN1YnNpZGl6ZQogICAgcHVzaGJ5dGVzIDB4MDAKICAgIGludGNfMSAvLyAwCiAgICB1bmNvdmVyIDIKICAgIHNldGJpdAogICAgcHVzaGJ5dGVzIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX2JhcmVfcm91dGluZ0A2OgogICAgLy8gY29udHJhY3RzL1N1YnNpZGl6ZUFwcENhbGwvY29udHJhY3QuYWxnby50czoxOAogICAgLy8gZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3Vic2lkaXplQXBwQ2FsbCBleHRlbmRzIENvbnRyYWN0IHsKICAgIHR4biBPbkNvbXBsZXRpb24KICAgIGJueiBtYWluX2FmdGVyX2lmX2Vsc2VAMTAKICAgIHR4biBBcHBsaWNhdGlvbklECiAgICAhCiAgICBhc3NlcnQgLy8gY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgoKLy8gY29udHJhY3RzL1N1YnNpZGl6ZUFwcENhbGwvY29udHJhY3QuYWxnby50czo6U3Vic2lkaXplQXBwQ2FsbC5zdWJzaWRpemUoKSAtPiB1aW50NjQ6CnN1YnNpZGl6ZToKICAgIC8vIGNvbnRyYWN0cy9TdWJzaWRpemVBcHBDYWxsL2NvbnRyYWN0LmFsZ28udHM6MjMtMjQKICAgIC8vIEBhYmltZXRob2QoKQogICAgLy8gcHVibGljIHN1YnNpZGl6ZSgpOiBib29sZWFuIHsKICAgIHByb3RvIDAgMQogICAgLy8gY29udHJhY3RzL1N1YnNpZGl6ZUFwcENhbGwvY29udHJhY3QuYWxnby50czoyNQogICAgLy8gY29uc3QgcHJldlR4biA9IGd0eG4uVHJhbnNhY3Rpb24oVHhuLmdyb3VwSW5kZXggLSAxKQogICAgdHhuIEdyb3VwSW5kZXgKICAgIGludGNfMCAvLyAxCiAgICAtCiAgICAvLyBjb250cmFjdHMvU3Vic2lkaXplQXBwQ2FsbC9jb250cmFjdC5hbGdvLnRzOjI4CiAgICAvLyBUeG4udHlwZUVudW0gPT09IFRyYW5zYWN0aW9uVHlwZS5QYXltZW50ICYmCiAgICB0eG4gVHlwZUVudW0KICAgIGludGNfMCAvLyAxCiAgICA9PQogICAgLy8gY29udHJhY3RzL1N1YnNpZGl6ZUFwcENhbGwvY29udHJhY3QuYWxnby50czoyOC0yOQogICAgLy8gVHhuLnR5cGVFbnVtID09PSBUcmFuc2FjdGlvblR5cGUuUGF5bWVudCAmJgogICAgLy8gVHhuLnJlY2VpdmVyID09PSBUeG4uc2VuZGVyICYmCiAgICBieiBzdWJzaWRpemVfYm9vbF9mYWxzZUAxMgogICAgLy8gY29udHJhY3RzL1N1YnNpZGl6ZUFwcENhbGwvY29udHJhY3QuYWxnby50czoyOQogICAgLy8gVHhuLnJlY2VpdmVyID09PSBUeG4uc2VuZGVyICYmCiAgICB0eG4gUmVjZWl2ZXIKICAgIHR4biBTZW5kZXIKICAgID09CiAgICAvLyBjb250cmFjdHMvU3Vic2lkaXplQXBwQ2FsbC9jb250cmFjdC5hbGdvLnRzOjI4LTI5CiAgICAvLyBUeG4udHlwZUVudW0gPT09IFRyYW5zYWN0aW9uVHlwZS5QYXltZW50ICYmCiAgICAvLyBUeG4ucmVjZWl2ZXIgPT09IFR4bi5zZW5kZXIgJiYKICAgIGJ6IHN1YnNpZGl6ZV9ib29sX2ZhbHNlQDEyCiAgICAvLyBjb250cmFjdHMvU3Vic2lkaXplQXBwQ2FsbC9jb250cmFjdC5hbGdvLnRzOjMwCiAgICAvLyBUeG4uYW1vdW50ID09PSAwICYmCiAgICB0eG4gQW1vdW50CiAgICAvLyBjb250cmFjdHMvU3Vic2lkaXplQXBwQ2FsbC9jb250cmFjdC5hbGdvLnRzOjI4LTMwCiAgICAvLyBUeG4udHlwZUVudW0gPT09IFRyYW5zYWN0aW9uVHlwZS5QYXltZW50ICYmCiAgICAvLyBUeG4ucmVjZWl2ZXIgPT09IFR4bi5zZW5kZXIgJiYKICAgIC8vIFR4bi5hbW91bnQgPT09IDAgJiYKICAgIGJueiBzdWJzaWRpemVfYm9vbF9mYWxzZUAxMgogICAgLy8gY29udHJhY3RzL1N1YnNpZGl6ZUFwcENhbGwvY29udHJhY3QuYWxnby50czozMQogICAgLy8gVHhuLnJla2V5VG8gPT09IEdsb2JhbC56ZXJvQWRkcmVzcyAmJgogICAgdHhuIFJla2V5VG8KICAgIGdsb2JhbCBaZXJvQWRkcmVzcwogICAgPT0KICAgIC8vIGNvbnRyYWN0cy9TdWJzaWRpemVBcHBDYWxsL2NvbnRyYWN0LmFsZ28udHM6MjgtMzEKICAgIC8vIFR4bi50eXBlRW51bSA9PT0gVHJhbnNhY3Rpb25UeXBlLlBheW1lbnQgJiYKICAgIC8vIFR4bi5yZWNlaXZlciA9PT0gVHhuLnNlbmRlciAmJgogICAgLy8gVHhuLmFtb3VudCA9PT0gMCAmJgogICAgLy8gVHhuLnJla2V5VG8gPT09IEdsb2JhbC56ZXJvQWRkcmVzcyAmJgogICAgYnogc3Vic2lkaXplX2Jvb2xfZmFsc2VAMTIKICAgIC8vIGNvbnRyYWN0cy9TdWJzaWRpemVBcHBDYWxsL2NvbnRyYWN0LmFsZ28udHM6MzIKICAgIC8vIFR4bi5jbG9zZVJlbWFpbmRlclRvID09PSBHbG9iYWwuemVyb0FkZHJlc3MgJiYKICAgIHR4biBDbG9zZVJlbWFpbmRlclRvCiAgICBnbG9iYWwgWmVyb0FkZHJlc3MKICAgID09CiAgICAvLyBjb250cmFjdHMvU3Vic2lkaXplQXBwQ2FsbC9jb250cmFjdC5hbGdvLnRzOjI4LTMyCiAgICAvLyBUeG4udHlwZUVudW0gPT09IFRyYW5zYWN0aW9uVHlwZS5QYXltZW50ICYmCiAgICAvLyBUeG4ucmVjZWl2ZXIgPT09IFR4bi5zZW5kZXIgJiYKICAgIC8vIFR4bi5hbW91bnQgPT09IDAgJiYKICAgIC8vIFR4bi5yZWtleVRvID09PSBHbG9iYWwuemVyb0FkZHJlc3MgJiYKICAgIC8vIFR4bi5jbG9zZVJlbWFpbmRlclRvID09PSBHbG9iYWwuemVyb0FkZHJlc3MgJiYKICAgIGJ6IHN1YnNpZGl6ZV9ib29sX2ZhbHNlQDEyCiAgICAvLyBjb250cmFjdHMvU3Vic2lkaXplQXBwQ2FsbC9jb250cmFjdC5hbGdvLnRzOjMzCiAgICAvLyBUeG4uZmVlID09PSAyICogR2xvYmFsLm1pblR4bkZlZSAmJgogICAgdHhuIEZlZQogICAgcHVzaGludCAyIC8vIDIKICAgIGdsb2JhbCBNaW5UeG5GZWUKICAgICoKICAgID09CiAgICAvLyBjb250cmFjdHMvU3Vic2lkaXplQXBwQ2FsbC9jb250cmFjdC5hbGdvLnRzOjI4LTMzCiAgICAvLyBUeG4udHlwZUVudW0gPT09IFRyYW5zYWN0aW9uVHlwZS5QYXltZW50ICYmCiAgICAvLyBUeG4ucmVjZWl2ZXIgPT09IFR4bi5zZW5kZXIgJiYKICAgIC8vIFR4bi5hbW91bnQgPT09IDAgJiYKICAgIC8vIFR4bi5yZWtleVRvID09PSBHbG9iYWwuemVyb0FkZHJlc3MgJiYKICAgIC8vIFR4bi5jbG9zZVJlbWFpbmRlclRvID09PSBHbG9iYWwuemVyb0FkZHJlc3MgJiYKICAgIC8vIFR4bi5mZWUgPT09IDIgKiBHbG9iYWwubWluVHhuRmVlICYmCiAgICBieiBzdWJzaWRpemVfYm9vbF9mYWxzZUAxMgogICAgLy8gY29udHJhY3RzL1N1YnNpZGl6ZUFwcENhbGwvY29udHJhY3QuYWxnby50czozNAogICAgLy8gVHhuLmxhc3RWYWxpZCA8PSBUZW1wbGF0ZVZhcjx1aW50NjQ+KCdFWFBJUkFUSU9OX1JPVU5EJykgJiYKICAgIHR4biBMYXN0VmFsaWQKICAgIGludGNfMiAvLyBUTVBMX0VYUElSQVRJT05fUk9VTkQKICAgIDw9CiAgICAvLyBjb250cmFjdHMvU3Vic2lkaXplQXBwQ2FsbC9jb250cmFjdC5hbGdvLnRzOjI4LTM0CiAgICAvLyBUeG4udHlwZUVudW0gPT09IFRyYW5zYWN0aW9uVHlwZS5QYXltZW50ICYmCiAgICAvLyBUeG4ucmVjZWl2ZXIgPT09IFR4bi5zZW5kZXIgJiYKICAgIC8vIFR4bi5hbW91bnQgPT09IDAgJiYKICAgIC8vIFR4bi5yZWtleVRvID09PSBHbG9iYWwuemVyb0FkZHJlc3MgJiYKICAgIC8vIFR4bi5jbG9zZVJlbWFpbmRlclRvID09PSBHbG9iYWwuemVyb0FkZHJlc3MgJiYKICAgIC8vIFR4bi5mZWUgPT09IDIgKiBHbG9iYWwubWluVHhuRmVlICYmCiAgICAvLyBUeG4ubGFzdFZhbGlkIDw9IFRlbXBsYXRlVmFyPHVpbnQ2ND4oJ0VYUElSQVRJT05fUk9VTkQnKSAmJgogICAgYnogc3Vic2lkaXplX2Jvb2xfZmFsc2VAMTIKICAgIC8vIGNvbnRyYWN0cy9TdWJzaWRpemVBcHBDYWxsL2NvbnRyYWN0LmFsZ28udHM6MzUKICAgIC8vIEdsb2JhbC5nZW5lc2lzSGFzaCA9PT0gVGVtcGxhdGVWYXI8Ynl0ZXM+KCdUQVJHRVRfTkVUV09SS19HRU5FU0lTJykgJiYKICAgIGdsb2JhbCBHZW5lc2lzSGFzaAogICAgYnl0ZWNfMCAvLyBUTVBMX1RBUkdFVF9ORVRXT1JLX0dFTkVTSVMKICAgID09CiAgICAvLyBjb250cmFjdHMvU3Vic2lkaXplQXBwQ2FsbC9jb250cmFjdC5hbGdvLnRzOjI4LTM1CiAgICAvLyBUeG4udHlwZUVudW0gPT09IFRyYW5zYWN0aW9uVHlwZS5QYXltZW50ICYmCiAgICAvLyBUeG4ucmVjZWl2ZXIgPT09IFR4bi5zZW5kZXIgJiYKICAgIC8vIFR4bi5hbW91bnQgPT09IDAgJiYKICAgIC8vIFR4bi5yZWtleVRvID09PSBHbG9iYWwuemVyb0FkZHJlc3MgJiYKICAgIC8vIFR4bi5jbG9zZVJlbWFpbmRlclRvID09PSBHbG9iYWwuemVyb0FkZHJlc3MgJiYKICAgIC8vIFR4bi5mZWUgPT09IDIgKiBHbG9iYWwubWluVHhuRmVlICYmCiAgICAvLyBUeG4ubGFzdFZhbGlkIDw9IFRlbXBsYXRlVmFyPHVpbnQ2ND4oJ0VYUElSQVRJT05fUk9VTkQnKSAmJgogICAgLy8gR2xvYmFsLmdlbmVzaXNIYXNoID09PSBUZW1wbGF0ZVZhcjxieXRlcz4oJ1RBUkdFVF9ORVRXT1JLX0dFTkVTSVMnKSAmJgogICAgYnogc3Vic2lkaXplX2Jvb2xfZmFsc2VAMTIKICAgIC8vIGNvbnRyYWN0cy9TdWJzaWRpemVBcHBDYWxsL2NvbnRyYWN0LmFsZ28udHM6MzcKICAgIC8vIHByZXZUeG4udHlwZSA9PT0gVHJhbnNhY3Rpb25UeXBlLkFwcGxpY2F0aW9uQ2FsbCAmJgogICAgZnJhbWVfZGlnIDAKICAgIGd0eG5zIFR5cGVFbnVtCiAgICBwdXNoaW50IDYgLy8gNgogICAgPT0KICAgIC8vIGNvbnRyYWN0cy9TdWJzaWRpemVBcHBDYWxsL2NvbnRyYWN0LmFsZ28udHM6MjgtMzcKICAgIC8vIFR4bi50eXBlRW51bSA9PT0gVHJhbnNhY3Rpb25UeXBlLlBheW1lbnQgJiYKICAgIC8vIFR4bi5yZWNlaXZlciA9PT0gVHhuLnNlbmRlciAmJgogICAgLy8gVHhuLmFtb3VudCA9PT0gMCAmJgogICAgLy8gVHhuLnJla2V5VG8gPT09IEdsb2JhbC56ZXJvQWRkcmVzcyAmJgogICAgLy8gVHhuLmNsb3NlUmVtYWluZGVyVG8gPT09IEdsb2JhbC56ZXJvQWRkcmVzcyAmJgogICAgLy8gVHhuLmZlZSA9PT0gMiAqIEdsb2JhbC5taW5UeG5GZWUgJiYKICAgIC8vIFR4bi5sYXN0VmFsaWQgPD0gVGVtcGxhdGVWYXI8dWludDY0PignRVhQSVJBVElPTl9ST1VORCcpICYmCiAgICAvLyBHbG9iYWwuZ2VuZXNpc0hhc2ggPT09IFRlbXBsYXRlVmFyPGJ5dGVzPignVEFSR0VUX05FVFdPUktfR0VORVNJUycpICYmCiAgICAvLyAvLyBpcyB0aGUgcHJldmlvdXMgdHJhbnNhY3Rpb24gaW4gdGhlIGdyb3VwIGFuIGFwcGxpY2F0aW9uIGNhbGwgdG8gYSBrbm93biBhcHA/CiAgICAvLyBwcmV2VHhuLnR5cGUgPT09IFRyYW5zYWN0aW9uVHlwZS5BcHBsaWNhdGlvbkNhbGwgJiYKICAgIGJ6IHN1YnNpZGl6ZV9ib29sX2ZhbHNlQDEyCiAgICAvLyBjb250cmFjdHMvU3Vic2lkaXplQXBwQ2FsbC9jb250cmFjdC5hbGdvLnRzOjM4CiAgICAvLyBwcmV2VHhuLmFwcElkID09PSBUZW1wbGF0ZVZhcjxBcHBsaWNhdGlvbj4oJ0tOT1dOX0FQUCcpICYmCiAgICBmcmFtZV9kaWcgMAogICAgZ3R4bnMgQXBwbGljYXRpb25JRAogICAgaW50Y18zIC8vIFRNUExfS05PV05fQVBQCiAgICA9PQogICAgLy8gY29udHJhY3RzL1N1YnNpZGl6ZUFwcENhbGwvY29udHJhY3QuYWxnby50czoyOC0zOAogICAgLy8gVHhuLnR5cGVFbnVtID09PSBUcmFuc2FjdGlvblR5cGUuUGF5bWVudCAmJgogICAgLy8gVHhuLnJlY2VpdmVyID09PSBUeG4uc2VuZGVyICYmCiAgICAvLyBUeG4uYW1vdW50ID09PSAwICYmCiAgICAvLyBUeG4ucmVrZXlUbyA9PT0gR2xvYmFsLnplcm9BZGRyZXNzICYmCiAgICAvLyBUeG4uY2xvc2VSZW1haW5kZXJUbyA9PT0gR2xvYmFsLnplcm9BZGRyZXNzICYmCiAgICAvLyBUeG4uZmVlID09PSAyICogR2xvYmFsLm1pblR4bkZlZSAmJgogICAgLy8gVHhuLmxhc3RWYWxpZCA8PSBUZW1wbGF0ZVZhcjx1aW50NjQ+KCdFWFBJUkFUSU9OX1JPVU5EJykgJiYKICAgIC8vIEdsb2JhbC5nZW5lc2lzSGFzaCA9PT0gVGVtcGxhdGVWYXI8Ynl0ZXM+KCdUQVJHRVRfTkVUV09SS19HRU5FU0lTJykgJiYKICAgIC8vIC8vIGlzIHRoZSBwcmV2aW91cyB0cmFuc2FjdGlvbiBpbiB0aGUgZ3JvdXAgYW4gYXBwbGljYXRpb24gY2FsbCB0byBhIGtub3duIGFwcD8KICAgIC8vIHByZXZUeG4udHlwZSA9PT0gVHJhbnNhY3Rpb25UeXBlLkFwcGxpY2F0aW9uQ2FsbCAmJgogICAgLy8gcHJldlR4bi5hcHBJZCA9PT0gVGVtcGxhdGVWYXI8QXBwbGljYXRpb24+KCdLTk9XTl9BUFAnKSAmJgogICAgYnogc3Vic2lkaXplX2Jvb2xfZmFsc2VAMTIKICAgIC8vIGNvbnRyYWN0cy9TdWJzaWRpemVBcHBDYWxsL2NvbnRyYWN0LmFsZ28udHM6MzkKICAgIC8vIHByZXZUeG4uZmVlID09PSAwCiAgICBmcmFtZV9kaWcgMAogICAgZ3R4bnMgRmVlCiAgICAvLyBjb250cmFjdHMvU3Vic2lkaXplQXBwQ2FsbC9jb250cmFjdC5hbGdvLnRzOjI4LTM5CiAgICAvLyBUeG4udHlwZUVudW0gPT09IFRyYW5zYWN0aW9uVHlwZS5QYXltZW50ICYmCiAgICAvLyBUeG4ucmVjZWl2ZXIgPT09IFR4bi5zZW5kZXIgJiYKICAgIC8vIFR4bi5hbW91bnQgPT09IDAgJiYKICAgIC8vIFR4bi5yZWtleVRvID09PSBHbG9iYWwuemVyb0FkZHJlc3MgJiYKICAgIC8vIFR4bi5jbG9zZVJlbWFpbmRlclRvID09PSBHbG9iYWwuemVyb0FkZHJlc3MgJiYKICAgIC8vIFR4bi5mZWUgPT09IDIgKiBHbG9iYWwubWluVHhuRmVlICYmCiAgICAvLyBUeG4ubGFzdFZhbGlkIDw9IFRlbXBsYXRlVmFyPHVpbnQ2ND4oJ0VYUElSQVRJT05fUk9VTkQnKSAmJgogICAgLy8gR2xvYmFsLmdlbmVzaXNIYXNoID09PSBUZW1wbGF0ZVZhcjxieXRlcz4oJ1RBUkdFVF9ORVRXT1JLX0dFTkVTSVMnKSAmJgogICAgLy8gLy8gaXMgdGhlIHByZXZpb3VzIHRyYW5zYWN0aW9uIGluIHRoZSBncm91cCBhbiBhcHBsaWNhdGlvbiBjYWxsIHRvIGEga25vd24gYXBwPwogICAgLy8gcHJldlR4bi50eXBlID09PSBUcmFuc2FjdGlvblR5cGUuQXBwbGljYXRpb25DYWxsICYmCiAgICAvLyBwcmV2VHhuLmFwcElkID09PSBUZW1wbGF0ZVZhcjxBcHBsaWNhdGlvbj4oJ0tOT1dOX0FQUCcpICYmCiAgICAvLyBwcmV2VHhuLmZlZSA9PT0gMAogICAgYm56IHN1YnNpZGl6ZV9ib29sX2ZhbHNlQDEyCiAgICBpbnRjXzAgLy8gMQoKc3Vic2lkaXplX2Jvb2xfbWVyZ2VAMTM6CiAgICAvLyBjb250cmFjdHMvU3Vic2lkaXplQXBwQ2FsbC9jb250cmFjdC5hbGdvLnRzOjI2LTQwCiAgICAvLyByZXR1cm4gKAogICAgLy8gICAvLyBpcyBpdCBzYWZlIHRvIHBheSBmb3IgdGhlIGZlZXMgb2YgdGhlIHByZXZpb3VzIHRyYW5zYWN0aW9uPwogICAgLy8gICBUeG4udHlwZUVudW0gPT09IFRyYW5zYWN0aW9uVHlwZS5QYXltZW50ICYmCiAgICAvLyAgIFR4bi5yZWNlaXZlciA9PT0gVHhuLnNlbmRlciAmJgogICAgLy8gICBUeG4uYW1vdW50ID09PSAwICYmCiAgICAvLyAgIFR4bi5yZWtleVRvID09PSBHbG9iYWwuemVyb0FkZHJlc3MgJiYKICAgIC8vICAgVHhuLmNsb3NlUmVtYWluZGVyVG8gPT09IEdsb2JhbC56ZXJvQWRkcmVzcyAmJgogICAgLy8gICBUeG4uZmVlID09PSAyICogR2xvYmFsLm1pblR4bkZlZSAmJgogICAgLy8gICBUeG4ubGFzdFZhbGlkIDw9IFRlbXBsYXRlVmFyPHVpbnQ2ND4oJ0VYUElSQVRJT05fUk9VTkQnKSAmJgogICAgLy8gICBHbG9iYWwuZ2VuZXNpc0hhc2ggPT09IFRlbXBsYXRlVmFyPGJ5dGVzPignVEFSR0VUX05FVFdPUktfR0VORVNJUycpICYmCiAgICAvLyAgIC8vIGlzIHRoZSBwcmV2aW91cyB0cmFuc2FjdGlvbiBpbiB0aGUgZ3JvdXAgYW4gYXBwbGljYXRpb24gY2FsbCB0byBhIGtub3duIGFwcD8KICAgIC8vICAgcHJldlR4bi50eXBlID09PSBUcmFuc2FjdGlvblR5cGUuQXBwbGljYXRpb25DYWxsICYmCiAgICAvLyAgIHByZXZUeG4uYXBwSWQgPT09IFRlbXBsYXRlVmFyPEFwcGxpY2F0aW9uPignS05PV05fQVBQJykgJiYKICAgIC8vICAgcHJldlR4bi5mZWUgPT09IDAKICAgIC8vICkKICAgIHN3YXAKICAgIHJldHN1YgoKc3Vic2lkaXplX2Jvb2xfZmFsc2VAMTI6CiAgICBpbnRjXzEgLy8gMAogICAgYiBzdWJzaWRpemVfYm9vbF9tZXJnZUAxMwo=",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiAEAQAAACYBADEbQQArgARV4yOqNhoAjgEAAiNDMRkURDEYRIgAHYABACNPAlSABBUffHVMULAiQzEZQP/dMRgURCJDigABMRYiCTEQIhJBAFMxBzEAEkEASzEIQABGMSAyAxJBAD4xCTIDEkEANjEBgQIyAAsSQQArMQQkDkEAJDIRKBJBAB2LADgQgQYSQQATiwA4GCUSQQAKiwA4AUAAAyJMiSNC//o=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 4,
            "patch": 4
        }
    },
    "events": [],
    "templateVariables": {
        "EXPIRATION_ROUND": {
            "type": "AVMUint64"
        },
        "KNOWN_APP": {
            "type": "AVMUint64"
        },
        "TARGET_NETWORK_GENESIS": {
            "type": "AVMBytes"
        }
    }
}