#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    bytecblock 0x151f7c75
    // contracts/ReferenceAsset/contract.algo.ts:7
    // export default class ReferenceAsset extends Contract {
    txn NumAppArgs
    bz main___algots__.defaultCreate@9
    txn OnCompletion
    !
    assert // OnCompletion must be NoOp
    txn ApplicationID
    assert
    pushbytess 0x1d90e1ba 0x390076ea // method "getAssetTotalSupply()uint64", method "getAssetTotalSupplyWithArgument(uint64)uint64"
    txna ApplicationArgs 0
    match getAssetTotalSupply getAssetTotalSupplyWithArgument
    err

main___algots__.defaultCreate@9:
    // contracts/ReferenceAsset/contract.algo.ts:7
    // export default class ReferenceAsset extends Contract {
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating


// contracts/ReferenceAsset/contract.algo.ts::ReferenceAsset.getAssetTotalSupply[routing]() -> void:
getAssetTotalSupply:
    // contracts/ReferenceAsset/contract.algo.ts:14
    // return Asset(1005).total // Replace with your asset id
    pushint 1005 // 1005
    asset_params_get AssetTotal
    assert // asset exists
    // contracts/ReferenceAsset/contract.algo.ts:12
    // @abimethod({ readonly: true })
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return


// contracts/ReferenceAsset/contract.algo.ts::ReferenceAsset.getAssetTotalSupplyWithArgument[routing]() -> void:
getAssetTotalSupplyWithArgument:
    // contracts/ReferenceAsset/contract.algo.ts:22
    // @abimethod({ readonly: true })
    txna ApplicationArgs 1
    btoi
    // contracts/ReferenceAsset/contract.algo.ts:24
    // return asset.total
    asset_params_get AssetTotal
    assert // asset exists
    // contracts/ReferenceAsset/contract.algo.ts:22
    // @abimethod({ readonly: true })
    itob
    bytec_0 // 0x151f7c75
    swap
    concat
    log
    pushint 1 // 1
    return
