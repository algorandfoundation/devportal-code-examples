{
  "version": 3,
  "sources": [
    "/Users/gabe.algo/Code/devportal-code-examples/projects/typescript-examples/contracts/InnerTransactions/contract.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;AAkBA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAsTG;;AAAA;AAAA;AAAA;;AAAA;AAtTH;;;AAAA;AAAA;;AAsTG;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAlBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;AAAA;AAAA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAxCA;;AAAA;AAAA;AAAA;;AAAA;AAvOH;;;AAAA;AAAA;;AAuOG;;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAtNH;;;AAAA;AAAA;;AAsNG;;;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AA1LH;;;AAAA;AAAA;;AA0LG;;;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AAhKH;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AAgKG;;;AAAA;;AAzBA;;AAAA;AAAA;AAAA;;AAAA;AAvIH;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAuIG;;;AAAA;;AA3BA;;AAAA;AAAA;AAAA;;AAAA;AA5GH;;;AAAA;AAAA;;AAAA;;;AAAA;AAAA;;AAAA;;;AAAA;AA4GG;;;AAAA;;AA5BA;;AAAA;AAAA;AAAA;;AAAA;AAhFH;;;AAAA;AAAA;;AAgFG;;;AAAA;;AA1BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AArBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AA3BA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AANH;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAQmB;AAGG;;;;AADN;;;;;AAFG;;;AAIN;;;AAJM;;;AAQf;AAmBmB;AAKJ;;;;;;;;;;;;;;;;;;AADD;;;;;;AADA;;;;AADH;;;;;;;;;AAFQ;;;AAAA;;;AAAA;;;AASnB;AAYmB;AAOC;;AACA;;;;;;;;;;AAFX;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AADM;;;;;;;;;;;;;AADD;;;;;;AADA;;;;AADH;;;;AAFQ;;;AAWV;;;AAXU;;;AAenB;AASF;;;AAEE;AAE0B;;AAET;;;;;;;;;AAJjB;;;AAKS;;;AALT;;AA0BF;;;AAEE;;;;;;;;;;;;;AAAA;;;AAKS;;;AALT;;AAyBF;;;AAEE;AAIY;;;;;;;;;;;AAJZ;;;;AAKS;;;AALT;;AAuBF;;;AAEE;AAE0B;;;;;;;;;;;;;;;;AAF1B;;;AAMS;;;AANT;;AAwBF;;;AAEE;AAGoB;;AACA;AACJ;;AACE;;;;;;;;;;;;;AANlB;;;AAOS;;;AAPT;;AA0BF;;;AAEE;;;;;AAAA;;;AAGS;;;AAHT;;AAeF;;;AAGiB;AAGG;;;;AADN;;;;;AAFG;;;AAIN;;;AAJM;;;AASI;AAGL;;;AAAsD;;;;;;;;AAAQ;;;;;;;AAHzD;;;;AAIV;;;AAJU;;;AASM;AAAA;;;AAA4C;AAA5C;AAAA;AAAA;;;AACzB;AAsBe;AAGc;;;;;;;;;;;;;;;;;;;;;;;AADF;;;;;;;;;;;;;;;;;;;;AAFZ;;;;AAIN;;;AAJM;;;AAQf;AA2BF;;;AAGkB;AAGF;;;AAA4D;;;;;;;;AAAe;;;;;;;AAHzE;;;;AAAA;;;AAAA;;;AAQT;AAAA;;;AAAyC;AAAzC;AAAA;AAAA;;;AAAP",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 3 4"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 0x3aad6d86 \"Doe\""
    },
    "23": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "25": {
      "op": "bz main_bare_routing@18",
      "stack_out": []
    },
    "28": {
      "op": "pushbytess 0x23950027 0x0207f77d 0xd2249284 0x66a063bf 0x12563767 0xcfb12db1 0x7b58e236 0xd0864ff4 0x5351d7be 0x5727ecae 0xda20a87e 0x38ecc014 0x9aeec159 // method \"payment()uint64\", method \"fungibleAssetCreate()uint64\", method \"nonFungibleAssetCreate()uint64\", method \"assetOptIn(asset)void\", method \"assetTransfer(asset,account,uint64)void\", method \"assetFreeze(account,asset)void\", method \"assetRevoke(asset,account,uint64)void\", method \"assetConfig(asset)void\", method \"assetDelete(asset)void\", method \"multiInnerTxns(application)(uint64,string)\", method \"deployApp()uint64\", method \"arc4DeployApp()uint64\", method \"noopAppCall(application)string\"",
      "defined_out": [
        "Method(arc4DeployApp()uint64)",
        "Method(assetConfig(asset)void)",
        "Method(assetDelete(asset)void)",
        "Method(assetFreeze(account,asset)void)",
        "Method(assetOptIn(asset)void)",
        "Method(assetRevoke(asset,account,uint64)void)",
        "Method(assetTransfer(asset,account,uint64)void)",
        "Method(deployApp()uint64)",
        "Method(fungibleAssetCreate()uint64)",
        "Method(multiInnerTxns(application)(uint64,string))",
        "Method(nonFungibleAssetCreate()uint64)",
        "Method(noopAppCall(application)string)",
        "Method(payment()uint64)"
      ],
      "stack_out": [
        "Method(payment()uint64)",
        "Method(fungibleAssetCreate()uint64)",
        "Method(nonFungibleAssetCreate()uint64)",
        "Method(assetOptIn(asset)void)",
        "Method(assetTransfer(asset,account,uint64)void)",
        "Method(assetFreeze(account,asset)void)",
        "Method(assetRevoke(asset,account,uint64)void)",
        "Method(assetConfig(asset)void)",
        "Method(assetDelete(asset)void)",
        "Method(multiInnerTxns(application)(uint64,string))",
        "Method(deployApp()uint64)",
        "Method(arc4DeployApp()uint64)",
        "Method(noopAppCall(application)string)"
      ]
    },
    "95": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(arc4DeployApp()uint64)",
        "Method(assetConfig(asset)void)",
        "Method(assetDelete(asset)void)",
        "Method(assetFreeze(account,asset)void)",
        "Method(assetOptIn(asset)void)",
        "Method(assetRevoke(asset,account,uint64)void)",
        "Method(assetTransfer(asset,account,uint64)void)",
        "Method(deployApp()uint64)",
        "Method(fungibleAssetCreate()uint64)",
        "Method(multiInnerTxns(application)(uint64,string))",
        "Method(nonFungibleAssetCreate()uint64)",
        "Method(noopAppCall(application)string)",
        "Method(payment()uint64)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(payment()uint64)",
        "Method(fungibleAssetCreate()uint64)",
        "Method(nonFungibleAssetCreate()uint64)",
        "Method(assetOptIn(asset)void)",
        "Method(assetTransfer(asset,account,uint64)void)",
        "Method(assetFreeze(account,asset)void)",
        "Method(assetRevoke(asset,account,uint64)void)",
        "Method(assetConfig(asset)void)",
        "Method(assetDelete(asset)void)",
        "Method(multiInnerTxns(application)(uint64,string))",
        "Method(deployApp()uint64)",
        "Method(arc4DeployApp()uint64)",
        "Method(noopAppCall(application)string)",
        "tmp%2#0"
      ]
    },
    "98": {
      "op": "match main_payment_route@3 main_fungibleAssetCreate_route@4 main_nonFungibleAssetCreate_route@5 main_assetOptIn_route@6 main_assetTransfer_route@7 main_assetFreeze_route@8 main_assetRevoke_route@9 main_assetConfig_route@10 main_assetDelete_route@11 main_multiInnerTxns_route@12 main_deployApp_route@13 main_arc4DeployApp_route@14 main_noopAppCall_route@15",
      "stack_out": []
    },
    "126": {
      "block": "main_after_if_else@22",
      "stack_in": [],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "127": {
      "op": "return",
      "stack_out": []
    },
    "128": {
      "block": "main_noopAppCall_route@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%79#0"
      ],
      "stack_out": [
        "tmp%79#0"
      ]
    },
    "130": {
      "op": "!",
      "defined_out": [
        "tmp%80#0"
      ],
      "stack_out": [
        "tmp%80#0"
      ]
    },
    "131": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "132": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%81#0"
      ],
      "stack_out": [
        "tmp%81#0"
      ]
    },
    "134": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "135": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%10#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%10#0"
      ]
    },
    "138": {
      "op": "btoi",
      "defined_out": [
        "tmp%83#0"
      ],
      "stack_out": [
        "tmp%83#0"
      ]
    },
    "139": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%84#0"
      ],
      "stack_out": [
        "tmp%84#0"
      ]
    },
    "141": {
      "callsub": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.noopAppCall",
      "op": "callsub noopAppCall",
      "defined_out": [
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0"
      ]
    },
    "144": {
      "op": "dup",
      "defined_out": [
        "to_encode%5#0",
        "to_encode%5#0 (copy)"
      ],
      "stack_out": [
        "to_encode%5#0",
        "to_encode%5#0 (copy)"
      ]
    },
    "145": {
      "op": "len",
      "defined_out": [
        "length%1#0",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "length%1#0"
      ]
    },
    "146": {
      "op": "itob",
      "defined_out": [
        "as_bytes%2#0",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "as_bytes%2#0"
      ]
    },
    "147": {
      "op": "extract 6 2",
      "defined_out": [
        "length_uint16%1#0",
        "to_encode%5#0"
      ],
      "stack_out": [
        "to_encode%5#0",
        "length_uint16%1#0"
      ]
    },
    "150": {
      "op": "swap",
      "stack_out": [
        "length_uint16%1#0",
        "to_encode%5#0"
      ]
    },
    "151": {
      "op": "concat",
      "defined_out": [
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0"
      ]
    },
    "152": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ],
      "stack_out": [
        "encoded_value%1#0",
        "0x151f7c75"
      ]
    },
    "153": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_value%1#0"
      ]
    },
    "154": {
      "op": "concat",
      "defined_out": [
        "tmp%85#0"
      ],
      "stack_out": [
        "tmp%85#0"
      ]
    },
    "155": {
      "op": "log",
      "stack_out": []
    },
    "156": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "157": {
      "op": "return",
      "stack_out": []
    },
    "158": {
      "block": "main_arc4DeployApp_route@14",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%74#0"
      ],
      "stack_out": [
        "tmp%74#0"
      ]
    },
    "160": {
      "op": "!",
      "defined_out": [
        "tmp%75#0"
      ],
      "stack_out": [
        "tmp%75#0"
      ]
    },
    "161": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "162": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%76#0"
      ],
      "stack_out": [
        "tmp%76#0"
      ]
    },
    "164": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "165": {
      "op": "pushbytes 0x151f7c7500000000000004d2",
      "defined_out": [
        "0x151f7c7500000000000004d2"
      ],
      "stack_out": [
        "0x151f7c7500000000000004d2"
      ]
    },
    "179": {
      "op": "log",
      "stack_out": []
    },
    "180": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "181": {
      "op": "return",
      "stack_out": []
    },
    "182": {
      "block": "main_deployApp_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%69#0"
      ],
      "stack_out": [
        "tmp%69#0"
      ]
    },
    "184": {
      "op": "!",
      "defined_out": [
        "tmp%70#0"
      ],
      "stack_out": [
        "tmp%70#0"
      ]
    },
    "185": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "186": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%71#0"
      ],
      "stack_out": [
        "tmp%71#0"
      ]
    },
    "188": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "189": {
      "callsub": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.deployApp",
      "op": "callsub deployApp",
      "defined_out": [
        "to_encode%3#0"
      ],
      "stack_out": [
        "to_encode%3#0"
      ]
    },
    "192": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0"
      ]
    },
    "193": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ],
      "stack_out": [
        "val_as_bytes%4#0",
        "0x151f7c75"
      ]
    },
    "194": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%4#0"
      ]
    },
    "195": {
      "op": "concat",
      "defined_out": [
        "tmp%73#0"
      ],
      "stack_out": [
        "tmp%73#0"
      ]
    },
    "196": {
      "op": "log",
      "stack_out": []
    },
    "197": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "198": {
      "op": "return",
      "stack_out": []
    },
    "199": {
      "block": "main_multiInnerTxns_route@12",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%62#0"
      ],
      "stack_out": [
        "tmp%62#0"
      ]
    },
    "201": {
      "op": "!",
      "defined_out": [
        "tmp%63#0"
      ],
      "stack_out": [
        "tmp%63#0"
      ]
    },
    "202": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "203": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%64#0"
      ],
      "stack_out": [
        "tmp%64#0"
      ]
    },
    "205": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "206": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%9#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%9#0"
      ]
    },
    "209": {
      "op": "btoi",
      "defined_out": [
        "tmp%66#0"
      ],
      "stack_out": [
        "tmp%66#0"
      ]
    },
    "210": {
      "op": "txnas Applications",
      "defined_out": [
        "tmp%67#0"
      ],
      "stack_out": [
        "tmp%67#0"
      ]
    },
    "212": {
      "callsub": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.multiInnerTxns",
      "op": "callsub multiInnerTxns",
      "defined_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0"
      ],
      "stack_out": [
        "elements_to_encode%0#0",
        "elements_to_encode%1#0"
      ]
    },
    "215": {
      "op": "swap",
      "stack_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%0#0"
      ]
    },
    "216": {
      "op": "itob",
      "defined_out": [
        "elements_to_encode%1#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "val_as_bytes%3#0"
      ]
    },
    "217": {
      "op": "dig 1",
      "defined_out": [
        "elements_to_encode%1#0",
        "elements_to_encode%1#0 (copy)",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "val_as_bytes%3#0",
        "elements_to_encode%1#0 (copy)"
      ]
    },
    "219": {
      "op": "len",
      "defined_out": [
        "elements_to_encode%1#0",
        "length%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "val_as_bytes%3#0",
        "length%0#0"
      ]
    },
    "220": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "elements_to_encode%1#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "val_as_bytes%3#0",
        "as_bytes%0#0"
      ]
    },
    "221": {
      "op": "extract 6 2",
      "defined_out": [
        "elements_to_encode%1#0",
        "length_uint16%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "elements_to_encode%1#0",
        "val_as_bytes%3#0",
        "length_uint16%0#0"
      ]
    },
    "224": {
      "op": "uncover 2",
      "stack_out": [
        "val_as_bytes%3#0",
        "length_uint16%0#0",
        "elements_to_encode%1#0"
      ]
    },
    "226": {
      "op": "concat",
      "defined_out": [
        "encoded_value%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "val_as_bytes%3#0",
        "encoded_value%0#0"
      ]
    },
    "227": {
      "op": "swap",
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%3#0"
      ]
    },
    "228": {
      "op": "pushbytes 0x000a",
      "defined_out": [
        "0x000a",
        "encoded_value%0#0",
        "val_as_bytes%3#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "val_as_bytes%3#0",
        "0x000a"
      ]
    },
    "232": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0"
      ],
      "stack_out": [
        "encoded_value%0#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "233": {
      "op": "swap",
      "stack_out": [
        "encoded_tuple_buffer%2#0",
        "encoded_value%0#0"
      ]
    },
    "234": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0"
      ]
    },
    "235": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%3#0"
      ],
      "stack_out": [
        "encoded_tuple_buffer%3#0",
        "0x151f7c75"
      ]
    },
    "236": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "encoded_tuple_buffer%3#0"
      ]
    },
    "237": {
      "op": "concat",
      "defined_out": [
        "tmp%68#0"
      ],
      "stack_out": [
        "tmp%68#0"
      ]
    },
    "238": {
      "op": "log",
      "stack_out": []
    },
    "239": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "240": {
      "op": "return",
      "stack_out": []
    },
    "241": {
      "block": "main_assetDelete_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "243": {
      "op": "!",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "244": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "245": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "247": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "248": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%8#0"
      ]
    },
    "251": {
      "op": "btoi",
      "defined_out": [
        "tmp%60#0"
      ],
      "stack_out": [
        "tmp%60#0"
      ]
    },
    "252": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%61#0"
      ],
      "stack_out": [
        "tmp%61#0"
      ]
    },
    "254": {
      "callsub": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.assetDelete",
      "op": "callsub assetDelete",
      "stack_out": []
    },
    "257": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "258": {
      "op": "return",
      "stack_out": []
    },
    "259": {
      "block": "main_assetConfig_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "261": {
      "op": "!",
      "defined_out": [
        "tmp%51#0"
      ],
      "stack_out": [
        "tmp%51#0"
      ]
    },
    "262": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "263": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "265": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "266": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%7#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%7#0"
      ]
    },
    "269": {
      "op": "btoi",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "270": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%55#0"
      ],
      "stack_out": [
        "tmp%55#0"
      ]
    },
    "272": {
      "callsub": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.assetConfig",
      "op": "callsub assetConfig",
      "stack_out": []
    },
    "275": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "276": {
      "op": "return",
      "stack_out": []
    },
    "277": {
      "block": "main_assetRevoke_route@9",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "279": {
      "op": "!",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "280": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "281": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "283": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "284": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%5#0"
      ]
    },
    "287": {
      "op": "btoi",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "288": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "290": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%6#0",
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "reinterpret_bytes[1]%6#0"
      ]
    },
    "293": {
      "op": "btoi",
      "defined_out": [
        "tmp%46#0",
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "tmp%47#0"
      ]
    },
    "294": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%46#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "tmp%48#0"
      ]
    },
    "296": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%1#0",
        "tmp%46#0",
        "tmp%48#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "tmp%48#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "299": {
      "op": "btoi",
      "defined_out": [
        "tmp%46#0",
        "tmp%48#0",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%46#0",
        "tmp%48#0",
        "tmp%49#0"
      ]
    },
    "300": {
      "callsub": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.assetRevoke",
      "op": "callsub assetRevoke",
      "stack_out": []
    },
    "303": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "304": {
      "op": "return",
      "stack_out": []
    },
    "305": {
      "block": "main_assetFreeze_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "307": {
      "op": "!",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "308": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "309": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%35#0"
      ],
      "stack_out": [
        "tmp%35#0"
      ]
    },
    "311": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "312": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%3#0"
      ]
    },
    "315": {
      "op": "btoi",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "316": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "318": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%4#0",
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "reinterpret_bytes[1]%4#0"
      ]
    },
    "321": {
      "op": "btoi",
      "defined_out": [
        "tmp%38#0",
        "tmp%39#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%39#0"
      ]
    },
    "322": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%38#0",
        "tmp%40#0"
      ],
      "stack_out": [
        "tmp%38#0",
        "tmp%40#0"
      ]
    },
    "324": {
      "callsub": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.assetFreeze",
      "op": "callsub assetFreeze",
      "stack_out": []
    },
    "327": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "328": {
      "op": "return",
      "stack_out": []
    },
    "329": {
      "block": "main_assetTransfer_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "331": {
      "op": "!",
      "defined_out": [
        "tmp%25#0"
      ],
      "stack_out": [
        "tmp%25#0"
      ]
    },
    "332": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "333": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "335": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "336": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "339": {
      "op": "btoi",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "340": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0"
      ]
    },
    "342": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[1]%2#0",
        "tmp%29#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "reinterpret_bytes[1]%2#0"
      ]
    },
    "345": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0",
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%30#0"
      ]
    },
    "346": {
      "op": "txnas Accounts",
      "defined_out": [
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0"
      ]
    },
    "348": {
      "op": "txna ApplicationArgs 3",
      "defined_out": [
        "reinterpret_bytes[8]%0#0",
        "tmp%29#0",
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "351": {
      "op": "btoi",
      "defined_out": [
        "tmp%29#0",
        "tmp%31#0",
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%29#0",
        "tmp%31#0",
        "tmp%32#0"
      ]
    },
    "352": {
      "callsub": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.assetTransfer",
      "op": "callsub assetTransfer",
      "stack_out": []
    },
    "355": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "356": {
      "op": "return",
      "stack_out": []
    },
    "357": {
      "block": "main_assetOptIn_route@6",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "359": {
      "op": "!",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "360": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "361": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "363": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "364": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "367": {
      "op": "btoi",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "368": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "tmp%23#0"
      ]
    },
    "370": {
      "callsub": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.assetOptIn",
      "op": "callsub assetOptIn",
      "stack_out": []
    },
    "373": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "374": {
      "op": "return",
      "stack_out": []
    },
    "375": {
      "block": "main_nonFungibleAssetCreate_route@5",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%13#0"
      ],
      "stack_out": [
        "tmp%13#0"
      ]
    },
    "377": {
      "op": "!",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "378": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "379": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "381": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "382": {
      "callsub": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.nonFungibleAssetCreate",
      "op": "callsub nonFungibleAssetCreate",
      "defined_out": [
        "to_encode%2#0"
      ],
      "stack_out": [
        "to_encode%2#0"
      ]
    },
    "385": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0"
      ]
    },
    "386": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ],
      "stack_out": [
        "val_as_bytes%2#0",
        "0x151f7c75"
      ]
    },
    "387": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%2#0"
      ]
    },
    "388": {
      "op": "concat",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "tmp%17#0"
      ]
    },
    "389": {
      "op": "log",
      "stack_out": []
    },
    "390": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "391": {
      "op": "return",
      "stack_out": []
    },
    "392": {
      "block": "main_fungibleAssetCreate_route@4",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "394": {
      "op": "!",
      "defined_out": [
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%9#0"
      ]
    },
    "395": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "396": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "398": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "399": {
      "callsub": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.fungibleAssetCreate",
      "op": "callsub fungibleAssetCreate",
      "defined_out": [
        "to_encode%1#0"
      ],
      "stack_out": [
        "to_encode%1#0"
      ]
    },
    "402": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0"
      ]
    },
    "403": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "val_as_bytes%1#0",
        "0x151f7c75"
      ]
    },
    "404": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%1#0"
      ]
    },
    "405": {
      "op": "concat",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "406": {
      "op": "log",
      "stack_out": []
    },
    "407": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "408": {
      "op": "return",
      "stack_out": []
    },
    "409": {
      "block": "main_payment_route@3",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "411": {
      "op": "!",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "412": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "413": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "415": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "416": {
      "callsub": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.payment",
      "op": "callsub payment",
      "defined_out": [
        "to_encode%0#0"
      ],
      "stack_out": [
        "to_encode%0#0"
      ]
    },
    "419": {
      "op": "itob",
      "defined_out": [
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0"
      ]
    },
    "420": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "421": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ]
    },
    "422": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "423": {
      "op": "log",
      "stack_out": []
    },
    "424": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "425": {
      "op": "return",
      "stack_out": []
    },
    "426": {
      "block": "main_bare_routing@18",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%86#0"
      ],
      "stack_out": [
        "tmp%86#0"
      ]
    },
    "428": {
      "op": "bnz main_after_if_else@22",
      "stack_out": []
    },
    "431": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%87#0"
      ],
      "stack_out": [
        "tmp%87#0"
      ]
    },
    "433": {
      "op": "!",
      "defined_out": [
        "tmp%88#0"
      ],
      "stack_out": [
        "tmp%88#0"
      ]
    },
    "434": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "435": {
      "op": "intc_0 // 1",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "436": {
      "op": "return",
      "stack_out": []
    },
    "437": {
      "subroutine": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.payment",
      "params": {},
      "block": "payment",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "438": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "440": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "442": {
      "op": "pushint 5000 // 5000",
      "defined_out": [
        "5000"
      ],
      "stack_out": [
        "5000"
      ]
    },
    "445": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "447": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "448": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "450": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "451": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "453": {
      "op": "itxn_submit"
    },
    "454": {
      "op": "itxn Amount",
      "defined_out": [
        "result.Amount#0"
      ],
      "stack_out": [
        "result.Amount#0"
      ]
    },
    "456": {
      "retsub": true,
      "op": "retsub"
    },
    "457": {
      "subroutine": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.fungibleAssetCreate",
      "params": {},
      "block": "fungibleAssetCreate",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "458": {
      "op": "pushbytes \"Royalty Points\"",
      "defined_out": [
        "\"Royalty Points\""
      ],
      "stack_out": [
        "\"Royalty Points\""
      ]
    },
    "474": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "476": {
      "op": "pushbytes \"RP\"",
      "defined_out": [
        "\"RP\""
      ],
      "stack_out": [
        "\"RP\""
      ]
    },
    "480": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": []
    },
    "482": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "484": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": []
    },
    "486": {
      "op": "pushint 100000000000 // 100000000000",
      "defined_out": [
        "100000000000"
      ],
      "stack_out": [
        "100000000000"
      ]
    },
    "493": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": []
    },
    "495": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "496": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "498": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "499": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "501": {
      "op": "itxn_submit"
    },
    "502": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "itxnResult.CreatedAssetID#0"
      ],
      "stack_out": [
        "itxnResult.CreatedAssetID#0"
      ]
    },
    "504": {
      "retsub": true,
      "op": "retsub"
    },
    "505": {
      "subroutine": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.nonFungibleAssetCreate",
      "params": {},
      "block": "nonFungibleAssetCreate",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "506": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "508": {
      "op": "dupn 3",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "510": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "512": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "514": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "516": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "518": {
      "op": "pushbytes \"https://link_to_ipfs/Mona_Lisa\"",
      "defined_out": [
        "\"https://link_to_ipfs/Mona_Lisa\""
      ],
      "stack_out": [
        "\"https://link_to_ipfs/Mona_Lisa\""
      ]
    },
    "550": {
      "op": "itxn_field ConfigAssetURL",
      "stack_out": []
    },
    "552": {
      "op": "pushbytes \"Mona Lisa\"",
      "defined_out": [
        "\"Mona Lisa\""
      ],
      "stack_out": [
        "\"Mona Lisa\""
      ]
    },
    "563": {
      "op": "itxn_field ConfigAssetName",
      "stack_out": []
    },
    "565": {
      "op": "pushbytes \"ML\"",
      "defined_out": [
        "\"ML\""
      ],
      "stack_out": [
        "\"ML\""
      ]
    },
    "569": {
      "op": "itxn_field ConfigAssetUnitName",
      "stack_out": []
    },
    "571": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2"
      ],
      "stack_out": [
        "2"
      ]
    },
    "573": {
      "op": "itxn_field ConfigAssetDecimals",
      "stack_out": []
    },
    "575": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100"
      ],
      "stack_out": [
        "100"
      ]
    },
    "577": {
      "op": "itxn_field ConfigAssetTotal",
      "stack_out": []
    },
    "579": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "580": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "582": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "583": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "585": {
      "op": "itxn_submit"
    },
    "586": {
      "op": "itxn CreatedAssetID",
      "defined_out": [
        "itxnResult.CreatedAssetID#0"
      ],
      "stack_out": [
        "itxnResult.CreatedAssetID#0"
      ]
    },
    "588": {
      "retsub": true,
      "op": "retsub"
    },
    "589": {
      "subroutine": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.assetOptIn",
      "params": {
        "asset#0": "uint64"
      },
      "block": "assetOptIn",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "592": {
      "op": "itxn_begin"
    },
    "593": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "595": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "596": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "598": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "asset#0 (copy)"
      ]
    },
    "600": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "602": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "604": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "605": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "607": {
      "op": "intc_1 // 0",
      "stack_out": [
        "0"
      ]
    },
    "608": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "610": {
      "op": "itxn_submit"
    },
    "611": {
      "retsub": true,
      "op": "retsub"
    },
    "612": {
      "subroutine": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.assetTransfer",
      "params": {
        "asset#0": "uint64",
        "receiver#0": "bytes",
        "amount#0": "uint64"
      },
      "block": "assetTransfer",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "615": {
      "op": "itxn_begin"
    },
    "616": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)"
      ],
      "stack_out": [
        "amount#0 (copy)"
      ]
    },
    "618": {
      "op": "itxn_field AssetAmount",
      "stack_out": []
    },
    "620": {
      "op": "frame_dig -3",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "622": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "624": {
      "op": "frame_dig -2",
      "defined_out": [
        "receiver#0 (copy)"
      ],
      "stack_out": [
        "receiver#0 (copy)"
      ]
    },
    "626": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "628": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "629": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "631": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "632": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "634": {
      "op": "itxn_submit"
    },
    "635": {
      "retsub": true,
      "op": "retsub"
    },
    "636": {
      "subroutine": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.assetFreeze",
      "params": {
        "acctToBeFrozen#0": "bytes",
        "asset#0": "uint64"
      },
      "block": "assetFreeze",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "639": {
      "op": "itxn_begin"
    },
    "640": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "641": {
      "op": "itxn_field FreezeAssetFrozen",
      "stack_out": []
    },
    "643": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "645": {
      "op": "itxn_field FreezeAsset",
      "stack_out": []
    },
    "647": {
      "op": "frame_dig -2",
      "defined_out": [
        "acctToBeFrozen#0 (copy)"
      ],
      "stack_out": [
        "acctToBeFrozen#0 (copy)"
      ]
    },
    "649": {
      "op": "itxn_field FreezeAssetAccount",
      "stack_out": []
    },
    "651": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5"
      ],
      "stack_out": [
        "5"
      ]
    },
    "653": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "655": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "656": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "658": {
      "op": "itxn_submit"
    },
    "659": {
      "retsub": true,
      "op": "retsub"
    },
    "660": {
      "subroutine": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.assetRevoke",
      "params": {
        "asset#0": "uint64",
        "accountToBeRevoked#0": "bytes",
        "amount#0": "uint64"
      },
      "block": "assetRevoke",
      "stack_in": [],
      "op": "proto 3 0"
    },
    "663": {
      "op": "itxn_begin"
    },
    "664": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "666": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "amount#0 (copy)"
      ]
    },
    "668": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "670": {
      "op": "frame_dig -2",
      "defined_out": [
        "accountToBeRevoked#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "accountToBeRevoked#0 (copy)"
      ]
    },
    "672": {
      "op": "itxn_field AssetSender",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "674": {
      "op": "frame_dig -3",
      "defined_out": [
        "asset#0 (copy)",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "asset#0 (copy)"
      ]
    },
    "676": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "678": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "680": {
      "op": "intc_3 // 4",
      "defined_out": [
        "4"
      ],
      "stack_out": [
        "4"
      ]
    },
    "681": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "683": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "684": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "686": {
      "op": "itxn_submit"
    },
    "687": {
      "retsub": true,
      "op": "retsub"
    },
    "688": {
      "subroutine": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.assetConfig",
      "params": {
        "asset#0": "uint64"
      },
      "block": "assetConfig",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "691": {
      "op": "itxn_begin"
    },
    "692": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "694": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "695": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "697": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetClawback_idx_0#0"
      ]
    },
    "698": {
      "op": "itxn_field ConfigAssetClawback",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetFreeze_idx_0#0"
      ]
    },
    "700": {
      "op": "itxn_field ConfigAssetFreeze",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0",
        "inner_txn_params%0%%param_ConfigAssetReserve_idx_0#0"
      ]
    },
    "702": {
      "op": "itxn_field ConfigAssetReserve",
      "stack_out": [
        "inner_txn_params%0%%param_ConfigAssetManager_idx_0#0"
      ]
    },
    "704": {
      "op": "itxn_field ConfigAssetManager",
      "stack_out": []
    },
    "706": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "708": {
      "op": "itxn_field ConfigAsset",
      "stack_out": []
    },
    "710": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "711": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "713": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "714": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "716": {
      "op": "itxn_submit"
    },
    "717": {
      "retsub": true,
      "op": "retsub"
    },
    "718": {
      "subroutine": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.assetDelete",
      "params": {
        "asset#0": "uint64"
      },
      "block": "assetDelete",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "721": {
      "op": "itxn_begin"
    },
    "722": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)"
      ],
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "724": {
      "op": "itxn_field ConfigAsset",
      "stack_out": []
    },
    "726": {
      "op": "intc_2 // 3",
      "defined_out": [
        "3"
      ],
      "stack_out": [
        "3"
      ]
    },
    "727": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "729": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "730": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "732": {
      "op": "itxn_submit"
    },
    "733": {
      "retsub": true,
      "op": "retsub"
    },
    "734": {
      "subroutine": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.multiInnerTxns",
      "params": {
        "appId#0": "uint64"
      },
      "block": "multiInnerTxns",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "737": {
      "op": "itxn_begin"
    },
    "738": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "740": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "742": {
      "op": "pushint 5000 // 5000",
      "defined_out": [
        "5000"
      ],
      "stack_out": [
        "5000"
      ]
    },
    "745": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "747": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "748": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "750": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "751": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "753": {
      "op": "itxn_submit"
    },
    "754": {
      "op": "itxn Amount",
      "defined_out": [
        "payTxn.Amount#0"
      ],
      "stack_out": [
        "payTxn.Amount#0"
      ]
    },
    "756": {
      "op": "itxn_begin"
    },
    "757": {
      "op": "bytec_1 // method \"sayHello(string,string)string\"",
      "defined_out": [
        "Method(sayHello(string,string)string)",
        "payTxn.Amount#0"
      ],
      "stack_out": [
        "payTxn.Amount#0",
        "Method(sayHello(string,string)string)"
      ]
    },
    "758": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "payTxn.Amount#0"
      ]
    },
    "760": {
      "op": "pushbytes \"Jane\"",
      "defined_out": [
        "\"Jane\"",
        "payTxn.Amount#0"
      ],
      "stack_out": [
        "payTxn.Amount#0",
        "\"Jane\""
      ]
    },
    "766": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "payTxn.Amount#0"
      ]
    },
    "768": {
      "op": "bytec_2 // \"Doe\"",
      "defined_out": [
        "\"Doe\"",
        "payTxn.Amount#0"
      ],
      "stack_out": [
        "payTxn.Amount#0",
        "\"Doe\""
      ]
    },
    "769": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": [
        "payTxn.Amount#0"
      ]
    },
    "771": {
      "op": "frame_dig -1",
      "defined_out": [
        "appId#0 (copy)",
        "payTxn.Amount#0"
      ],
      "stack_out": [
        "payTxn.Amount#0",
        "appId#0 (copy)"
      ]
    },
    "773": {
      "op": "itxn_field ApplicationID",
      "stack_out": [
        "payTxn.Amount#0"
      ]
    },
    "775": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "payTxn.Amount#0"
      ],
      "stack_out": [
        "payTxn.Amount#0",
        "6"
      ]
    },
    "777": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "payTxn.Amount#0"
      ]
    },
    "779": {
      "op": "intc_1 // 0",
      "stack_out": [
        "payTxn.Amount#0",
        "0"
      ]
    },
    "780": {
      "op": "itxn_field Fee",
      "stack_out": [
        "payTxn.Amount#0"
      ]
    },
    "782": {
      "op": "itxn_submit"
    },
    "783": {
      "op": "itxn LastLog",
      "defined_out": [
        "appCallTxn.LastLog#0",
        "payTxn.Amount#0"
      ],
      "stack_out": [
        "payTxn.Amount#0",
        "appCallTxn.LastLog#0"
      ]
    },
    "785": {
      "op": "dup",
      "defined_out": [
        "appCallTxn.LastLog#0",
        "appCallTxn.LastLog#0 (copy)",
        "payTxn.Amount#0"
      ],
      "stack_out": [
        "payTxn.Amount#0",
        "appCallTxn.LastLog#0",
        "appCallTxn.LastLog#0 (copy)"
      ]
    },
    "786": {
      "op": "extract 0 4",
      "defined_out": [
        "appCallTxn.LastLog#0",
        "payTxn.Amount#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "payTxn.Amount#0",
        "appCallTxn.LastLog#0",
        "tmp%1#0"
      ]
    },
    "789": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "appCallTxn.LastLog#0",
        "payTxn.Amount#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "payTxn.Amount#0",
        "appCallTxn.LastLog#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "790": {
      "op": "==",
      "defined_out": [
        "appCallTxn.LastLog#0",
        "payTxn.Amount#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "payTxn.Amount#0",
        "appCallTxn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "791": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "payTxn.Amount#0",
        "appCallTxn.LastLog#0"
      ]
    },
    "792": {
      "op": "extract 6 0",
      "defined_out": [
        "helloWorldResult#0",
        "payTxn.Amount#0"
      ],
      "stack_out": [
        "payTxn.Amount#0",
        "helloWorldResult#0"
      ]
    },
    "795": {
      "retsub": true,
      "op": "retsub"
    },
    "796": {
      "subroutine": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.deployApp",
      "params": {},
      "block": "deployApp",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "797": {
      "op": "pushbytes \"clear_state_program\"",
      "defined_out": [
        "\"clear_state_program\""
      ],
      "stack_out": [
        "\"clear_state_program\""
      ]
    },
    "818": {
      "op": "itxn_field ClearStateProgramPages",
      "stack_out": []
    },
    "820": {
      "op": "pushbytes \"approval_program\"",
      "defined_out": [
        "\"approval_program\""
      ],
      "stack_out": [
        "\"approval_program\""
      ]
    },
    "838": {
      "op": "itxn_field ApprovalProgramPages",
      "stack_out": []
    },
    "840": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "842": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "844": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "845": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "847": {
      "op": "itxn_submit"
    },
    "848": {
      "op": "itxn CreatedApplicationID",
      "defined_out": [
        "appTxn.CreatedApplicationID#0"
      ],
      "stack_out": [
        "appTxn.CreatedApplicationID#0"
      ]
    },
    "850": {
      "retsub": true,
      "op": "retsub"
    },
    "851": {
      "subroutine": "contracts/InnerTransactions/contract.algo.ts::InnerTransactions.noopAppCall",
      "params": {
        "appId#0": "uint64"
      },
      "block": "noopAppCall",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "854": {
      "op": "itxn_begin"
    },
    "855": {
      "op": "bytec_1 // method \"sayHello(string,string)string\"",
      "defined_out": [
        "Method(sayHello(string,string)string)"
      ],
      "stack_out": [
        "Method(sayHello(string,string)string)"
      ]
    },
    "856": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "858": {
      "op": "pushbytes \"John\"",
      "defined_out": [
        "\"John\""
      ],
      "stack_out": [
        "\"John\""
      ]
    },
    "864": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "866": {
      "op": "bytec_2 // \"Doe\"",
      "defined_out": [
        "\"Doe\""
      ],
      "stack_out": [
        "\"Doe\""
      ]
    },
    "867": {
      "op": "itxn_field ApplicationArgs",
      "stack_out": []
    },
    "869": {
      "op": "frame_dig -1",
      "defined_out": [
        "appId#0 (copy)"
      ],
      "stack_out": [
        "appId#0 (copy)"
      ]
    },
    "871": {
      "op": "itxn_field ApplicationID",
      "stack_out": []
    },
    "873": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6"
      ],
      "stack_out": [
        "6"
      ]
    },
    "875": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "877": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0"
      ],
      "stack_out": [
        "0"
      ]
    },
    "878": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "880": {
      "op": "itxn_submit"
    },
    "881": {
      "op": "itxn LastLog",
      "defined_out": [
        "callTxn.LastLog#0"
      ],
      "stack_out": [
        "callTxn.LastLog#0"
      ]
    },
    "883": {
      "op": "dup",
      "defined_out": [
        "callTxn.LastLog#0",
        "callTxn.LastLog#0 (copy)"
      ],
      "stack_out": [
        "callTxn.LastLog#0",
        "callTxn.LastLog#0 (copy)"
      ]
    },
    "884": {
      "op": "extract 0 4",
      "defined_out": [
        "callTxn.LastLog#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "callTxn.LastLog#0",
        "tmp%1#0"
      ]
    },
    "887": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "callTxn.LastLog#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "callTxn.LastLog#0",
        "tmp%1#0",
        "0x151f7c75"
      ]
    },
    "888": {
      "op": "==",
      "defined_out": [
        "callTxn.LastLog#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "callTxn.LastLog#0",
        "tmp%2#0"
      ]
    },
    "889": {
      "error": "Bytes has valid prefix",
      "op": "assert // Bytes has valid prefix",
      "stack_out": [
        "callTxn.LastLog#0"
      ]
    },
    "890": {
      "op": "extract 6 0",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "893": {
      "retsub": true,
      "op": "retsub"
    }
  }
}