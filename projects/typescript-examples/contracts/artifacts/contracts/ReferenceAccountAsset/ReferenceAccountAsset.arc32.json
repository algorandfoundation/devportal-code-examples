{
    "hints": {
        "getAssetBalance()uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        },
        "getAssetBalanceWithArg(address,uint64)uint64": {
            "read_only": true,
            "call_config": {
                "no_op": "CALL"
            }
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMTQ3MiAxCiAgICBieXRlY2Jsb2NrIGJhc2UzMihSM0o3Nk1EUEVYUUVXQlYyTFE2RkxRNFBZQzRRWE5ISFBJTDJCWDJLU0ZVNFdVTkpKTURBKSAweDE1MWY3Yzc1CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFzc2V0L2NvbnRyYWN0LmFsZ28udHM6OQogICAgLy8gZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVmZXJlbmNlQWNjb3VudEFzc2V0IGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE51bUFwcEFyZ3MKICAgIGJ6IG1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDkKICAgIHR4biBPbkNvbXBsZXRpb24KICAgICEKICAgIGFzc2VydCAvLyBPbkNvbXBsZXRpb24gbXVzdCBiZSBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0CiAgICBwdXNoYnl0ZXNzIDB4NmQ2OGU1NGQgMHg2YWNkMGNlMiAvLyBtZXRob2QgImdldEFzc2V0QmFsYW5jZSgpdWludDY0IiwgbWV0aG9kICJnZXRBc3NldEJhbGFuY2VXaXRoQXJnKGFkZHJlc3MsdWludDY0KXVpbnQ2NCIKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDAKICAgIG1hdGNoIGdldEFzc2V0QmFsYW5jZSBnZXRBc3NldEJhbGFuY2VXaXRoQXJnCiAgICBlcnIKCm1haW5fX19hbGdvdHNfXy5kZWZhdWx0Q3JlYXRlQDk6CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFzc2V0L2NvbnRyYWN0LmFsZ28udHM6OQogICAgLy8gZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVmZXJlbmNlQWNjb3VudEFzc2V0IGV4dGVuZHMgQ29udHJhY3QgewogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgICEKICAgICYmCiAgICByZXR1cm4gLy8gb24gZXJyb3I6IE9uQ29tcGxldGlvbiBtdXN0IGJlIE5vT3AgJiYgY2FuIG9ubHkgY2FsbCB3aGVuIGNyZWF0aW5nCgoKLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBc3NldC9jb250cmFjdC5hbGdvLnRzOjpSZWZlcmVuY2VBY2NvdW50QXNzZXQuZ2V0QXNzZXRCYWxhbmNlW3JvdXRpbmddKCkgLT4gdm9pZDoKZ2V0QXNzZXRCYWxhbmNlOgogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBc3NldC9jb250cmFjdC5hbGdvLnRzOjE3CiAgICAvLyBjb25zdCBhZGRyZXNzQnl0ZXMgPSBhZGRyZXNzLmJ5dGVzCiAgICBieXRlY18wIC8vIGFkZHIgUjNKNzZNRFBFWFFFV0JWMkxRNkZMUTRQWUM0UVhOSEhQSUwyQlgyS1NGVTRXVU5KSk1EQlRMUk5FTQogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBc3NldC9jb250cmFjdC5hbGdvLnRzOjE5CiAgICAvLyBjb25zdCBhc3NldCA9IEFzc2V0KDE0NzIpIC8vIFJlcGxhY2Ugd2l0aCB5b3VyIGFzc2V0IElECiAgICBpbnRjXzAgLy8gMTQ3MgogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBc3NldC9jb250cmFjdC5hbGdvLnRzOjIxCiAgICAvLyBhc3NlcnQoYWNjb3VudC5pc09wdGVkSW4oYXNzZXQpLCAnQWNjb3VudCBpcyBub3Qgb3B0ZWQgaW4gdG8gdGhlIGFzc2V0JykKICAgIGFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQogICAgYnVyeSAxCiAgICBhc3NlcnQgLy8gQWNjb3VudCBpcyBub3Qgb3B0ZWQgaW4gdG8gdGhlIGFzc2V0CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFzc2V0L2NvbnRyYWN0LmFsZ28udHM6MTcKICAgIC8vIGNvbnN0IGFkZHJlc3NCeXRlcyA9IGFkZHJlc3MuYnl0ZXMKICAgIGJ5dGVjXzAgLy8gYWRkciBSM0o3Nk1EUEVYUUVXQlYyTFE2RkxRNFBZQzRRWE5ISFBJTDJCWDJLU0ZVNFdVTkpKTURCVExSTkVNCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFzc2V0L2NvbnRyYWN0LmFsZ28udHM6MTkKICAgIC8vIGNvbnN0IGFzc2V0ID0gQXNzZXQoMTQ3MikgLy8gUmVwbGFjZSB3aXRoIHlvdXIgYXNzZXQgSUQKICAgIGludGNfMCAvLyAxNDcyCiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFzc2V0L2NvbnRyYWN0LmFsZ28udHM6MjMKICAgIC8vIHJldHVybiBhc3NldC5iYWxhbmNlKGFjY291bnQpCiAgICBhc3NldF9ob2xkaW5nX2dldCBBc3NldEJhbGFuY2UKICAgIGFzc2VydCAvLyBhY2NvdW50IG9wdGVkIGludG8gYXNzZXQKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXNzZXQvY29udHJhY3QuYWxnby50czoxNC0xNQogICAgLy8gQHJlYWRvbmx5CiAgICAvLyBwdWJsaWMgZ2V0QXNzZXRCYWxhbmNlKCkgewogICAgaXRvYgogICAgYnl0ZWNfMSAvLyAweDE1MWY3Yzc1CiAgICBzd2FwCiAgICBjb25jYXQKICAgIGxvZwogICAgaW50Y18xIC8vIDEKICAgIHJldHVybgoKCi8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXNzZXQvY29udHJhY3QuYWxnby50czo6UmVmZXJlbmNlQWNjb3VudEFzc2V0LmdldEFzc2V0QmFsYW5jZVdpdGhBcmdbcm91dGluZ10oKSAtPiB2b2lkOgpnZXRBc3NldEJhbGFuY2VXaXRoQXJnOgogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBc3NldC9jb250cmFjdC5hbGdvLnRzOjMyLTMzCiAgICAvLyBAcmVhZG9ubHkKICAgIC8vIHB1YmxpYyBnZXRBc3NldEJhbGFuY2VXaXRoQXJnKGFjY291bnQ6IEFjY291bnQsIGFzc2V0OiBBc3NldCkgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMgogICAgYnRvaQogICAgLy8gY29udHJhY3RzL1JlZmVyZW5jZUFjY291bnRBc3NldC9jb250cmFjdC5hbGdvLnRzOjM0CiAgICAvLyBhc3NlcnQoYWNjb3VudC5pc09wdGVkSW4oYXNzZXQpLCAnQWNjb3VudCBpcyBub3Qgb3B0ZWQgaW4gdG8gdGhlIGFzc2V0JykKICAgIGR1cDIKICAgIGFzc2V0X2hvbGRpbmdfZ2V0IEFzc2V0QmFsYW5jZQogICAgYnVyeSAxCiAgICBhc3NlcnQgLy8gQWNjb3VudCBpcyBub3Qgb3B0ZWQgaW4gdG8gdGhlIGFzc2V0CiAgICAvLyBjb250cmFjdHMvUmVmZXJlbmNlQWNjb3VudEFzc2V0L2NvbnRyYWN0LmFsZ28udHM6MzYKICAgIC8vIHJldHVybiBhc3NldC5iYWxhbmNlKGFjY291bnQpCiAgICBhc3NldF9ob2xkaW5nX2dldCBBc3NldEJhbGFuY2UKICAgIGFzc2VydCAvLyBhY2NvdW50IG9wdGVkIGludG8gYXNzZXQKICAgIC8vIGNvbnRyYWN0cy9SZWZlcmVuY2VBY2NvdW50QXNzZXQvY29udHJhY3QuYWxnby50czozMi0zMwogICAgLy8gQHJlYWRvbmx5CiAgICAvLyBwdWJsaWMgZ2V0QXNzZXRCYWxhbmNlV2l0aEFyZyhhY2NvdW50OiBBY2NvdW50LCBhc3NldDogQXNzZXQpIHsKICAgIGl0b2IKICAgIGJ5dGVjXzEgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMSAvLyAxCiAgICByZXR1cm4K",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDExCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "state": {
        "global": {
            "num_byte_slices": 0,
            "num_uints": 0
        },
        "local": {
            "num_byte_slices": 0,
            "num_uints": 0
        }
    },
    "schema": {
        "global": {
            "declared": {},
            "reserved": {}
        },
        "local": {
            "declared": {},
            "reserved": {}
        }
    },
    "contract": {
        "name": "ReferenceAccountAsset",
        "desc": "A contract that demonstrates how to reference both accounts and assets in a smart contract",
        "methods": [
            {
                "name": "getAssetBalance",
                "args": [],
                "readonly": true,
                "returns": {
                    "type": "uint64",
                    "desc": "The asset balance of the account"
                },
                "desc": "Returns the balance of a specific asset in a hardcoded account"
            },
            {
                "name": "getAssetBalanceWithArg",
                "args": [
                    {
                        "type": "address",
                        "name": "account",
                        "desc": "The account to check the asset balance for"
                    },
                    {
                        "type": "uint64",
                        "name": "asset",
                        "desc": "The asset to check the balance of"
                    }
                ],
                "readonly": true,
                "returns": {
                    "type": "uint64",
                    "desc": "The asset balance of the account"
                },
                "desc": "Returns the balance of a specific asset in a provided account"
            }
        ],
        "networks": {}
    },
    "bare_call_config": {
        "no_op": "CREATE"
    }
}