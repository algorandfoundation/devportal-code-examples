{
  "version": 3,
  "sources": [
    "/Users/gabe.algo/Code/devportal-code-examples/projects/typescript-examples/contracts/ControlFlow/contract.algo.ts"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;AAgBA;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOG;;;AAAA;AAAA;AAEsB;;;AAAjB;AAAJ;;;AACS;;;;;;;;;;;;;;;;;;;;;;;AAHV;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIY;AAAiB;;AAAjB;AAAJ;;;AACE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AALV;;;AAOU;;;;;;;;;;;;;;;;;;;;;;;;;AAPV;;;AAkBA;;;AAAA;AAEiB;AAAT;AAAA;;;AAAmB;;;;;;AAF3B;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEoC;;;;;;;;;;;;;AAYX;;;;AAAA;AAGL;AAAnB;AAA0B;;AAA1B;AAAA;;;AACY;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;AADO;AAAA;;;;;;AASnB;;AAAA;AAAA;AAAA;;;;;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAEa;AAAA;AAAA;AAAA;;AAAA;;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;;;;;;;;;AAIK;AAAd;;AACJ;;AAAA;AAAA;AAAA;;;;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AACE;;AAAA;AAAA;;;;;;;;;AAIK;;AAAQ;;AAAR;AAAP;AA3BD;AAAA;;AAAA;AAAA;AAAA;AAAA;AAuCA;;;AAAA;AAAA;AAGe;AAAA;AAAZ;;;AACS;;;;;;;;AAJZ;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKe;AAAA;AAAA;AAAZ;;;AACS;;;;;;;;;AANZ;;;AAOe;AAAA;;AAAA;AAAZ;;;AACS;;;;;;;;;;;AARZ;;;AASe;AAAA;;AAAA;AAAZ;;;AACS;;;;;;;;;;AAVZ;;;AAWe;AAAA;;AAAA;AAAZ;;;AACS;;;;;;;;AAZZ;;;AAae;AAAA;;AAAA;AAAZ;;;AACS;;;;;;;;;;AAdZ;;;AAee;AAAA;;AAAA;AAAZ;;;AACS;;;;;;;;AAhBZ;;;AAkBY;;;;;;;;;;;;;AAlBZ;;;AAiCA;;;AAAA;;;AAAA;AAAA;;;AAAA;;;AAO8C;AAAA;AAMtC;;;;AAAA;AAAL;;;AACY;AA0ByC;;AAAA;AAAhB;;;AAAA;AAAX;;;AAAA;AAxC7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAiBQ;;AAAA;;;;AAAA;AAAL;;;AACY;;AACV;;;AAEG;;AAAA;;;;AAAA;AAAL;;;AACY;;;AACV;;;AAEG;;AAAA;;;;AAAA;AAAL;;;AACY;;;AACV;;;AAEG;;AAAA;;;;;AAAA;AAAL;;;AACY;;;;AACV;;;AAIO;AAnCZ;;;AAqDmB;;AACM;AAExB;;AAAA;;;AACM;;AAAM;;AAAN;AAAJ;;;AACE;;AAAO;AAAP;AAAA;;AACA;AAAa;AAAb;AAAA;;AACA;;;AAGF;;AAAO;AAAP;AAAA;AAAA;;AACA;;AAAa;AAAb;AAAA;;AAEY;AAAR;AAAJ;;;AAfH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "@algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 1 0 8 2"
    },
    "7": {
      "op": "bytecblock 0x151f7c75 0x0001"
    },
    "17": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "19": {
      "op": "bz main___algots__.defaultCreate@13",
      "stack_out": []
    },
    "22": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "24": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "25": {
      "error": "OnCompletion must be NoOp",
      "op": "assert // OnCompletion must be NoOp",
      "stack_out": []
    },
    "26": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "28": {
      "op": "assert",
      "stack_out": []
    },
    "29": {
      "op": "pushbytess 0xef082f7b 0x94fb7ef1 0x722ba668 0x7fac6a5e 0xc9c2bc57 0xf82a2654 // method \"isRich(uint64)string\", method \"isEven(uint64)string\", method \"forLoop()uint64[]\", method \"getDay(uint64)string\", method \"calculateBoxStorageCost(string,string)uint64\", method \"loop()uint64\"",
      "defined_out": [
        "Method(calculateBoxStorageCost(string,string)uint64)",
        "Method(forLoop()uint64[])",
        "Method(getDay(uint64)string)",
        "Method(isEven(uint64)string)",
        "Method(isRich(uint64)string)",
        "Method(loop()uint64)"
      ],
      "stack_out": [
        "Method(isRich(uint64)string)",
        "Method(isEven(uint64)string)",
        "Method(forLoop()uint64[])",
        "Method(getDay(uint64)string)",
        "Method(calculateBoxStorageCost(string,string)uint64)",
        "Method(loop()uint64)"
      ]
    },
    "61": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(calculateBoxStorageCost(string,string)uint64)",
        "Method(forLoop()uint64[])",
        "Method(getDay(uint64)string)",
        "Method(isEven(uint64)string)",
        "Method(isRich(uint64)string)",
        "Method(loop()uint64)",
        "tmp%6#0"
      ],
      "stack_out": [
        "Method(isRich(uint64)string)",
        "Method(isEven(uint64)string)",
        "Method(forLoop()uint64[])",
        "Method(getDay(uint64)string)",
        "Method(calculateBoxStorageCost(string,string)uint64)",
        "Method(loop()uint64)",
        "tmp%6#0"
      ]
    },
    "64": {
      "op": "match isRich isEven forLoop getDay calculateBoxStorageCost loop",
      "stack_out": []
    },
    "78": {
      "op": "err"
    },
    "79": {
      "block": "main___algots__.defaultCreate@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "81": {
      "op": "!",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "82": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ]
    },
    "84": {
      "op": "!",
      "defined_out": [
        "tmp%10#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "85": {
      "op": "&&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "86": {
      "error": "OnCompletion must be NoOp && can only call when creating",
      "op": "return // on error: OnCompletion must be NoOp && can only call when creating",
      "defined_out": [],
      "stack_out": []
    },
    "87": {
      "subroutine": "contracts/ControlFlow/contract.algo.ts::ControlFlow.isRich[routing]",
      "params": {},
      "block": "isRich",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "90": {
      "op": "btoi",
      "defined_out": [
        "accountBalance#0"
      ],
      "stack_out": [
        "accountBalance#0"
      ]
    },
    "91": {
      "op": "dup",
      "defined_out": [
        "accountBalance#0"
      ],
      "stack_out": [
        "accountBalance#0",
        "accountBalance#0"
      ]
    },
    "92": {
      "op": "pushint 1000 // 1000",
      "defined_out": [
        "1000",
        "accountBalance#0"
      ],
      "stack_out": [
        "accountBalance#0",
        "accountBalance#0",
        "1000"
      ]
    },
    "95": {
      "op": ">",
      "defined_out": [
        "accountBalance#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "accountBalance#0",
        "tmp%0#1"
      ]
    },
    "96": {
      "op": "bz isRich_else_body@3",
      "stack_out": [
        "accountBalance#0"
      ]
    },
    "99": {
      "op": "pushbytes \"This account is rich!\"",
      "defined_out": [
        "accountBalance#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "accountBalance#0",
        "tmp%1#0"
      ]
    },
    "122": {
      "block": "isRich_after_inlined_contracts/ControlFlow/contract.algo.ts::ControlFlow.isRich@6",
      "stack_in": [
        "accountBalance#0",
        "tmp%1#0"
      ],
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "accountBalance#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "123": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "accountBalance#0",
        "tmp%1#0",
        "aggregate%length%0#0"
      ]
    },
    "124": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "accountBalance#0",
        "tmp%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "125": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "accountBalance#0",
        "tmp%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "128": {
      "op": "swap",
      "stack_out": [
        "accountBalance#0",
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ]
    },
    "129": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0"
      ],
      "stack_out": [
        "accountBalance#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "130": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%encoded_value%0#0"
      ],
      "stack_out": [
        "accountBalance#0",
        "aggregate%encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "131": {
      "op": "swap",
      "stack_out": [
        "accountBalance#0",
        "0x151f7c75",
        "aggregate%encoded_value%0#0"
      ]
    },
    "132": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "accountBalance#0",
        "tmp%3#0"
      ]
    },
    "133": {
      "op": "log",
      "stack_out": [
        "accountBalance#0"
      ]
    },
    "134": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "accountBalance#0",
        "1"
      ]
    },
    "135": {
      "op": "return",
      "stack_out": [
        "accountBalance#0"
      ]
    },
    "136": {
      "block": "isRich_else_body@3",
      "stack_in": [
        "accountBalance#0"
      ],
      "op": "dup",
      "defined_out": [
        "accountBalance#0"
      ],
      "stack_out": [
        "accountBalance#0",
        "accountBalance#0"
      ]
    },
    "137": {
      "op": "pushint 100 // 100",
      "defined_out": [
        "100",
        "accountBalance#0"
      ],
      "stack_out": [
        "accountBalance#0",
        "accountBalance#0",
        "100"
      ]
    },
    "139": {
      "op": ">",
      "defined_out": [
        "accountBalance#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "accountBalance#0",
        "tmp%1#1"
      ]
    },
    "140": {
      "op": "bz isRich_else_body@5",
      "stack_out": [
        "accountBalance#0"
      ]
    },
    "143": {
      "op": "pushbytes \"This account is doing well.\"",
      "defined_out": [
        "accountBalance#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "accountBalance#0",
        "tmp%1#0"
      ]
    },
    "172": {
      "op": "b isRich_after_inlined_contracts/ControlFlow/contract.algo.ts::ControlFlow.isRich@6"
    },
    "175": {
      "block": "isRich_else_body@5",
      "stack_in": [
        "accountBalance#0"
      ],
      "op": "pushbytes \"This account is poor :(\"",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "accountBalance#0",
        "tmp%1#0"
      ]
    },
    "200": {
      "op": "b isRich_after_inlined_contracts/ControlFlow/contract.algo.ts::ControlFlow.isRich@6"
    },
    "203": {
      "subroutine": "contracts/ControlFlow/contract.algo.ts::ControlFlow.isEven[routing]",
      "params": {},
      "block": "isEven",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "206": {
      "op": "btoi",
      "defined_out": [
        "number#0"
      ],
      "stack_out": [
        "number#0"
      ]
    },
    "207": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "number#0"
      ],
      "stack_out": [
        "number#0",
        "2"
      ]
    },
    "208": {
      "op": "%",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "209": {
      "op": "bnz isEven_ternary_false@3",
      "stack_out": []
    },
    "212": {
      "op": "pushbytes \"Even\"",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "218": {
      "block": "isEven_ternary_merge@4",
      "stack_in": [
        "ternary_result%0#0"
      ],
      "op": "dup",
      "defined_out": [
        "ternary_result%0#0",
        "ternary_result%0#0 (copy)"
      ],
      "stack_out": [
        "ternary_result%0#0",
        "ternary_result%0#0 (copy)"
      ]
    },
    "219": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0",
        "aggregate%length%0#0"
      ]
    },
    "220": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "221": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "224": {
      "op": "swap",
      "stack_out": [
        "aggregate%length_uint16%0#0",
        "ternary_result%0#0"
      ]
    },
    "225": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0"
      ]
    },
    "226": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%encoded_value%0#0"
      ],
      "stack_out": [
        "aggregate%encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "227": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "aggregate%encoded_value%0#0"
      ]
    },
    "228": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "229": {
      "op": "log",
      "stack_out": []
    },
    "230": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "231": {
      "op": "return",
      "stack_out": []
    },
    "232": {
      "block": "isEven_ternary_false@3",
      "stack_in": [],
      "op": "pushbytes \"Odd\"",
      "defined_out": [
        "ternary_result%0#0"
      ],
      "stack_out": [
        "ternary_result%0#0"
      ]
    },
    "237": {
      "op": "b isEven_ternary_merge@4"
    },
    "240": {
      "subroutine": "contracts/ControlFlow/contract.algo.ts::ControlFlow.forLoop[routing]",
      "params": {},
      "block": "forLoop",
      "stack_in": [],
      "op": "intc_1 // 0",
      "stack_out": [
        "reversed#1"
      ]
    },
    "241": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0"
      ]
    },
    "243": {
      "op": "dupn 4",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0"
      ]
    },
    "245": {
      "op": "pushbytes 0x0000"
    },
    "249": {
      "op": "dup"
    },
    "250": {
      "op": "intc_1 // 0",
      "defined_out": [
        "numbers#0",
        "numbers#1",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "251": {
      "block": "forLoop_for_header@2",
      "stack_in": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ],
      "op": "dup",
      "defined_out": [
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0"
      ]
    },
    "252": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "4"
      ]
    },
    "254": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "continue_looping%0#0"
      ]
    },
    "255": {
      "op": "bz forLoop_after_for@5",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "258": {
      "op": "dupn 2",
      "defined_out": [
        "temp#0",
        "temp#0 (copy)"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "temp#0 (copy)"
      ]
    },
    "260": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "261": {
      "op": "bytec_1 // 0x0001",
      "defined_out": [
        "0x0001",
        "aggregate%val_as_bytes%0#0",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "aggregate%val_as_bytes%0#0",
        "0x0001"
      ]
    },
    "262": {
      "op": "swap",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "0x0001",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "263": {
      "op": "concat",
      "defined_out": [
        "aggregate%head%0#0",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "aggregate%head%0#0"
      ]
    },
    "264": {
      "op": "extract 2 0",
      "defined_out": [
        "extract_to_end%0#0",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "extract_to_end%0#0"
      ]
    },
    "267": {
      "op": "dig 3",
      "defined_out": [
        "extract_to_end%0#0",
        "numbers#1",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "extract_to_end%0#0",
        "numbers#1"
      ]
    },
    "269": {
      "op": "swap",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "numbers#1",
        "extract_to_end%0#0"
      ]
    },
    "270": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "concat%0#0",
        "numbers#1",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "concat%0#0"
      ]
    },
    "271": {
      "op": "dup",
      "defined_out": [
        "concat%0#0",
        "concat%0#0 (copy)",
        "numbers#1",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "concat%0#0",
        "concat%0#0 (copy)"
      ]
    },
    "272": {
      "op": "extract 2 0",
      "defined_out": [
        "concat%0#0",
        "extract_to_end%1#0",
        "numbers#1",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "concat%0#0",
        "extract_to_end%1#0"
      ]
    },
    "275": {
      "op": "len",
      "defined_out": [
        "concat%0#0",
        "len%0#0",
        "numbers#1",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "concat%0#0",
        "len%0#0"
      ]
    },
    "276": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "concat%0#0",
        "len%0#0",
        "numbers#1",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "concat%0#0",
        "len%0#0",
        "8"
      ]
    },
    "277": {
      "op": "/",
      "defined_out": [
        "concat%0#0",
        "div_floor%0#0",
        "numbers#1",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "concat%0#0",
        "div_floor%0#0"
      ]
    },
    "278": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concat%0#0",
        "numbers#1",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "concat%0#0",
        "as_bytes%0#0"
      ]
    },
    "279": {
      "op": "extract 6 2",
      "defined_out": [
        "as_u16_bytes%0#0",
        "concat%0#0",
        "numbers#1",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "concat%0#0",
        "as_u16_bytes%0#0"
      ]
    },
    "282": {
      "op": "replace2 0",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "numbers#1"
      ]
    },
    "284": {
      "op": "bury 3",
      "defined_out": [
        "numbers#1",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0"
      ]
    },
    "286": {
      "op": "intc_0 // 1",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0",
        "1"
      ]
    },
    "287": {
      "op": "+",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "temp#0"
      ]
    },
    "288": {
      "op": "bury 1",
      "defined_out": [
        "numbers#1",
        "temp#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "290": {
      "op": "b forLoop_for_header@2"
    },
    "293": {
      "block": "forLoop_after_for@5",
      "stack_in": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "numbers#1"
      ]
    },
    "295": {
      "op": "intc_1 // 0",
      "defined_out": [
        "0",
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "numbers#1",
        "0"
      ]
    },
    "296": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%0#0",
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "aggregate%array_length%0#0"
      ]
    },
    "297": {
      "op": "bury 8",
      "defined_out": [
        "aggregate%array_length%0#0",
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "299": {
      "op": "intc_1 // 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0"
      ]
    },
    "300": {
      "op": "bury 6",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "302": {
      "op": "dig 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "numbers#1",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "reversed#1"
      ]
    },
    "304": {
      "op": "bury 9",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "numbers#1",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "306": {
      "block": "forLoop_for_header@6",
      "stack_in": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ],
      "op": "dig 5",
      "defined_out": [
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0"
      ]
    },
    "308": {
      "op": "dig 8",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "aggregate%array_length%0#0"
      ]
    },
    "310": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%0#0",
        "continue_looping%1#0",
        "item_index_internal%0#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "continue_looping%1#0"
      ]
    },
    "311": {
      "op": "bz forLoop_after_for@9",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "314": {
      "op": "dig 1",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "numbers#1"
      ]
    },
    "316": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "aggregate%array_trimmed%0#0"
      ]
    },
    "319": {
      "op": "dig 6",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0"
      ]
    },
    "321": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0 (copy)",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "322": {
      "op": "cover 2",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0 (copy)"
      ]
    },
    "324": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0",
        "item_index_internal%0#0 (copy)",
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "item_index_internal%0#0 (copy)",
        "8"
      ]
    },
    "325": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "item_index_internal%0#0",
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0"
      ]
    },
    "326": {
      "op": "intc_2 // 8",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "aggregate%array_trimmed%0#0",
        "aggregate%bytes_offset%0#0",
        "8"
      ]
    },
    "327": {
      "error": "index access is out of bounds",
      "op": "extract3 // on error: index access is out of bounds",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0",
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0"
      ]
    },
    "328": {
      "op": "bytec_1 // 0x0001",
      "defined_out": [
        "0x0001",
        "aggregate%array_length%0#0",
        "aggregate%encoded_element%0#0",
        "item_index_internal%0#0",
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "aggregate%encoded_element%0#0",
        "0x0001"
      ]
    },
    "329": {
      "op": "swap",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "0x0001",
        "aggregate%encoded_element%0#0"
      ]
    },
    "330": {
      "op": "concat",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%head%1#0",
        "item_index_internal%0#0",
        "numbers#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "aggregate%head%1#0"
      ]
    },
    "331": {
      "op": "dig 10",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%head%1#0",
        "item_index_internal%0#0",
        "numbers#1",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "aggregate%head%1#0",
        "reversed#1"
      ]
    },
    "333": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "aggregate%head%1#0",
        "extract_to_end%2#0",
        "item_index_internal%0#0",
        "numbers#1",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "aggregate%head%1#0",
        "extract_to_end%2#0"
      ]
    },
    "336": {
      "error": "max array length exceeded",
      "op": "concat // on error: max array length exceeded",
      "defined_out": [
        "aggregate%array_length%0#0",
        "concat%1#0",
        "item_index_internal%0#0",
        "numbers#1",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "concat%1#0"
      ]
    },
    "337": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%0#0",
        "concat%1#0",
        "concat%1#0 (copy)",
        "item_index_internal%0#0",
        "numbers#1",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "concat%1#0",
        "concat%1#0 (copy)"
      ]
    },
    "338": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%0#0",
        "concat%1#0",
        "extract_to_end%3#0",
        "item_index_internal%0#0",
        "numbers#1",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "concat%1#0",
        "extract_to_end%3#0"
      ]
    },
    "341": {
      "op": "len",
      "defined_out": [
        "aggregate%array_length%0#0",
        "concat%1#0",
        "item_index_internal%0#0",
        "len%1#0",
        "numbers#1",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "concat%1#0",
        "len%1#0"
      ]
    },
    "342": {
      "op": "intc_2 // 8",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "concat%1#0",
        "len%1#0",
        "8"
      ]
    },
    "343": {
      "op": "/",
      "defined_out": [
        "aggregate%array_length%0#0",
        "concat%1#0",
        "div_floor%1#0",
        "item_index_internal%0#0",
        "numbers#1",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "concat%1#0",
        "div_floor%1#0"
      ]
    },
    "344": {
      "op": "itob",
      "defined_out": [
        "aggregate%array_length%0#0",
        "as_bytes%1#0",
        "concat%1#0",
        "item_index_internal%0#0",
        "numbers#1",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "concat%1#0",
        "as_bytes%1#0"
      ]
    },
    "345": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%array_length%0#0",
        "as_u16_bytes%1#0",
        "concat%1#0",
        "item_index_internal%0#0",
        "numbers#1",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "concat%1#0",
        "as_u16_bytes%1#0"
      ]
    },
    "348": {
      "op": "replace2 0",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "reversed#1"
      ]
    },
    "350": {
      "op": "bury 10",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "numbers#1",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0"
      ]
    },
    "352": {
      "op": "intc_0 // 1",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0",
        "1"
      ]
    },
    "353": {
      "op": "+",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%0#0"
      ]
    },
    "354": {
      "op": "bury 6",
      "defined_out": [
        "aggregate%array_length%0#0",
        "item_index_internal%0#0",
        "numbers#1",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "356": {
      "op": "b forLoop_for_header@6"
    },
    "359": {
      "block": "forLoop_after_for@9",
      "stack_in": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "sum#0"
      ]
    },
    "360": {
      "op": "bury 4",
      "defined_out": [
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "362": {
      "op": "dig 8",
      "defined_out": [
        "reversed#1",
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "reversed#1"
      ]
    },
    "364": {
      "op": "intc_1 // 0",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "reversed#1",
        "0"
      ]
    },
    "365": {
      "op": "extract_uint16",
      "defined_out": [
        "aggregate%array_length%1#0",
        "reversed#1",
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "aggregate%array_length%1#0"
      ]
    },
    "366": {
      "op": "bury 7",
      "defined_out": [
        "aggregate%array_length%1#0",
        "reversed#1",
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "368": {
      "op": "intc_1 // 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%1#0",
        "reversed#1",
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%1#0"
      ]
    },
    "369": {
      "op": "bury 5",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%1#0",
        "reversed#1",
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "371": {
      "block": "forLoop_for_header@10",
      "stack_in": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ],
      "op": "dig 4",
      "defined_out": [
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%1#0"
      ]
    },
    "373": {
      "op": "dig 7",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%1#0",
        "aggregate%array_length%1#0"
      ]
    },
    "375": {
      "op": "<",
      "defined_out": [
        "aggregate%array_length%1#0",
        "continue_looping%2#0",
        "item_index_internal%1#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "continue_looping%2#0"
      ]
    },
    "376": {
      "op": "bz forLoop_after_for@13",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "379": {
      "op": "dig 8",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%1#0",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "reversed#1"
      ]
    },
    "381": {
      "op": "extract 2 0",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%1#0",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "aggregate%array_trimmed%1#0"
      ]
    },
    "384": {
      "op": "dig 5",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%1#0"
      ]
    },
    "386": {
      "op": "dup",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%1#0",
        "item_index_internal%1#0 (copy)",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%1#0 (copy)",
        "item_index_internal%1#0 (copy)"
      ]
    },
    "387": {
      "op": "cover 2",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%1#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%1#0 (copy)"
      ]
    },
    "389": {
      "op": "intc_2 // 8",
      "defined_out": [
        "8",
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%1#0",
        "item_index_internal%1#0 (copy)",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%1#0",
        "aggregate%array_trimmed%1#0",
        "item_index_internal%1#0 (copy)",
        "8"
      ]
    },
    "390": {
      "op": "*",
      "defined_out": [
        "aggregate%array_length%1#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0",
        "item_index_internal%1#0",
        "reversed#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%1#0",
        "aggregate%array_trimmed%1#0",
        "aggregate%bytes_offset%1#0"
      ]
    },
    "391": {
      "op": "extract_uint64",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%1#0",
        "reversed#1",
        "temp\u2082#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%1#0",
        "temp\u2082#0"
      ]
    },
    "392": {
      "op": "dig 5",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%1#0",
        "reversed#1",
        "sum#0",
        "temp\u2082#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%1#0",
        "temp\u2082#0",
        "sum#0"
      ]
    },
    "394": {
      "op": "+",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%1#0",
        "sum#0"
      ]
    },
    "395": {
      "op": "bury 5",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%1#0",
        "reversed#1",
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%1#0"
      ]
    },
    "397": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "aggregate%array_length%1#0",
        "item_index_internal%1#0",
        "reversed#1",
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%1#0",
        "1"
      ]
    },
    "398": {
      "op": "+",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "item_index_internal%1#0"
      ]
    },
    "399": {
      "op": "bury 5",
      "defined_out": [
        "aggregate%array_length%1#0",
        "item_index_internal%1#0",
        "reversed#1",
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "401": {
      "op": "b forLoop_for_header@10"
    },
    "404": {
      "block": "forLoop_after_for@13",
      "stack_in": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ],
      "op": "dig 3",
      "defined_out": [
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "sum#0"
      ]
    },
    "406": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "sum#0",
        "6"
      ]
    },
    "408": {
      "op": "==",
      "defined_out": [
        "sum#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "tmp%1#1"
      ]
    },
    "409": {
      "error": "Sum of reversed array should be 6",
      "op": "assert // Sum of reversed array should be 6",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "410": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "0x151f7c75"
      ]
    },
    "411": {
      "op": "dig 9",
      "defined_out": [
        "0x151f7c75",
        "reversed#1",
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "0x151f7c75",
        "reversed#1"
      ]
    },
    "413": {
      "op": "concat",
      "defined_out": [
        "reversed#1",
        "sum#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "tmp%1#0"
      ]
    },
    "414": {
      "op": "log",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "415": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "reversed#1",
        "sum#0"
      ],
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0",
        "1"
      ]
    },
    "416": {
      "op": "return",
      "stack_out": [
        "reversed#1",
        "aggregate%array_length%0#0",
        "aggregate%array_length%1#0",
        "item_index_internal%0#0",
        "item_index_internal%1#0",
        "sum#0",
        "numbers#0",
        "numbers#1",
        "temp#0"
      ]
    },
    "417": {
      "subroutine": "contracts/ControlFlow/contract.algo.ts::ControlFlow.getDay[routing]",
      "params": {},
      "block": "getDay",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(uint64)%0#0"
      ]
    },
    "420": {
      "op": "btoi",
      "defined_out": [
        "date#0"
      ],
      "stack_out": [
        "date#0"
      ]
    },
    "421": {
      "op": "dup",
      "defined_out": [
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0"
      ]
    },
    "422": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0",
        "1"
      ]
    },
    "423": {
      "op": "==",
      "defined_out": [
        "date#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "date#0",
        "tmp%0#1"
      ]
    },
    "424": {
      "op": "bz getDay_after_if_else@4",
      "stack_out": [
        "date#0"
      ]
    },
    "427": {
      "op": "pushbytes \"Monday\"",
      "defined_out": [
        "date#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%1#0"
      ]
    },
    "435": {
      "block": "getDay_after_inlined_contracts/ControlFlow/contract.algo.ts::ControlFlow.getDay@24",
      "stack_in": [
        "date#0",
        "tmp%1#0"
      ],
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "date#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "436": {
      "op": "len",
      "defined_out": [
        "aggregate%length%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%1#0",
        "aggregate%length%0#0"
      ]
    },
    "437": {
      "op": "itob",
      "defined_out": [
        "aggregate%as_bytes%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%1#0",
        "aggregate%as_bytes%0#0"
      ]
    },
    "438": {
      "op": "extract 6 2",
      "defined_out": [
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%1#0",
        "aggregate%length_uint16%0#0"
      ]
    },
    "441": {
      "op": "swap",
      "stack_out": [
        "date#0",
        "aggregate%length_uint16%0#0",
        "tmp%1#0"
      ]
    },
    "442": {
      "op": "concat",
      "defined_out": [
        "aggregate%encoded_value%0#0"
      ],
      "stack_out": [
        "date#0",
        "aggregate%encoded_value%0#0"
      ]
    },
    "443": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%encoded_value%0#0"
      ],
      "stack_out": [
        "date#0",
        "aggregate%encoded_value%0#0",
        "0x151f7c75"
      ]
    },
    "444": {
      "op": "swap",
      "stack_out": [
        "date#0",
        "0x151f7c75",
        "aggregate%encoded_value%0#0"
      ]
    },
    "445": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%3#0"
      ]
    },
    "446": {
      "op": "log",
      "stack_out": [
        "date#0"
      ]
    },
    "447": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "date#0",
        "1"
      ]
    },
    "448": {
      "op": "return",
      "stack_out": [
        "date#0"
      ]
    },
    "449": {
      "block": "getDay_after_if_else@4",
      "stack_in": [
        "date#0"
      ],
      "op": "dup",
      "defined_out": [
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0"
      ]
    },
    "450": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0",
        "2"
      ]
    },
    "451": {
      "op": "==",
      "defined_out": [
        "date#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "date#0",
        "tmp%1#1"
      ]
    },
    "452": {
      "op": "bz getDay_after_if_else@7",
      "stack_out": [
        "date#0"
      ]
    },
    "455": {
      "op": "pushbytes \"Tuesday\"",
      "defined_out": [
        "date#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%1#0"
      ]
    },
    "464": {
      "op": "b getDay_after_inlined_contracts/ControlFlow/contract.algo.ts::ControlFlow.getDay@24"
    },
    "467": {
      "block": "getDay_after_if_else@7",
      "stack_in": [
        "date#0"
      ],
      "op": "dup",
      "defined_out": [
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0"
      ]
    },
    "468": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0",
        "3"
      ]
    },
    "470": {
      "op": "==",
      "defined_out": [
        "date#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "date#0",
        "tmp%2#1"
      ]
    },
    "471": {
      "op": "bz getDay_after_if_else@10",
      "stack_out": [
        "date#0"
      ]
    },
    "474": {
      "op": "pushbytes \"Wednesday\"",
      "defined_out": [
        "date#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%1#0"
      ]
    },
    "485": {
      "op": "b getDay_after_inlined_contracts/ControlFlow/contract.algo.ts::ControlFlow.getDay@24"
    },
    "488": {
      "block": "getDay_after_if_else@10",
      "stack_in": [
        "date#0"
      ],
      "op": "dup",
      "defined_out": [
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0"
      ]
    },
    "489": {
      "op": "pushint 4 // 4",
      "defined_out": [
        "4",
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0",
        "4"
      ]
    },
    "491": {
      "op": "==",
      "defined_out": [
        "date#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "date#0",
        "tmp%3#1"
      ]
    },
    "492": {
      "op": "bz getDay_after_if_else@13",
      "stack_out": [
        "date#0"
      ]
    },
    "495": {
      "op": "pushbytes \"Thursday\"",
      "defined_out": [
        "date#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%1#0"
      ]
    },
    "505": {
      "op": "b getDay_after_inlined_contracts/ControlFlow/contract.algo.ts::ControlFlow.getDay@24"
    },
    "508": {
      "block": "getDay_after_if_else@13",
      "stack_in": [
        "date#0"
      ],
      "op": "dup",
      "defined_out": [
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0"
      ]
    },
    "509": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0",
        "5"
      ]
    },
    "511": {
      "op": "==",
      "defined_out": [
        "date#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%4#0"
      ]
    },
    "512": {
      "op": "bz getDay_after_if_else@16",
      "stack_out": [
        "date#0"
      ]
    },
    "515": {
      "op": "pushbytes \"Friday\"",
      "defined_out": [
        "date#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%1#0"
      ]
    },
    "523": {
      "op": "b getDay_after_inlined_contracts/ControlFlow/contract.algo.ts::ControlFlow.getDay@24"
    },
    "526": {
      "block": "getDay_after_if_else@16",
      "stack_in": [
        "date#0"
      ],
      "op": "dup",
      "defined_out": [
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0"
      ]
    },
    "527": {
      "op": "pushint 6 // 6",
      "defined_out": [
        "6",
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0",
        "6"
      ]
    },
    "529": {
      "op": "==",
      "defined_out": [
        "date#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%5#0"
      ]
    },
    "530": {
      "op": "bz getDay_after_if_else@19",
      "stack_out": [
        "date#0"
      ]
    },
    "533": {
      "op": "pushbytes \"Saturday\"",
      "defined_out": [
        "date#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%1#0"
      ]
    },
    "543": {
      "op": "b getDay_after_inlined_contracts/ControlFlow/contract.algo.ts::ControlFlow.getDay@24"
    },
    "546": {
      "block": "getDay_after_if_else@19",
      "stack_in": [
        "date#0"
      ],
      "op": "dup",
      "defined_out": [
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0"
      ]
    },
    "547": {
      "op": "pushint 7 // 7",
      "defined_out": [
        "7",
        "date#0"
      ],
      "stack_out": [
        "date#0",
        "date#0",
        "7"
      ]
    },
    "549": {
      "op": "==",
      "defined_out": [
        "date#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%6#0"
      ]
    },
    "550": {
      "op": "bz getDay_after_if_else@22",
      "stack_out": [
        "date#0"
      ]
    },
    "553": {
      "op": "pushbytes \"Sunday\"",
      "defined_out": [
        "date#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%1#0"
      ]
    },
    "561": {
      "op": "b getDay_after_inlined_contracts/ControlFlow/contract.algo.ts::ControlFlow.getDay@24"
    },
    "564": {
      "block": "getDay_after_if_else@22",
      "stack_in": [
        "date#0"
      ],
      "op": "pushbytes \"Invalid day\"",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "date#0",
        "tmp%1#0"
      ]
    },
    "577": {
      "op": "b getDay_after_inlined_contracts/ControlFlow/contract.algo.ts::ControlFlow.getDay@24"
    },
    "580": {
      "subroutine": "contracts/ControlFlow/contract.algo.ts::ControlFlow.calculateBoxStorageCost[routing]",
      "params": {},
      "block": "calculateBoxStorageCost",
      "stack_in": [],
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ],
      "stack_out": [
        "reinterpret_Encoded(len+utf8[])%0#0"
      ]
    },
    "583": {
      "op": "extract 2 0",
      "defined_out": [
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0"
      ]
    },
    "586": {
      "op": "dup",
      "defined_out": [
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxSizeLabel#0"
      ]
    },
    "587": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "boxSizeLabel#0",
        "reinterpret_Encoded(len+utf8[])%1#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxSizeLabel#0",
        "reinterpret_Encoded(len+utf8[])%1#0"
      ]
    },
    "590": {
      "op": "extract 2 0",
      "defined_out": [
        "boxName#0",
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxSizeLabel#0",
        "boxName#0"
      ]
    },
    "593": {
      "op": "len",
      "defined_out": [
        "boxNameLength#0",
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxSizeLabel#0",
        "boxNameLength#0"
      ]
    },
    "594": {
      "op": "swap",
      "defined_out": [
        "boxNameLength#0",
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSizeLabel#0"
      ]
    },
    "595": {
      "op": "pushbytes \"xs\"",
      "defined_out": [
        "\"xs\"",
        "boxNameLength#0",
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSizeLabel#0",
        "\"xs\""
      ]
    },
    "599": {
      "op": "==",
      "defined_out": [
        "boxNameLength#0",
        "boxSizeLabel#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "tmp%1#1"
      ]
    },
    "600": {
      "op": "bz calculateBoxStorageCost_after_if_else@4",
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0"
      ]
    },
    "603": {
      "op": "intc_2 // 8",
      "defined_out": [
        "boxNameLength#0",
        "boxSize#0",
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSize#0"
      ]
    },
    "604": {
      "block": "calculateBoxStorageCost_block@18",
      "stack_in": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSize#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "boxNameLength#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSize#0",
        "boxNameLength#0"
      ]
    },
    "606": {
      "op": "+",
      "defined_out": [
        "boxNameLength#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "tmp%6#0"
      ]
    },
    "607": {
      "op": "pushint 400 // 400",
      "defined_out": [
        "400",
        "boxNameLength#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "tmp%6#0",
        "400"
      ]
    },
    "610": {
      "op": "*",
      "defined_out": [
        "boxNameLength#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "tmp%7#0"
      ]
    },
    "611": {
      "op": "pushint 2500 // 2500",
      "defined_out": [
        "2500",
        "boxNameLength#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "tmp%7#0",
        "2500"
      ]
    },
    "614": {
      "op": "+",
      "defined_out": [
        "boxNameLength#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "tmp%2#0"
      ]
    },
    "615": {
      "block": "calculateBoxStorageCost_after_inlined_contracts/ControlFlow/contract.algo.ts::ControlFlow.calculateBoxStorageCost@19",
      "stack_in": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "tmp%2#0"
      ],
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "616": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "617": {
      "op": "swap",
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "618": {
      "op": "concat",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "tmp%4#0"
      ]
    },
    "619": {
      "op": "log",
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0"
      ]
    },
    "620": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "1"
      ]
    },
    "621": {
      "op": "return",
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0"
      ]
    },
    "622": {
      "block": "calculateBoxStorageCost_after_if_else@4",
      "stack_in": [
        "boxSizeLabel#0",
        "boxNameLength#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSizeLabel#0"
      ]
    },
    "624": {
      "op": "pushbytes \"sm\"",
      "defined_out": [
        "\"sm\"",
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSizeLabel#0",
        "\"sm\""
      ]
    },
    "628": {
      "op": "==",
      "defined_out": [
        "boxSizeLabel#0",
        "tmp%2#1"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "tmp%2#1"
      ]
    },
    "629": {
      "op": "bz calculateBoxStorageCost_after_if_else@7",
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0"
      ]
    },
    "632": {
      "op": "pushint 64 // 64",
      "defined_out": [
        "boxSize#0",
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSize#0"
      ]
    },
    "634": {
      "op": "b calculateBoxStorageCost_block@18"
    },
    "637": {
      "block": "calculateBoxStorageCost_after_if_else@7",
      "stack_in": [
        "boxSizeLabel#0",
        "boxNameLength#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSizeLabel#0"
      ]
    },
    "639": {
      "op": "pushbytes \"md\"",
      "defined_out": [
        "\"md\"",
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSizeLabel#0",
        "\"md\""
      ]
    },
    "643": {
      "op": "==",
      "defined_out": [
        "boxSizeLabel#0",
        "tmp%3#1"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "tmp%3#1"
      ]
    },
    "644": {
      "op": "bz calculateBoxStorageCost_after_if_else@10",
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0"
      ]
    },
    "647": {
      "op": "pushint 256 // 256",
      "defined_out": [
        "boxSize#0",
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSize#0"
      ]
    },
    "650": {
      "op": "b calculateBoxStorageCost_block@18"
    },
    "653": {
      "block": "calculateBoxStorageCost_after_if_else@10",
      "stack_in": [
        "boxSizeLabel#0",
        "boxNameLength#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSizeLabel#0"
      ]
    },
    "655": {
      "op": "pushbytes \"lg\"",
      "defined_out": [
        "\"lg\"",
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSizeLabel#0",
        "\"lg\""
      ]
    },
    "659": {
      "op": "==",
      "defined_out": [
        "boxSizeLabel#0",
        "tmp%4#1"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "tmp%4#1"
      ]
    },
    "660": {
      "op": "bz calculateBoxStorageCost_after_if_else@13",
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0"
      ]
    },
    "663": {
      "op": "pushint 1024 // 1024",
      "defined_out": [
        "boxSize#0",
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSize#0"
      ]
    },
    "666": {
      "op": "b calculateBoxStorageCost_block@18"
    },
    "669": {
      "block": "calculateBoxStorageCost_after_if_else@13",
      "stack_in": [
        "boxSizeLabel#0",
        "boxNameLength#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSizeLabel#0"
      ]
    },
    "671": {
      "op": "pushbytes \"max\"",
      "defined_out": [
        "\"max\"",
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSizeLabel#0",
        "\"max\""
      ]
    },
    "676": {
      "op": "==",
      "defined_out": [
        "boxSizeLabel#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "tmp%5#0"
      ]
    },
    "677": {
      "op": "bz calculateBoxStorageCost_after_if_else@16",
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0"
      ]
    },
    "680": {
      "op": "pushint 32000 // 32000",
      "defined_out": [
        "boxSize#0",
        "boxSizeLabel#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "boxSize#0"
      ]
    },
    "684": {
      "op": "b calculateBoxStorageCost_block@18"
    },
    "687": {
      "block": "calculateBoxStorageCost_after_if_else@16",
      "stack_in": [
        "boxSizeLabel#0",
        "boxNameLength#0"
      ],
      "op": "intc_1 // 0",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "boxSizeLabel#0",
        "boxNameLength#0",
        "tmp%2#0"
      ]
    },
    "688": {
      "op": "b calculateBoxStorageCost_after_inlined_contracts/ControlFlow/contract.algo.ts::ControlFlow.calculateBoxStorageCost@19"
    },
    "691": {
      "subroutine": "contracts/ControlFlow/contract.algo.ts::ControlFlow.loop[routing]",
      "params": {},
      "block": "loop",
      "stack_in": [],
      "op": "pushint 10 // 10"
    },
    "693": {
      "op": "intc_1 // 0",
      "defined_out": [
        "loopCount#0",
        "num#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0"
      ]
    },
    "694": {
      "block": "loop_while_top@2",
      "stack_in": [
        "num#0",
        "loopCount#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "num#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0"
      ]
    },
    "696": {
      "op": "bz loop_block@10",
      "stack_out": [
        "num#0",
        "loopCount#0"
      ]
    },
    "699": {
      "op": "dig 1",
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0"
      ]
    },
    "701": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "num#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0",
        "5"
      ]
    },
    "703": {
      "op": ">",
      "defined_out": [
        "num#0",
        "tmp%1#1"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "tmp%1#1"
      ]
    },
    "704": {
      "op": "bz loop_after_if_else@5",
      "stack_out": [
        "num#0",
        "loopCount#0"
      ]
    },
    "707": {
      "op": "dig 1",
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0"
      ]
    },
    "709": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "num#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0",
        "1"
      ]
    },
    "710": {
      "op": "-",
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0"
      ]
    },
    "711": {
      "op": "bury 2",
      "defined_out": [
        "num#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0"
      ]
    },
    "713": {
      "op": "dup",
      "defined_out": [
        "loopCount#0",
        "num#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "loopCount#0"
      ]
    },
    "714": {
      "op": "intc_0 // 1",
      "stack_out": [
        "num#0",
        "loopCount#0",
        "loopCount#0",
        "1"
      ]
    },
    "715": {
      "op": "+",
      "stack_out": [
        "num#0",
        "loopCount#0",
        "loopCount#0"
      ]
    },
    "716": {
      "op": "bury 1",
      "defined_out": [
        "loopCount#0",
        "num#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0"
      ]
    },
    "718": {
      "op": "b loop_while_top@2"
    },
    "721": {
      "block": "loop_after_if_else@5",
      "stack_in": [
        "num#0",
        "loopCount#0"
      ],
      "op": "dig 1",
      "defined_out": [
        "num#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0"
      ]
    },
    "723": {
      "op": "intc_3 // 2",
      "defined_out": [
        "2",
        "num#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0",
        "2"
      ]
    },
    "724": {
      "op": "-",
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0"
      ]
    },
    "725": {
      "op": "dup",
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0",
        "num#0"
      ]
    },
    "726": {
      "op": "bury 3",
      "defined_out": [
        "num#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0"
      ]
    },
    "728": {
      "op": "dig 1",
      "defined_out": [
        "loopCount#0",
        "num#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0",
        "loopCount#0"
      ]
    },
    "730": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "loopCount#0",
        "num#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0",
        "loopCount#0",
        "1"
      ]
    },
    "731": {
      "op": "+",
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0",
        "loopCount#0"
      ]
    },
    "732": {
      "op": "bury 2",
      "defined_out": [
        "loopCount#0",
        "num#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0"
      ]
    },
    "734": {
      "op": "intc_0 // 1",
      "stack_out": [
        "num#0",
        "loopCount#0",
        "num#0",
        "1"
      ]
    },
    "735": {
      "op": "==",
      "defined_out": [
        "loopCount#0",
        "num#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "tmp%6#0"
      ]
    },
    "736": {
      "op": "bz loop_while_top@2",
      "stack_out": [
        "num#0",
        "loopCount#0"
      ]
    },
    "739": {
      "block": "loop_block@10",
      "stack_in": [
        "num#0",
        "loopCount#0"
      ],
      "op": "dup",
      "defined_out": [
        "loopCount#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "loopCount#0"
      ]
    },
    "740": {
      "op": "itob",
      "defined_out": [
        "aggregate%val_as_bytes%0#0",
        "loopCount#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "741": {
      "op": "bytec_0 // 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0",
        "loopCount#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "aggregate%val_as_bytes%0#0",
        "0x151f7c75"
      ]
    },
    "742": {
      "op": "swap",
      "stack_out": [
        "num#0",
        "loopCount#0",
        "0x151f7c75",
        "aggregate%val_as_bytes%0#0"
      ]
    },
    "743": {
      "op": "concat",
      "defined_out": [
        "loopCount#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "tmp%2#0"
      ]
    },
    "744": {
      "op": "log",
      "stack_out": [
        "num#0",
        "loopCount#0"
      ]
    },
    "745": {
      "op": "intc_0 // 1",
      "defined_out": [
        "1",
        "loopCount#0"
      ],
      "stack_out": [
        "num#0",
        "loopCount#0",
        "1"
      ]
    },
    "746": {
      "op": "return",
      "stack_out": [
        "num#0",
        "loopCount#0"
      ]
    }
  }
}