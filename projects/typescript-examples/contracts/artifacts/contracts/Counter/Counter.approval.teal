#pragma version 11
#pragma typetrack false

// @algorandfoundation/algorand-typescript/arc4/index.d.ts::Contract.approvalProgram() -> uint64:
main:
    intcblock 0 1
    bytecblock "counter"
    txn ApplicationID
    bnz main_after_if_else@2
    // contracts/Counter/contract.algo.ts:8
    // public counter = GlobalState<uint64>({ initialValue: Uint64(0) })
    bytec_0 // "counter"
    intc_0 // 0
    app_global_put

main_after_if_else@2:
    // contracts/Counter/contract.algo.ts:7
    // export default class Counter extends Contract {
    txn NumAppArgs
    bz main___algots__.defaultCreate@7
    pushbytes 0x4a325901 // method "increment()uint64"
    txna ApplicationArgs 0
    match main_increment_route@5
    err

main_increment_route@5:
    // contracts/Counter/contract.algo.ts:14
    // public increment(): uint64 {
    txn OnCompletion
    !
    txn ApplicationID
    &&
    assert // OnCompletion must be NoOp && can only call when not creating
    b increment

main___algots__.defaultCreate@7:
    // contracts/Counter/contract.algo.ts:7
    // export default class Counter extends Contract {
    txn OnCompletion
    !
    txn ApplicationID
    !
    &&
    return // on error: OnCompletion must be NoOp && can only call when creating


// contracts/Counter/contract.algo.ts::Counter.increment[routing]() -> void:
increment:
    // contracts/Counter/contract.algo.ts:15
    // this.counter.value = this.counter.value + 1
    intc_0 // 0
    // contracts/Counter/contract.algo.ts:8
    // public counter = GlobalState<uint64>({ initialValue: Uint64(0) })
    bytec_0 // "counter"
    // contracts/Counter/contract.algo.ts:15
    // this.counter.value = this.counter.value + 1
    app_global_get_ex
    assert // check GlobalState exists
    intc_1 // 1
    +
    // contracts/Counter/contract.algo.ts:8
    // public counter = GlobalState<uint64>({ initialValue: Uint64(0) })
    bytec_0 // "counter"
    // contracts/Counter/contract.algo.ts:15
    // this.counter.value = this.counter.value + 1
    dig 1
    app_global_put
    // contracts/Counter/contract.algo.ts:14
    // public increment(): uint64 {
    itob
    pushbytes 0x151f7c75
    swap
    concat
    log
    intc_1 // 1
    return
