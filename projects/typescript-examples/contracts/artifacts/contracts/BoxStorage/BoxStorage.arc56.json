{
    "name": "BoxStorage",
    "structs": {},
    "methods": [
        {
            "name": "setBoxBytes",
            "args": [
                {
                    "type": "string",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "bool",
                "desc": "boolean"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "setBoxInt method",
            "events": [],
            "recommendations": {}
        },
        {
            "name": "setBoxInt",
            "args": [
                {
                    "type": "uint64",
                    "name": "value"
                }
            ],
            "returns": {
                "type": "bool",
                "desc": "boolean"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "desc": "setBoxInt method",
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "desc": "A simple box storage example contract",
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 0,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {},
            "box": {
                "boxInt": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "Ym94SW50"
                },
                "boxBytes": {
                    "keyType": "AVMString",
                    "valueType": "AVMBytes",
                    "key": "Ym94Qnl0ZXM="
                }
            }
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {}
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        54,
                        79
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        111
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        57,
                        82
                    ],
                    "errorMessage": "can only call when not creating"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYXJjNC9pbmRleC5kLnRzOjpDb250cmFjdC5hcHByb3ZhbFByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBpbnRjYmxvY2sgMSAwCiAgICBieXRlY2Jsb2NrIDB4MDAgMHgxNTFmN2M3NSAiYm94Qnl0ZXMiCiAgICAvLyBjb250cmFjdHMvQm94U3RvcmFnZS9jb250cmFjdC5hbGdvLnRzOjYKICAgIC8vIGV4cG9ydCBkZWZhdWx0IGNsYXNzIEJveFN0b3JhZ2UgZXh0ZW5kcyBhcmM0LkNvbnRyYWN0IHsKICAgIHR4biBOdW1BcHBBcmdzCiAgICBieiBtYWluX2JhcmVfcm91dGluZ0A3CiAgICBwdXNoYnl0ZXNzIDB4ZjFlNjgxY2IgMHg4MjExMTY3OCAvLyBtZXRob2QgInNldEJveEJ5dGVzKHN0cmluZylib29sIiwgbWV0aG9kICJzZXRCb3hJbnQodWludDY0KWJvb2wiCiAgICB0eG5hIEFwcGxpY2F0aW9uQXJncyAwCiAgICBtYXRjaCBtYWluX3NldEJveEJ5dGVzX3JvdXRlQDMgbWFpbl9zZXRCb3hJbnRfcm91dGVANAoKbWFpbl9hZnRlcl9pZl9lbHNlQDExOgogICAgLy8gY29udHJhY3RzL0JveFN0b3JhZ2UvY29udHJhY3QuYWxnby50czo2CiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBCb3hTdG9yYWdlIGV4dGVuZHMgYXJjNC5Db250cmFjdCB7CiAgICBpbnRjXzEgLy8gMAogICAgcmV0dXJuCgptYWluX3NldEJveEludF9yb3V0ZUA0OgogICAgLy8gY29udHJhY3RzL0JveFN0b3JhZ2UvY29udHJhY3QuYWxnby50czoyNQogICAgLy8gQGFyYzQuYWJpbWV0aG9kKHsgYWxsb3dBY3Rpb25zOiBbJ05vT3AnXSwgcmVhZG9ubHk6IGZhbHNlIH0pCiAgICB0eG4gT25Db21wbGV0aW9uCiAgICAhCiAgICBhc3NlcnQgLy8gT25Db21wbGV0aW9uIGlzIG5vdCBOb09wCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBub3QgY3JlYXRpbmcKICAgIC8vIGNvbnRyYWN0cy9Cb3hTdG9yYWdlL2NvbnRyYWN0LmFsZ28udHM6NgogICAgLy8gZXhwb3J0IGRlZmF1bHQgY2xhc3MgQm94U3RvcmFnZSBleHRlbmRzIGFyYzQuQ29udHJhY3QgewogICAgdHhuYSBBcHBsaWNhdGlvbkFyZ3MgMQogICAgYnRvaQogICAgLy8gY29udHJhY3RzL0JveFN0b3JhZ2UvY29udHJhY3QuYWxnby50czoyNQogICAgLy8gQGFyYzQuYWJpbWV0aG9kKHsgYWxsb3dBY3Rpb25zOiBbJ05vT3AnXSwgcmVhZG9ubHk6IGZhbHNlIH0pCiAgICBjYWxsc3ViIHNldEJveEludAogICAgYnl0ZWNfMCAvLyAweDAwCiAgICBpbnRjXzEgLy8gMAogICAgdW5jb3ZlciAyCiAgICBzZXRiaXQKICAgIGJ5dGVjXzEgLy8gMHgxNTFmN2M3NQogICAgc3dhcAogICAgY29uY2F0CiAgICBsb2cKICAgIGludGNfMCAvLyAxCiAgICByZXR1cm4KCm1haW5fc2V0Qm94Qnl0ZXNfcm91dGVAMzoKICAgIC8vIGNvbnRyYWN0cy9Cb3hTdG9yYWdlL2NvbnRyYWN0LmFsZ28udHM6MTQKICAgIC8vIEBhcmM0LmFiaW1ldGhvZCh7IGFsbG93QWN0aW9uczogWydOb09wJ10sIHJlYWRvbmx5OiBmYWxzZSB9KQogICAgdHhuIE9uQ29tcGxldGlvbgogICAgIQogICAgYXNzZXJ0IC8vIE9uQ29tcGxldGlvbiBpcyBub3QgTm9PcAogICAgdHhuIEFwcGxpY2F0aW9uSUQKICAgIGFzc2VydCAvLyBjYW4gb25seSBjYWxsIHdoZW4gbm90IGNyZWF0aW5nCiAgICAvLyBjb250cmFjdHMvQm94U3RvcmFnZS9jb250cmFjdC5hbGdvLnRzOjYKICAgIC8vIGV4cG9ydCBkZWZhdWx0IGNsYXNzIEJveFN0b3JhZ2UgZXh0ZW5kcyBhcmM0LkNvbnRyYWN0IHsKICAgIHR4bmEgQXBwbGljYXRpb25BcmdzIDEKICAgIGV4dHJhY3QgMiAwCiAgICAvLyBjb250cmFjdHMvQm94U3RvcmFnZS9jb250cmFjdC5hbGdvLnRzOjE0CiAgICAvLyBAYXJjNC5hYmltZXRob2QoeyBhbGxvd0FjdGlvbnM6IFsnTm9PcCddLCByZWFkb25seTogZmFsc2UgfSkKICAgIGNhbGxzdWIgc2V0Qm94Qnl0ZXMKICAgIGJ5dGVjXzAgLy8gMHgwMAogICAgaW50Y18xIC8vIDAKICAgIHVuY292ZXIgMgogICAgc2V0Yml0CiAgICBieXRlY18xIC8vIDB4MTUxZjdjNzUKICAgIHN3YXAKICAgIGNvbmNhdAogICAgbG9nCiAgICBpbnRjXzAgLy8gMQogICAgcmV0dXJuCgptYWluX2JhcmVfcm91dGluZ0A3OgogICAgLy8gY29udHJhY3RzL0JveFN0b3JhZ2UvY29udHJhY3QuYWxnby50czo2CiAgICAvLyBleHBvcnQgZGVmYXVsdCBjbGFzcyBCb3hTdG9yYWdlIGV4dGVuZHMgYXJjNC5Db250cmFjdCB7CiAgICB0eG4gT25Db21wbGV0aW9uCiAgICBibnogbWFpbl9hZnRlcl9pZl9lbHNlQDExCiAgICB0eG4gQXBwbGljYXRpb25JRAogICAgIQogICAgYXNzZXJ0IC8vIGNhbiBvbmx5IGNhbGwgd2hlbiBjcmVhdGluZwogICAgaW50Y18wIC8vIDEKICAgIHJldHVybgoKCi8vIGNvbnRyYWN0cy9Cb3hTdG9yYWdlL2NvbnRyYWN0LmFsZ28udHM6OkJveFN0b3JhZ2Uuc2V0Qm94Qnl0ZXModmFsdWU6IGJ5dGVzKSAtPiB1aW50NjQ6CnNldEJveEJ5dGVzOgogICAgLy8gY29udHJhY3RzL0JveFN0b3JhZ2UvY29udHJhY3QuYWxnby50czoxNC0xNQogICAgLy8gQGFyYzQuYWJpbWV0aG9kKHsgYWxsb3dBY3Rpb25zOiBbJ05vT3AnXSwgcmVhZG9ubHk6IGZhbHNlIH0pCiAgICAvLyBwdWJsaWMgc2V0Qm94Qnl0ZXModmFsdWU6IHN0cmluZyk6IGJvb2xlYW4gewogICAgcHJvdG8gMSAxCiAgICAvLyBjb250cmFjdHMvQm94U3RvcmFnZS9jb250cmFjdC5hbGdvLnRzOjgKICAgIC8vIHB1YmxpYyBib3hCeXRlcyA9IEJveDxieXRlcz4oeyBrZXk6ICdib3hCeXRlcycgfSkKICAgIGJ5dGVjXzIgLy8gImJveEJ5dGVzIgogICAgLy8gY29udHJhY3RzL0JveFN0b3JhZ2UvY29udHJhY3QuYWxnby50czoxNgogICAgLy8gdGhpcy5ib3hCeXRlcy52YWx1ZSA9IEJ5dGVzKHZhbHVlKQogICAgYm94X2RlbAogICAgcG9wCiAgICAvLyBjb250cmFjdHMvQm94U3RvcmFnZS9jb250cmFjdC5hbGdvLnRzOjgKICAgIC8vIHB1YmxpYyBib3hCeXRlcyA9IEJveDxieXRlcz4oeyBrZXk6ICdib3hCeXRlcycgfSkKICAgIGJ5dGVjXzIgLy8gImJveEJ5dGVzIgogICAgLy8gY29udHJhY3RzL0JveFN0b3JhZ2UvY29udHJhY3QuYWxnby50czoxNgogICAgLy8gdGhpcy5ib3hCeXRlcy52YWx1ZSA9IEJ5dGVzKHZhbHVlKQogICAgZnJhbWVfZGlnIC0xCiAgICBib3hfcHV0CiAgICAvLyBjb250cmFjdHMvQm94U3RvcmFnZS9jb250cmFjdC5hbGdvLnRzOjE4CiAgICAvLyByZXR1cm4gdHJ1ZQogICAgaW50Y18wIC8vIDEKICAgIHJldHN1YgoKCi8vIGNvbnRyYWN0cy9Cb3hTdG9yYWdlL2NvbnRyYWN0LmFsZ28udHM6OkJveFN0b3JhZ2Uuc2V0Qm94SW50KHZhbHVlOiB1aW50NjQpIC0+IHVpbnQ2NDoKc2V0Qm94SW50OgogICAgLy8gY29udHJhY3RzL0JveFN0b3JhZ2UvY29udHJhY3QuYWxnby50czoyNS0yNgogICAgLy8gQGFyYzQuYWJpbWV0aG9kKHsgYWxsb3dBY3Rpb25zOiBbJ05vT3AnXSwgcmVhZG9ubHk6IGZhbHNlIH0pCiAgICAvLyBwdWJsaWMgc2V0Qm94SW50KHZhbHVlOiB1aW50NjQpOiBib29sZWFuIHsKICAgIHByb3RvIDEgMQogICAgLy8gY29udHJhY3RzL0JveFN0b3JhZ2UvY29udHJhY3QuYWxnby50czoyNwogICAgLy8gdGhpcy5ib3hJbnQudmFsdWUgPSBVaW50NjQodmFsdWUpCiAgICBmcmFtZV9kaWcgLTEKICAgIGl0b2IKICAgIC8vIGNvbnRyYWN0cy9Cb3hTdG9yYWdlL2NvbnRyYWN0LmFsZ28udHM6NwogICAgLy8gcHVibGljIGJveEludCA9IEJveDx1aW50NjQ+KHsga2V5OiAnYm94SW50JyB9KQogICAgcHVzaGJ5dGVzICJib3hJbnQiCiAgICAvLyBjb250cmFjdHMvQm94U3RvcmFnZS9jb250cmFjdC5hbGdvLnRzOjI3CiAgICAvLyB0aGlzLmJveEludC52YWx1ZSA9IFVpbnQ2NCh2YWx1ZSkKICAgIHN3YXAKICAgIGJveF9wdXQKICAgIC8vIGNvbnRyYWN0cy9Cb3hTdG9yYWdlL2NvbnRyYWN0LmFsZ28udHM6MjkKICAgIC8vIHJldHVybiB0cnVlCiAgICBpbnRjXzAgLy8gMQogICAgcmV0c3ViCg==",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBAYWxnb3JhbmRmb3VuZGF0aW9uL2FsZ29yYW5kLXR5cGVzY3JpcHQvYmFzZS1jb250cmFjdC5kLnRzOjpCYXNlQ29udHJhY3QuY2xlYXJTdGF0ZVByb2dyYW0oKSAtPiB1aW50NjQ6Cm1haW46CiAgICBwdXNoaW50IDEgLy8gMQogICAgcmV0dXJuCg=="
    },
    "byteCode": {
        "approval": "CiACAQAmAwEABBUffHUIYm94Qnl0ZXMxG0EAS4ICBPHmgcsEghEWeDYaAI4CABsAAiNDMRkURDEYRDYaAReIAD0oI08CVClMULAiQzEZFEQxGEQ2GgFXAgCIABYoI08CVClMULAiQzEZQP/FMRgURCJDigEBKrxIKov/vyKJigEBi/8WgAZib3hJbnRMvyKJ",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 3,
            "patch": 3
        }
    },
    "events": [],
    "templateVariables": {}
}